{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction InitCache() {\n  var data = {};\n\n  function save(chunk) {\n    var id = chunk.streamId;\n    var representationId = chunk.representationId;\n    data[id] = data[id] || {};\n    data[id][representationId] = chunk;\n  }\n\n  function extract(streamId, representationId) {\n    if (data && data[streamId] && data[streamId][representationId]) {\n      return data[streamId][representationId];\n    } else {\n      return null;\n    }\n  }\n\n  function reset() {\n    data = {};\n  }\n\n  var instance = {\n    save: save,\n    extract: extract,\n    reset: reset\n  };\n  return instance;\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* Represents data structure to keep and drive {DataChunk}\n*/\n\n\nInitCache.__dashjs_factory_name = 'InitCache';\nexports.default = _FactoryMaker2.default.getSingletonFactory(InitCache);","map":{"version":3,"mappings":";;;;;;AAmCA;;;;;;;;AAEA;;AAAA,SAASA,SAAT,GAAqB;EAEjB,IAAIC,OAAO,EAAX;;EAEA,SAASC,IAAT,CAAeC,KAAf,EAAsB;IAClB,IAAMC,KAAKD,MAAME,QAAjB;IACA,IAAMC,mBAAmBH,MAAMG,gBAA/B;IAEAL,KAAKG,EAALH,IAAWA,KAAKG,EAALH,KAAY,EAAvBA;IACAA,KAAKG,EAALH,EAASK,gBAATL,IAA6BE,KAA7BF;EAGJ;;EAAA,SAASM,OAAT,CAAkBF,QAAlB,EAA4BC,gBAA5B,EAA8C;IAC1C,IAAIL,QAAQA,KAAKI,QAALJ,CAARA,IAA0BA,KAAKI,QAALJ,EAAeK,gBAAfL,CAA9B,EAAgE;MAC5D,OAAOA,KAAKI,QAALJ,EAAeK,gBAAfL,CAAP;IADJ,OAEO;MACH,OAAO,IAAP;IAEP;EAGD;;EAAA,SAASO,KAAT,GAAkB;IACdP,OAAO,EAAPA;EAGJ;;EAAA,IAAMQ,WAAW;IACbP,MAAMA,IADO;IAEbK,SAASA,OAFI;IAGbC,OAAOA;EAHM,CAAjB;EAMA,OAAOC,QAAP;AApEJ;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;AAwCAT,UAAUU,qBAAVV,GAAkC,WAAlCA;kBACeW,uBAAaC,mBAAbD,CAAiCX,SAAjCW,C","names":["InitCache","data","save","chunk","id","streamId","representationId","extract","reset","instance","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/utils/InitCache.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Represents data structure to keep and drive {DataChunk}\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction InitCache() {\n\n    let data = {};\n\n    function save (chunk) {\n        const id = chunk.streamId;\n        const representationId = chunk.representationId;\n\n        data[id] = data[id] || {};\n        data[id][representationId] = chunk;\n    }\n\n    function extract (streamId, representationId) {\n        if (data && data[streamId] && data[streamId][representationId]) {\n            return data[streamId][representationId];\n        } else {\n            return null;\n        }\n    }\n\n\n    function reset () {\n        data = {};\n    }\n\n    const instance = {\n        save: save,\n        extract: extract,\n        reset: reset\n    };\n\n    return instance;\n}\n\nInitCache.__dashjs_factory_name = 'InitCache';\nexport default FactoryMaker.getSingletonFactory(InitCache);\n"]},"metadata":{},"sourceType":"script"}