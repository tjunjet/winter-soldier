{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* @classdesc A collection of ClearKey encryption keys with an (optional) associated\n*  type\n* @ignore\n*/\n\n\nvar ClearKeyKeySet = function () {\n  /**\n  * @param {Array.<KeyPair>} keyPairs\n  * @param {string} type the type of keys in this set.  One of either 'persistent'\n  * or 'temporary'.  Can also be null or undefined.\n  * @class\n  * @ignore\n  */\n  function ClearKeyKeySet(keyPairs, type) {\n    _classCallCheck(this, ClearKeyKeySet);\n\n    if (type && type !== 'persistent' && type !== 'temporary') throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\n    this.keyPairs = keyPairs;\n    this.type = type;\n  }\n  /**\n  * Convert this key set to its JSON Web Key (JWK) representation\n  *\n  * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\n  */\n\n\n  _createClass(ClearKeyKeySet, [{\n    key: 'toJWK',\n    value: function toJWK() {\n      var i = void 0;\n      var numKeys = this.keyPairs.length;\n      var jwk = {\n        keys: []\n      };\n\n      for (i = 0; i < numKeys; i++) {\n        var key = {\n          kty: 'oct',\n          alg: 'A128KW',\n          kid: this.keyPairs[i].keyID,\n          k: this.keyPairs[i].key\n        };\n        jwk.keys.push(key);\n      }\n\n      if (this.type) {\n        jwk.type = this.type;\n      }\n\n      var jwkString = JSON.stringify(jwk);\n      var len = jwkString.length; // Convert JSON string to ArrayBuffer\n\n      var buf = new ArrayBuffer(len);\n      var bView = new Uint8Array(buf);\n\n      for (i = 0; i < len; i++) {\n        bView[i] = jwkString.charCodeAt(i);\n      }\n\n      return buf;\n    }\n  }]);\n\n  return ClearKeyKeySet;\n}();\n\nexports.default = ClearKeyKeySet;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;;;IAKMA,c;EACF;;;;;;;EAOA,wBAAYC,QAAZ,EAAsBC,IAAtB,EAA4B;IAAAC;;IACxB,IAAID,QAAQA,SAAS,YAAjBA,IAAiCA,SAAS,WAA9C,EACI,MAAM,IAAIE,KAAJ,CAAU,gFAAV,CAAN;IACJ,KAAKH,QAAL,GAAgBA,QAAhB;IACA,KAAKC,IAAL,GAAYA,IAAZ;EAGJ;EAAA;;;;;;;;;4BAKQ;MACJ,IAAIG,UAAJ;MACA,IAAIC,UAAU,KAAKL,QAAL,CAAcM,MAA5B;MACA,IAAIC,MAAM;QAACC,MAAM;MAAP,CAAV;;MAEA,KAAKJ,IAAI,CAAT,EAAYA,IAAIC,OAAhB,EAAyBD,GAAzB,EAA8B;QAC1B,IAAIK,MAAM;UACNC,KAAK,KADC;UAENC,KAAK,QAFC;UAGNC,KAAK,KAAKZ,QAAL,CAAcI,CAAd,EAAiBS,KAHhB;UAINC,GAAG,KAAKd,QAAL,CAAcI,CAAd,EAAiBK;QAJd,CAAV;QAMAF,IAAIC,IAAJD,CAASQ,IAATR,CAAcE,GAAdF;MAEJ;;MAAA,IAAI,KAAKN,IAAT,EAAe;QACXM,IAAIN,IAAJM,GAAW,KAAKN,IAAhBM;MAEJ;;MAAA,IAAIS,YAAYC,KAAKC,SAALD,CAAeV,GAAfU,CAAhB;MACA,IAAME,MAAMH,UAAUV,MAAtB,CAlBI,CAoBJ;;MACA,IAAIc,MAAM,IAAIC,WAAJ,CAAgBF,GAAhB,CAAV;MACA,IAAIG,QAAQ,IAAIC,UAAJ,CAAeH,GAAf,CAAZ;;MACA,KAAKhB,IAAI,CAAT,EAAYA,IAAIe,GAAhB,EAAqBf,GAArB;QACIkB,MAAMlB,CAANkB,IAAWN,UAAUQ,UAAVR,CAAqBZ,CAArBY,CAAXM;MACJ;;MAAA,OAAOF,GAAP;;;;;;;kBAIOrB,c","names":["ClearKeyKeySet","keyPairs","type","_classCallCheck","Error","i","numKeys","length","jwk","keys","key","kty","alg","kid","keyID","k","push","jwkString","JSON","stringify","len","buf","ArrayBuffer","bView","Uint8Array","charCodeAt"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/protection/vo/ClearKeyKeySet.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @classdesc A collection of ClearKey encryption keys with an (optional) associated\n *  type\n * @ignore\n */\nclass ClearKeyKeySet {\n    /**\n     * @param {Array.<KeyPair>} keyPairs\n     * @param {string} type the type of keys in this set.  One of either 'persistent'\n     * or 'temporary'.  Can also be null or undefined.\n     * @class\n     * @ignore\n     */\n    constructor(keyPairs, type) {\n        if (type && type !== 'persistent' && type !== 'temporary')\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\n        this.keyPairs = keyPairs;\n        this.type = type;\n    }\n\n    /**\n     * Convert this key set to its JSON Web Key (JWK) representation\n     *\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\n     */\n    toJWK() {\n        let i;\n        let numKeys = this.keyPairs.length;\n        let jwk = {keys: []};\n\n        for (i = 0; i < numKeys; i++) {\n            let key = {\n                kty: 'oct',\n                alg: 'A128KW',\n                kid: this.keyPairs[i].keyID,\n                k: this.keyPairs[i].key\n            };\n            jwk.keys.push(key);\n        }\n        if (this.type) {\n            jwk.type = this.type;\n        }\n        let jwkString = JSON.stringify(jwk);\n        const len = jwkString.length;\n\n        // Convert JSON string to ArrayBuffer\n        let buf = new ArrayBuffer(len);\n        let bView = new Uint8Array(buf);\n        for (i = 0; i < len; i++)\n            bView[i] = jwkString.charCodeAt(i);\n        return buf;\n    }\n}\n\nexport default ClearKeyKeySet;\n"]},"metadata":{},"sourceType":"script"}