{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _URIFragmentData = require('../vo/URIFragmentData');\n\nvar _URIFragmentData2 = _interopRequireDefault(_URIFragmentData);\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* Model class managing URI fragments.\n* @ignore\n*/\n\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nfunction URIFragmentModel() {\n  var instance = void 0,\n      URIFragmentDataVO = void 0;\n  /**\n  * @param {string} uri The URI to parse for fragment extraction\n  * @memberof module:URIFragmentModel\n  * @instance\n  */\n\n  function initialize(uri) {\n    URIFragmentDataVO = new _URIFragmentData2.default();\n    if (!uri) return null;\n    var hashIndex = uri.indexOf('#');\n\n    if (hashIndex !== -1) {\n      var fragments = uri.substr(hashIndex + 1).split('&');\n\n      for (var i = 0, len = fragments.length; i < len; ++i) {\n        var fragment = fragments[i];\n        var equalIndex = fragment.indexOf('=');\n\n        if (equalIndex !== -1) {\n          var key = fragment.substring(0, equalIndex);\n\n          if (URIFragmentDataVO.hasOwnProperty(key)) {\n            URIFragmentDataVO[key] = fragment.substr(equalIndex + 1);\n          }\n        }\n      }\n    }\n  }\n  /**\n  * @returns {URIFragmentData} Object containing supported URI fragments\n  * @memberof module:URIFragmentModel\n  * @instance\n  */\n\n\n  function getURIFragmentData() {\n    return URIFragmentDataVO;\n  }\n\n  instance = {\n    initialize: initialize,\n    getURIFragmentData: getURIFragmentData\n  };\n  return instance;\n}\n\nURIFragmentModel.__dashjs_factory_name = 'URIFragmentModel';\nexports.default = _FactoryMaker2.default.getSingletonFactory(URIFragmentModel);","map":{"version":3,"mappings":";;;;;;AA+BA;;;;AACA;;;;;;;;AAEA;AAAA;;;;;AAlCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,SAASA,gBAAT,GAA4B;EAExB,IAAIC,iBAAJ;EAAA,IACIC,0BADJ;EAGA;;;;;;EAKA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;IACrBF,oBAAoB,IAAIG,yBAAJ,EAApBH;IAEA,IAAI,CAACE,GAAL,EAAU,OAAO,IAAP;IAEV,IAAME,YAAYF,IAAIG,OAAJH,CAAY,GAAZA,CAAlB;;IACA,IAAIE,cAAc,CAAC,CAAnB,EAAsB;MAClB,IAAME,YAAYJ,IAAIK,MAAJL,CAAWE,YAAY,CAAvBF,EAA0BM,KAA1BN,CAAgC,GAAhCA,CAAlB;;MACA,KAAK,IAAIO,IAAI,CAAR,EAAWC,MAAMJ,UAAUK,MAAhC,EAAwCF,IAAIC,GAA5C,EAAiD,EAAED,CAAnD,EAAsD;QAClD,IAAMG,WAAWN,UAAUG,CAAVH,CAAjB;QACA,IAAMO,aAAaD,SAASP,OAATO,CAAiB,GAAjBA,CAAnB;;QACA,IAAIC,eAAe,CAAC,CAApB,EAAuB;UACnB,IAAMC,MAAMF,SAASG,SAATH,CAAmB,CAAnBA,EAAqBC,UAArBD,CAAZ;;UACA,IAAIZ,kBAAkBgB,cAAlBhB,CAAiCc,GAAjCd,CAAJ,EAA2C;YACvCA,kBAAkBc,GAAlBd,IAAyBY,SAASL,MAATK,CAAgBC,aAAa,CAA7BD,CAAzBZ;UAEP;QACJ;MACJ;IACJ;EAED;EAAA;;;;;;;EAKA,SAASiB,kBAAT,GAA8B;IAC1B,OAAOjB,iBAAP;EAGJD;;EAAAA,WAAW;IACPE,YAAYA,UADL;IAEPgB,oBAAoBA;EAFb,CAAXlB;EAKA,OAAOA,QAAP;AAGJD;;AAAAA,iBAAiBoB,qBAAjBpB,GAAyC,kBAAzCA;kBACeqB,uBAAaC,mBAAbD,CAAiCrB,gBAAjCqB,C","names":["URIFragmentModel","instance","URIFragmentDataVO","initialize","uri","URIFragmentData","hashIndex","indexOf","fragments","substr","split","i","len","length","fragment","equalIndex","key","substring","hasOwnProperty","getURIFragmentData","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/models/URIFragmentModel.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport URIFragmentData from '../vo/URIFragmentData';\nimport FactoryMaker from '../../core/FactoryMaker';\n\n/**\n * Model class managing URI fragments.\n * @ignore\n */\nfunction URIFragmentModel() {\n\n    let instance,\n        URIFragmentDataVO;\n\n    /**\n     * @param {string} uri The URI to parse for fragment extraction\n     * @memberof module:URIFragmentModel\n     * @instance\n     */\n    function initialize(uri) {\n        URIFragmentDataVO = new URIFragmentData();\n\n        if (!uri) return null;\n\n        const hashIndex = uri.indexOf('#');\n        if (hashIndex !== -1) {\n            const fragments = uri.substr(hashIndex + 1).split('&');\n            for (let i = 0, len = fragments.length; i < len; ++i) {\n                const fragment = fragments[i];\n                const equalIndex = fragment.indexOf('=');\n                if (equalIndex !== -1) {\n                    const key = fragment.substring(0,equalIndex);\n                    if (URIFragmentDataVO.hasOwnProperty(key)) {\n                        URIFragmentDataVO[key] = fragment.substr(equalIndex + 1);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @returns {URIFragmentData} Object containing supported URI fragments\n     * @memberof module:URIFragmentModel\n     * @instance\n     */\n    function getURIFragmentData() {\n        return URIFragmentDataVO;\n    }\n\n    instance = {\n        initialize: initialize,\n        getURIFragmentData: getURIFragmentData\n    };\n\n    return instance;\n}\n\nURIFragmentModel.__dashjs_factory_name = 'URIFragmentModel';\nexport default FactoryMaker.getSingletonFactory(URIFragmentModel);\n"]},"metadata":{},"sourceType":"script"}