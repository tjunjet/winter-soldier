{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _UTCTiming = require('../../dash/vo/UTCTiming');\n\nvar _UTCTiming2 = _interopRequireDefault(_UTCTiming);\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _Constants = require('../constants/Constants');\n\nvar _Constants2 = _interopRequireDefault(_Constants);\n\nvar _ABRRulesCollection = require('../rules/abr/ABRRulesCollection');\n\nvar _ABRRulesCollection2 = _interopRequireDefault(_ABRRulesCollection);\n\nvar _Settings = require('../../core/Settings');\n\nvar _Settings2 = _interopRequireDefault(_Settings);\n\nvar _SupervisorTools = require('../utils/SupervisorTools');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nvar DEFAULT_MIN_BUFFER_TIME = 12;\nvar DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH = 20;\nvar DEFAULT_LOW_LATENCY_LIVE_DELAY = 3.0;\nvar LOW_LATENCY_REDUCTION_FACTOR = 10;\nvar LOW_LATENCY_MULTIPLY_FACTOR = 5;\nvar DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR = 4;\nvar MINIMUM_LIVE_LATENCY_CATCHUP = 5;\nvar DEFAULT_XHR_WITH_CREDENTIALS = false;\n\nfunction MediaPlayerModel() {\n  var instance = void 0,\n      UTCTimingSources = void 0,\n      xhrWithCredentials = void 0,\n      customABRRule = void 0;\n  var context = this.context;\n  var settings = (0, _Settings2.default)(context).getInstance();\n\n  function setup() {\n    UTCTimingSources = [];\n    xhrWithCredentials = {\n      default: DEFAULT_XHR_WITH_CREDENTIALS\n    };\n    customABRRule = [];\n  } //TODO Should we use Object.define to have setters/getters? makes more readable code on other side.\n\n\n  function findABRCustomRuleIndex(rulename) {\n    var i = void 0;\n\n    for (i = 0; i < customABRRule.length; i++) {\n      if (customABRRule[i].rulename === rulename) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  function getABRCustomRules() {\n    return customABRRule;\n  }\n\n  function addABRCustomRule(type, rulename, rule) {\n    if (typeof type !== 'string' || type !== _ABRRulesCollection2.default.ABANDON_FRAGMENT_RULES && type !== _ABRRulesCollection2.default.QUALITY_SWITCH_RULES || typeof rulename !== 'string') {\n      throw _Constants2.default.BAD_ARGUMENT_ERROR;\n    }\n\n    var index = findABRCustomRuleIndex(rulename);\n\n    if (index === -1) {\n      // add rule\n      customABRRule.push({\n        type: type,\n        rulename: rulename,\n        rule: rule\n      });\n    } else {\n      // update rule\n      customABRRule[index].type = type;\n      customABRRule[index].rule = rule;\n    }\n  }\n\n  function removeABRCustomRule(rulename) {\n    if (rulename) {\n      var index = findABRCustomRuleIndex(rulename); //if no rulename custom rule has been found, do nothing\n\n      if (index !== -1) {\n        // remove rule\n        customABRRule.splice(index, 1);\n      }\n    } else {\n      //if no rulename is defined, remove all ABR custome rules\n      customABRRule = [];\n    }\n  }\n\n  function getStableBufferTime() {\n    if (settings.get().streaming.lowLatencyEnabled) {\n      return getLiveDelay() * 0.6;\n    }\n\n    var stableBufferTime = settings.get().streaming.stableBufferTime;\n    return stableBufferTime > -1 ? stableBufferTime : settings.get().streaming.fastSwitchEnabled ? DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH : DEFAULT_MIN_BUFFER_TIME;\n  }\n\n  function getRetryAttemptsForType(type) {\n    var lowLatencyMultiplyFactor = !isNaN(settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor) ? settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor : LOW_LATENCY_MULTIPLY_FACTOR;\n    return settings.get().streaming.lowLatencyEnabled ? settings.get().streaming.retryAttempts[type] * lowLatencyMultiplyFactor : settings.get().streaming.retryAttempts[type];\n  }\n\n  function getRetryIntervalsForType(type) {\n    var lowLatencyReductionFactor = !isNaN(settings.get().streaming.retryIntervals.lowLatencyReductionFactor) ? settings.get().streaming.retryIntervals.lowLatencyReductionFactor : LOW_LATENCY_REDUCTION_FACTOR;\n    return settings.get().streaming.lowLatencyEnabled ? settings.get().streaming.retryIntervals[type] / lowLatencyReductionFactor : settings.get().streaming.retryIntervals[type];\n  }\n\n  function getLiveDelay() {\n    if (settings.get().streaming.lowLatencyEnabled) {\n      return settings.get().streaming.liveDelay || DEFAULT_LOW_LATENCY_LIVE_DELAY;\n    }\n\n    return settings.get().streaming.liveDelay;\n  }\n\n  function getLiveCatchupLatencyThreshold() {\n    try {\n      var liveCatchupLatencyThreshold = settings.get().streaming.liveCatchup.latencyThreshold;\n      var liveDelay = getLiveDelay();\n\n      if (liveCatchupLatencyThreshold !== null && !isNaN(liveCatchupLatencyThreshold)) {\n        return Math.max(liveCatchupLatencyThreshold, liveDelay);\n      }\n\n      var liveCatchupMinDrift = settings.get().streaming.liveCatchup.minDrift;\n      var maximumLiveDelay = !isNaN(liveDelay) && liveDelay ? !isNaN(liveCatchupMinDrift) ? settings.get().streaming.liveCatchup.minDrift + getLiveDelay() : getLiveDelay() : NaN;\n\n      if (maximumLiveDelay && !isNaN(maximumLiveDelay)) {\n        return Math.max(maximumLiveDelay * DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR, MINIMUM_LIVE_LATENCY_CATCHUP);\n      }\n\n      return NaN;\n    } catch (e) {\n      return NaN;\n    }\n  }\n\n  function addUTCTimingSource(schemeIdUri, value) {\n    removeUTCTimingSource(schemeIdUri, value); //check if it already exists and remove if so.\n\n    var vo = new _UTCTiming2.default();\n    vo.schemeIdUri = schemeIdUri;\n    vo.value = value;\n    UTCTimingSources.push(vo);\n  }\n\n  function getUTCTimingSources() {\n    return UTCTimingSources;\n  }\n\n  function removeUTCTimingSource(schemeIdUri, value) {\n    (0, _SupervisorTools.checkParameterType)(schemeIdUri, 'string');\n    (0, _SupervisorTools.checkParameterType)(value, 'string');\n    UTCTimingSources.forEach(function (obj, idx) {\n      if (obj.schemeIdUri === schemeIdUri && obj.value === value) {\n        UTCTimingSources.splice(idx, 1);\n      }\n    });\n  }\n\n  function clearDefaultUTCTimingSources() {\n    UTCTimingSources = [];\n  }\n\n  function restoreDefaultUTCTimingSources() {\n    var defaultUtcTimingSource = settings.get().streaming.utcSynchronization.defaultTimingSource;\n    addUTCTimingSource(defaultUtcTimingSource.scheme, defaultUtcTimingSource.value);\n  }\n\n  function setXHRWithCredentialsForType(type, value) {\n    if (!type) {\n      Object.keys(xhrWithCredentials).forEach(function (key) {\n        setXHRWithCredentialsForType(key, value);\n      });\n    } else {\n      xhrWithCredentials[type] = !!value;\n    }\n  }\n\n  function getXHRWithCredentialsForType(type) {\n    var useCreds = xhrWithCredentials[type];\n    return useCreds === undefined ? xhrWithCredentials.default : useCreds;\n  }\n\n  function getDefaultUtcTimingSource() {\n    return settings.get().streaming.utcSynchronization.defaultTimingSource;\n  }\n\n  function reset() {//TODO need to figure out what props to persist across sessions and which to reset if any.\n    //setup();\n  }\n\n  instance = {\n    getABRCustomRules: getABRCustomRules,\n    addABRCustomRule: addABRCustomRule,\n    removeABRCustomRule: removeABRCustomRule,\n    getStableBufferTime: getStableBufferTime,\n    getRetryAttemptsForType: getRetryAttemptsForType,\n    getRetryIntervalsForType: getRetryIntervalsForType,\n    getLiveDelay: getLiveDelay,\n    getLiveCatchupLatencyThreshold: getLiveCatchupLatencyThreshold,\n    addUTCTimingSource: addUTCTimingSource,\n    removeUTCTimingSource: removeUTCTimingSource,\n    getUTCTimingSources: getUTCTimingSources,\n    clearDefaultUTCTimingSources: clearDefaultUTCTimingSources,\n    restoreDefaultUTCTimingSources: restoreDefaultUTCTimingSources,\n    setXHRWithCredentialsForType: setXHRWithCredentialsForType,\n    getXHRWithCredentialsForType: getXHRWithCredentialsForType,\n    getDefaultUtcTimingSource: getDefaultUtcTimingSource,\n    reset: reset\n  };\n  setup();\n  return instance;\n} //TODO see if you can move this and not export and just getter to get default value.\n\n\nMediaPlayerModel.__dashjs_factory_name = 'MediaPlayerModel';\nexports.default = _FactoryMaker2.default.getSingletonFactory(MediaPlayerModel);","map":{"version":3,"mappings":"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","names":["DEFAULT_MIN_BUFFER_TIME","DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH","DEFAULT_LOW_LATENCY_LIVE_DELAY","LOW_LATENCY_REDUCTION_FACTOR","LOW_LATENCY_MULTIPLY_FACTOR","DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR","MINIMUM_LIVE_LATENCY_CATCHUP","DEFAULT_XHR_WITH_CREDENTIALS","MediaPlayerModel","instance","UTCTimingSources","xhrWithCredentials","customABRRule","context","settings","getInstance","setup","default","findABRCustomRuleIndex","rulename","i","length","getABRCustomRules","addABRCustomRule","type","rule","ABRRulesCollection","ABANDON_FRAGMENT_RULES","QUALITY_SWITCH_RULES","Constants","BAD_ARGUMENT_ERROR","index","push","removeABRCustomRule","splice","getStableBufferTime","get","streaming","lowLatencyEnabled","getLiveDelay","stableBufferTime","fastSwitchEnabled","getRetryAttemptsForType","lowLatencyMultiplyFactor","isNaN","retryAttempts","getRetryIntervalsForType","lowLatencyReductionFactor","retryIntervals","liveDelay","getLiveCatchupLatencyThreshold","liveCatchupLatencyThreshold","liveCatchup","latencyThreshold","Math","max","liveCatchupMinDrift","minDrift","maximumLiveDelay","NaN","e","addUTCTimingSource","schemeIdUri","value","removeUTCTimingSource","vo","UTCTiming","getUTCTimingSources","forEach","obj","idx","clearDefaultUTCTimingSources","restoreDefaultUTCTimingSources","defaultUtcTimingSource","utcSynchronization","defaultTimingSource","scheme","setXHRWithCredentialsForType","Object","keys","key","getXHRWithCredentialsForType","useCreds","undefined","getDefaultUtcTimingSource","reset","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/models/MediaPlayerModel.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport UTCTiming from '../../dash/vo/UTCTiming';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Constants from '../constants/Constants';\nimport ABRRulesCollection from '../rules/abr/ABRRulesCollection';\nimport Settings from '../../core/Settings';\nimport {checkParameterType} from '../utils/SupervisorTools';\n\n\nconst DEFAULT_MIN_BUFFER_TIME = 12;\nconst DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH = 20;\n\nconst DEFAULT_LOW_LATENCY_LIVE_DELAY = 3.0;\nconst LOW_LATENCY_REDUCTION_FACTOR = 10;\nconst LOW_LATENCY_MULTIPLY_FACTOR = 5;\nconst DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR = 4;\nconst MINIMUM_LIVE_LATENCY_CATCHUP = 5;\n\nconst DEFAULT_XHR_WITH_CREDENTIALS = false;\n\nfunction MediaPlayerModel() {\n\n    let instance,\n        UTCTimingSources,\n        xhrWithCredentials,\n        customABRRule;\n\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n\n    function setup() {\n        UTCTimingSources = [];\n        xhrWithCredentials = {\n            default: DEFAULT_XHR_WITH_CREDENTIALS\n        };\n        customABRRule = [];\n    }\n\n    //TODO Should we use Object.define to have setters/getters? makes more readable code on other side.\n    function findABRCustomRuleIndex(rulename) {\n        let i;\n        for (i = 0; i < customABRRule.length; i++) {\n            if (customABRRule[i].rulename === rulename) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function getABRCustomRules() {\n        return customABRRule;\n    }\n\n    function addABRCustomRule(type, rulename, rule) {\n        if (typeof type !== 'string' || (type !== ABRRulesCollection.ABANDON_FRAGMENT_RULES && type !== ABRRulesCollection.QUALITY_SWITCH_RULES) ||\n            typeof rulename !== 'string') {\n            throw Constants.BAD_ARGUMENT_ERROR;\n        }\n        let index = findABRCustomRuleIndex(rulename);\n        if (index === -1) {\n            // add rule\n            customABRRule.push({\n                type: type,\n                rulename: rulename,\n                rule: rule\n            });\n        } else {\n            // update rule\n            customABRRule[index].type = type;\n            customABRRule[index].rule = rule;\n        }\n    }\n\n    function removeABRCustomRule(rulename) {\n        if (rulename) {\n            let index = findABRCustomRuleIndex(rulename);\n            //if no rulename custom rule has been found, do nothing\n            if (index !== -1) {\n                // remove rule\n                customABRRule.splice(index, 1);\n            }\n        } else {\n            //if no rulename is defined, remove all ABR custome rules\n            customABRRule = [];\n        }\n    }\n\n    function getStableBufferTime() {\n        if (settings.get().streaming.lowLatencyEnabled) {\n            return getLiveDelay() * 0.6;\n        }\n\n        const stableBufferTime = settings.get().streaming.stableBufferTime;\n        return stableBufferTime > -1 ? stableBufferTime : settings.get().streaming.fastSwitchEnabled ? DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH : DEFAULT_MIN_BUFFER_TIME;\n    }\n\n    function getRetryAttemptsForType(type) {\n        const lowLatencyMultiplyFactor = !isNaN(settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor) ? settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor : LOW_LATENCY_MULTIPLY_FACTOR;\n\n        return settings.get().streaming.lowLatencyEnabled ? settings.get().streaming.retryAttempts[type] * lowLatencyMultiplyFactor : settings.get().streaming.retryAttempts[type];\n    }\n\n    function getRetryIntervalsForType(type) {\n        const lowLatencyReductionFactor = !isNaN(settings.get().streaming.retryIntervals.lowLatencyReductionFactor) ? settings.get().streaming.retryIntervals.lowLatencyReductionFactor : LOW_LATENCY_REDUCTION_FACTOR;\n\n        return settings.get().streaming.lowLatencyEnabled ? settings.get().streaming.retryIntervals[type] / lowLatencyReductionFactor : settings.get().streaming.retryIntervals[type];\n    }\n\n    function getLiveDelay() {\n        if (settings.get().streaming.lowLatencyEnabled) {\n            return settings.get().streaming.liveDelay || DEFAULT_LOW_LATENCY_LIVE_DELAY;\n        }\n        return settings.get().streaming.liveDelay;\n    }\n\n    function getLiveCatchupLatencyThreshold() {\n        try {\n            const liveCatchupLatencyThreshold = settings.get().streaming.liveCatchup.latencyThreshold;\n            const liveDelay = getLiveDelay();\n\n            if (liveCatchupLatencyThreshold !== null && !isNaN(liveCatchupLatencyThreshold)) {\n                return Math.max(liveCatchupLatencyThreshold, liveDelay);\n            }\n\n\n            const liveCatchupMinDrift = settings.get().streaming.liveCatchup.minDrift;\n            const maximumLiveDelay = !isNaN(liveDelay) && liveDelay ? !isNaN(liveCatchupMinDrift) ? settings.get().streaming.liveCatchup.minDrift + getLiveDelay() : getLiveDelay() : NaN;\n\n            if (maximumLiveDelay && !isNaN(maximumLiveDelay)) {\n                return Math.max(maximumLiveDelay * DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR, MINIMUM_LIVE_LATENCY_CATCHUP);\n            }\n\n            return NaN;\n\n        } catch (e) {\n            return NaN;\n        }\n    }\n\n    function addUTCTimingSource(schemeIdUri, value) {\n        removeUTCTimingSource(schemeIdUri, value); //check if it already exists and remove if so.\n        let vo = new UTCTiming();\n        vo.schemeIdUri = schemeIdUri;\n        vo.value = value;\n        UTCTimingSources.push(vo);\n    }\n\n    function getUTCTimingSources() {\n        return UTCTimingSources;\n    }\n\n    function removeUTCTimingSource(schemeIdUri, value) {\n        checkParameterType(schemeIdUri, 'string');\n        checkParameterType(value, 'string');\n        UTCTimingSources.forEach(function (obj, idx) {\n            if (obj.schemeIdUri === schemeIdUri && obj.value === value) {\n                UTCTimingSources.splice(idx, 1);\n            }\n        });\n    }\n\n    function clearDefaultUTCTimingSources() {\n        UTCTimingSources = [];\n    }\n\n    function restoreDefaultUTCTimingSources() {\n        let defaultUtcTimingSource = settings.get().streaming.utcSynchronization.defaultTimingSource;\n        addUTCTimingSource(defaultUtcTimingSource.scheme, defaultUtcTimingSource.value);\n    }\n\n    function setXHRWithCredentialsForType(type, value) {\n        if (!type) {\n            Object.keys(xhrWithCredentials).forEach(key => {\n                setXHRWithCredentialsForType(key, value);\n            });\n        } else {\n            xhrWithCredentials[type] = !!value;\n        }\n    }\n\n    function getXHRWithCredentialsForType(type) {\n        const useCreds = xhrWithCredentials[type];\n\n        return useCreds === undefined ? xhrWithCredentials.default : useCreds;\n    }\n\n    function getDefaultUtcTimingSource() {\n        return settings.get().streaming.utcSynchronization.defaultTimingSource;\n    }\n\n    function reset() {\n        //TODO need to figure out what props to persist across sessions and which to reset if any.\n        //setup();\n    }\n\n    instance = {\n        getABRCustomRules,\n        addABRCustomRule,\n        removeABRCustomRule,\n        getStableBufferTime,\n        getRetryAttemptsForType,\n        getRetryIntervalsForType,\n        getLiveDelay,\n        getLiveCatchupLatencyThreshold,\n        addUTCTimingSource,\n        removeUTCTimingSource,\n        getUTCTimingSources,\n        clearDefaultUTCTimingSources,\n        restoreDefaultUTCTimingSources,\n        setXHRWithCredentialsForType,\n        getXHRWithCredentialsForType,\n        getDefaultUtcTimingSource,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\n//TODO see if you can move this and not export and just getter to get default value.\nMediaPlayerModel.__dashjs_factory_name = 'MediaPlayerModel';\nexport default FactoryMaker.getSingletonFactory(MediaPlayerModel);\n"]},"metadata":{},"sourceType":"script"}