{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* @class\n* @ignore\n*/\n\n\nvar QoeInfo = function QoeInfo() {\n  _classCallCheck(this, QoeInfo); // Type e.g. 'segment'\n\n\n  this.type = null; // Store lastBitrate for calculation of bitrateSwitchWSum\n\n  this.lastBitrate = null; // Weights for each Qoe factor\n\n  this.weights = {};\n  this.weights.bitrateReward = null;\n  this.weights.bitrateSwitchPenalty = null;\n  this.weights.rebufferPenalty = null;\n  this.weights.latencyPenalty = null;\n  this.weights.playbackSpeedPenalty = null; // Weighted Sum for each Qoe factor\n\n  this.bitrateWSum = 0; // kbps\n\n  this.bitrateSwitchWSum = 0; // kbps\n\n  this.rebufferWSum = 0; // seconds\n\n  this.latencyWSum = 0; // seconds\n\n  this.playbackSpeedWSum = 0; // e.g. 0.95, 1.0, 1.05\n  // Store total Qoe value based on current Weighted Sum values\n\n  this.totalQoe = 0;\n};\n\nexports.default = QoeInfo;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;;IAIMA,O,GAEF,mBAAc;EAAAC,gCACV;;;EACA,KAAKC,IAAL,GAAY,IAAZ,CAFU,CAIV;;EACA,KAAKC,WAAL,GAAmB,IAAnB,CALU,CAOV;;EACA,KAAKC,OAAL,GAAe,EAAf;EACA,KAAKA,OAAL,CAAaC,aAAb,GAA6B,IAA7B;EACA,KAAKD,OAAL,CAAaE,oBAAb,GAAoC,IAApC;EACA,KAAKF,OAAL,CAAaG,eAAb,GAA+B,IAA/B;EACA,KAAKH,OAAL,CAAaI,cAAb,GAA8B,IAA9B;EACA,KAAKJ,OAAL,CAAaK,oBAAb,GAAoC,IAApC,CAbU,CAeV;;EACA,KAAKC,WAAL,GAAmB,CAAnB,CAhBU,CAgBsB;;EAChC,KAAKC,iBAAL,GAAyB,CAAzB,CAjBU,CAiBsB;;EAChC,KAAKC,YAAL,GAAoB,CAApB,CAlBU,CAkBsB;;EAChC,KAAKC,WAAL,GAAmB,CAAnB,CAnBU,CAmBsB;;EAChC,KAAKC,iBAAL,GAAyB,CAAzB,CApBU,CAoBsB;EAEhC;;EACA,KAAKC,QAAL,GAAgB,CAAhB;;;kBAIOf,O","names":["QoeInfo","_classCallCheck","type","lastBitrate","weights","bitrateReward","bitrateSwitchPenalty","rebufferPenalty","latencyPenalty","playbackSpeedPenalty","bitrateWSum","bitrateSwitchWSum","rebufferWSum","latencyWSum","playbackSpeedWSum","totalQoe"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/rules/abr/lolp/QoeInfo.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass QoeInfo {\n\n    constructor() {\n        // Type e.g. 'segment'\n        this.type = null;\n\n        // Store lastBitrate for calculation of bitrateSwitchWSum\n        this.lastBitrate = null;\n\n        // Weights for each Qoe factor\n        this.weights = {};\n        this.weights.bitrateReward = null;\n        this.weights.bitrateSwitchPenalty = null;\n        this.weights.rebufferPenalty = null;\n        this.weights.latencyPenalty = null;\n        this.weights.playbackSpeedPenalty = null;\n\n        // Weighted Sum for each Qoe factor\n        this.bitrateWSum = 0;           // kbps\n        this.bitrateSwitchWSum = 0;     // kbps\n        this.rebufferWSum = 0;          // seconds\n        this.latencyWSum = 0;           // seconds\n        this.playbackSpeedWSum = 0;     // e.g. 0.95, 1.0, 1.05\n\n        // Store total Qoe value based on current Weighted Sum values\n        this.totalQoe = 0;\n    }\n}\n\nexport default QoeInfo;\n"]},"metadata":{},"sourceType":"script"}