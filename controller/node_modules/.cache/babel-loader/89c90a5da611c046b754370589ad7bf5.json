{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.supportsMediaSource = supportsMediaSource;\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _ThumbnailTracks = require('../thumbnail/ThumbnailTracks');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nvar codecCompatibilityTable = [{\n  'codec': 'avc1',\n  'compatibleCodecs': ['avc3']\n}, {\n  'codec': 'avc3',\n  'compatibleCodecs': ['avc1']\n}];\n\nfunction supportsMediaSource() {\n  var hasWebKit = ('WebKitMediaSource' in window);\n  var hasMediaSource = ('MediaSource' in window);\n  return hasWebKit || hasMediaSource;\n}\n\nfunction Capabilities() {\n  var instance = void 0,\n      encryptedMediaSupported = void 0;\n\n  function setup() {\n    encryptedMediaSupported = false;\n  }\n  /**\n  * Returns whether Encrypted Media Extensions are supported on this\n  * user agent\n  *\n  * @return {boolean} true if EME is supported, false otherwise\n  */\n\n\n  function supportsEncryptedMedia() {\n    return encryptedMediaSupported;\n  }\n  /**\n  *\n  * @param {boolean} value\n  */\n\n\n  function setEncryptedMediaSupported(value) {\n    encryptedMediaSupported = value;\n  }\n  /**\n  * Check if a codec is supported by the MediaSource\n  * @param {string} codec\n  * @return {boolean}\n  */\n\n\n  function supportsCodec(codec) {\n    if ('MediaSource' in window && MediaSource.isTypeSupported(codec)) {\n      return true;\n    }\n\n    if ('WebKitMediaSource' in window && WebKitMediaSource.isTypeSupported(codec)) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n  * Check if a specific EssentialProperty is supported\n  * @param {object} ep\n  * @return {boolean}\n  */\n\n\n  function supportsEssentialProperty(ep) {\n    try {\n      return _ThumbnailTracks.THUMBNAILS_SCHEME_ID_URIS.indexOf(ep.schemeIdUri) !== -1;\n    } catch (e) {\n      return true;\n    }\n  }\n  /**\n  * Check if the root of the old codec is the same as the new one, or if it's declared as compatible in the compat table\n  * @param {string} codec1\n  * @param {string} codec2\n  * @return {boolean}\n  */\n\n\n  function codecRootCompatibleWithCodec(codec1, codec2) {\n    var codecRoot = codec1.split('.')[0];\n    var rootCompatible = codec2.indexOf(codecRoot) === 0;\n    var compatTableCodec = void 0;\n\n    for (var i = 0; i < codecCompatibilityTable.length; i++) {\n      if (codecCompatibilityTable[i].codec === codecRoot) {\n        compatTableCodec = codecCompatibilityTable[i];\n        break;\n      }\n    }\n\n    if (compatTableCodec) {\n      return rootCompatible || compatTableCodec.compatibleCodecs.some(function (compatibleCodec) {\n        return codec2.indexOf(compatibleCodec) === 0;\n      });\n    }\n\n    return rootCompatible;\n  }\n\n  instance = {\n    supportsMediaSource: supportsMediaSource,\n    supportsEncryptedMedia: supportsEncryptedMedia,\n    supportsCodec: supportsCodec,\n    setEncryptedMediaSupported: setEncryptedMediaSupported,\n    supportsEssentialProperty: supportsEssentialProperty,\n    codecRootCompatibleWithCodec: codecRootCompatibleWithCodec\n  };\n  setup();\n  return instance;\n}\n\nCapabilities.__dashjs_factory_name = 'Capabilities';\nexports.default = _FactoryMaker2.default.getSingletonFactory(Capabilities);","map":{"version":3,"mappings":";;;;;QA4CgBA;;AAdhB;;;;AACA;;;;;;AA/BA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,IAAMC,0BAA0B,CAC5B;EACI,SAAS,MADb;EAEI,oBAAoB,CAAC,MAAD;AAFxB,CAD4B,EAK5B;EACI,SAAS,MADb;EAEI,oBAAoB,CAAC,MAAD;AAFxB,CAL4B,CAAhC;;AAWO,SAASD,mBAAT,GAA+B;EAClC,IAAIE,aAAa,uBAAuBC,MAApCD,CAAJ;EACA,IAAIE,kBAAkB,iBAAiBD,MAAnCC,CAAJ;EAEA,OAAQF,aAAaE,cAArB;AAGJ;;AAAA,SAASC,YAAT,GAAwB;EAEpB,IAAIC,iBAAJ;EAAA,IACIC,gCADJ;;EAGA,SAASC,KAAT,GAAiB;IACbD,0BAA0B,KAA1BA;EAGJ;EAAA;;;;;;;;EAMA,SAASE,sBAAT,GAAkC;IAC9B,OAAOF,uBAAP;EAGJ;EAAA;;;;;;EAIA,SAASG,0BAAT,CAAoCC,KAApC,EAA2C;IACvCJ,0BAA0BI,KAA1BJ;EAGJ;EAAA;;;;;;;EAKA,SAASK,aAAT,CAAuBC,KAAvB,EAA8B;IAC1B,IAAI,iBAAiBV,MAAjB,IAA2BW,YAAYC,eAAZD,CAA4BD,KAA5BC,CAA/B,EAAmE;MAC/D,OAAO,IAAP;IAGJ;;IAAA,IAAI,uBAAuBX,MAAvB,IAAiCa,kBAAkBD,eAAlBC,CAAkCH,KAAlCG,CAArC,EAA+E;MAC3E,OAAO,IAAP;IAGJ;;IAAA,OAAO,KAAP;EAGJ;EAAA;;;;;;;EAKA,SAASC,yBAAT,CAAmCC,EAAnC,EAAuC;IACnC,IAAI;MACA,OAAOC,2CAA0BC,OAA1BD,CAAkCD,GAAGG,WAArCF,MAAsD,CAAC,CAA9D;IACF,CAFF,CAEE,OAAOG,CAAP,EAAU;MACR,OAAO,IAAP;IAEP;EAED;EAAA;;;;;;;;EAMA,SAASC,4BAAT,CAAsCC,MAAtC,EAA8CC,MAA9C,EAAsD;IAClD,IAAMC,YAAYF,OAAOG,KAAPH,CAAa,GAAbA,EAAkB,CAAlBA,CAAlB;IACA,IAAMI,iBAAiBH,OAAOL,OAAPK,CAAeC,SAAfD,MAA8B,CAArD;IACA,IAAII,yBAAJ;;IACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI7B,wBAAwB8B,MAA5C,EAAoDD,GAApD,EAAyD;MACrD,IAAI7B,wBAAwB6B,CAAxB7B,EAA2BY,KAA3BZ,KAAqCyB,SAAzC,EAAoD;QAChDG,mBAAmB5B,wBAAwB6B,CAAxB7B,CAAnB4B;QACA;MAEP;IACD;;IAAA,IAAIA,gBAAJ,EAAsB;MAClB,OAAOD,kBAAkBC,iBAAiBG,gBAAjBH,CAAkCI,IAAlCJ,CAAuC,UAACK,eAAD;QAAA,OAAqBT,OAAOL,OAAPK,CAAeS,eAAfT,MAAoC,CAAzD;MAAvC,EAAzB;IAEJ;;IAAA,OAAOG,cAAP;EAGJtB;;EAAAA,WAAW;IACPN,wCADO;IAEPS,8CAFO;IAGPG,4BAHO;IAIPF,sDAJO;IAKPO,oDALO;IAMPM;EANO,CAAXjB;EASAE;EAEA,OAAOF,QAAP;AAGJD;;AAAAA,aAAa8B,qBAAb9B,GAAqC,cAArCA;kBACe+B,uBAAaC,mBAAbD,CAAiC/B,YAAjC+B,C","names":["supportsMediaSource","codecCompatibilityTable","hasWebKit","window","hasMediaSource","Capabilities","instance","encryptedMediaSupported","setup","supportsEncryptedMedia","setEncryptedMediaSupported","value","supportsCodec","codec","MediaSource","isTypeSupported","WebKitMediaSource","supportsEssentialProperty","ep","THUMBNAILS_SCHEME_ID_URIS","indexOf","schemeIdUri","e","codecRootCompatibleWithCodec","codec1","codec2","codecRoot","split","rootCompatible","compatTableCodec","i","length","compatibleCodecs","some","compatibleCodec","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/utils/Capabilities.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport {THUMBNAILS_SCHEME_ID_URIS} from '../thumbnail/ThumbnailTracks';\n\nconst codecCompatibilityTable = [\n    {\n        'codec': 'avc1',\n        'compatibleCodecs': ['avc3']\n    },\n    {\n        'codec': 'avc3',\n        'compatibleCodecs': ['avc1']\n    }\n];\n\nexport function supportsMediaSource() {\n    let hasWebKit = ('WebKitMediaSource' in window);\n    let hasMediaSource = ('MediaSource' in window);\n\n    return (hasWebKit || hasMediaSource);\n}\n\nfunction Capabilities() {\n\n    let instance,\n        encryptedMediaSupported;\n\n    function setup() {\n        encryptedMediaSupported = false;\n    }\n\n    /**\n     * Returns whether Encrypted Media Extensions are supported on this\n     * user agent\n     *\n     * @return {boolean} true if EME is supported, false otherwise\n     */\n    function supportsEncryptedMedia() {\n        return encryptedMediaSupported;\n    }\n\n    /**\n     *\n     * @param {boolean} value\n     */\n    function setEncryptedMediaSupported(value) {\n        encryptedMediaSupported = value;\n    }\n\n    /**\n     * Check if a codec is supported by the MediaSource\n     * @param {string} codec\n     * @return {boolean}\n     */\n    function supportsCodec(codec) {\n        if ('MediaSource' in window && MediaSource.isTypeSupported(codec)) {\n            return true;\n        }\n\n        if ('WebKitMediaSource' in window && WebKitMediaSource.isTypeSupported(codec)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if a specific EssentialProperty is supported\n     * @param {object} ep\n     * @return {boolean}\n     */\n    function supportsEssentialProperty(ep) {\n        try {\n            return THUMBNAILS_SCHEME_ID_URIS.indexOf(ep.schemeIdUri) !== -1;\n        } catch (e) {\n            return true;\n        }\n    }\n\n    /**\n     * Check if the root of the old codec is the same as the new one, or if it's declared as compatible in the compat table\n     * @param {string} codec1\n     * @param {string} codec2\n     * @return {boolean}\n     */\n    function codecRootCompatibleWithCodec(codec1, codec2) {\n        const codecRoot = codec1.split('.')[0];\n        const rootCompatible = codec2.indexOf(codecRoot) === 0;\n        let compatTableCodec;\n        for (let i = 0; i < codecCompatibilityTable.length; i++) {\n            if (codecCompatibilityTable[i].codec === codecRoot) {\n                compatTableCodec = codecCompatibilityTable[i];\n                break;\n            }\n        }\n        if (compatTableCodec) {\n            return rootCompatible || compatTableCodec.compatibleCodecs.some((compatibleCodec) => codec2.indexOf(compatibleCodec) === 0);\n        }\n        return rootCompatible;\n    }\n\n    instance = {\n        supportsMediaSource,\n        supportsEncryptedMedia,\n        supportsCodec,\n        setEncryptedMediaSupported,\n        supportsEssentialProperty,\n        codecRootCompatibleWithCodec\n    };\n\n    setup();\n\n    return instance;\n}\n\nCapabilities.__dashjs_factory_name = 'Capabilities';\nexport default FactoryMaker.getSingletonFactory(Capabilities);\n"]},"metadata":{},"sourceType":"script"}