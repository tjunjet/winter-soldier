{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _KeyPair = require('../vo/KeyPair');\n\nvar _KeyPair2 = _interopRequireDefault(_KeyPair);\n\nvar _ClearKeyKeySet = require('../vo/ClearKeyKeySet');\n\nvar _ClearKeyKeySet2 = _interopRequireDefault(_ClearKeyKeySet);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* CableLabs ClearKey license server implementation\n*\n* For testing purposes and evaluating potential uses for ClearKey, we have developed\n* a dirt-simple API for requesting ClearKey licenses from a remote server.\n*\n* @implements LicenseServer\n* @class\n*/\n\n\nfunction ClearKey() {\n  var instance = void 0;\n\n  function getServerURLFromMessage(url\n  /* message, messageType*/\n  ) {\n    return url;\n  }\n\n  function getHTTPMethod()\n  /*messageType*/\n  {\n    return 'POST';\n  }\n\n  function getResponseType()\n  /*keySystemStr*/\n  {\n    return 'json';\n  }\n\n  function getLicenseMessage(serverResponse\n  /*, keySystemStr, messageType*/\n  ) {\n    if (!serverResponse.hasOwnProperty('keys')) {\n      return null;\n    }\n\n    var keyPairs = [];\n\n    for (var i = 0; i < serverResponse.keys.length; i++) {\n      var keypair = serverResponse.keys[i];\n      var keyid = keypair.kid.replace(/=/g, '');\n      var key = keypair.k.replace(/=/g, '');\n      keyPairs.push(new _KeyPair2.default(keyid, key));\n    }\n\n    return new _ClearKeyKeySet2.default(keyPairs);\n  }\n\n  function getErrorResponse(serverResponse\n  /*, keySystemStr, messageType*/\n  ) {\n    return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n  }\n\n  instance = {\n    getServerURLFromMessage: getServerURLFromMessage,\n    getHTTPMethod: getHTTPMethod,\n    getResponseType: getResponseType,\n    getLicenseMessage: getLicenseMessage,\n    getErrorResponse: getErrorResponse\n  };\n  return instance;\n}\n\nClearKey.__dashjs_factory_name = 'ClearKey';\nexports.default = dashjs.FactoryMaker.getSingletonFactory(ClearKey);\n/* jshint ignore:line */","map":{"version":3,"mappings":";;;;;;AAwCA;;;;AACA;;;;;;;;AAzCA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;;;;;;;AAYA,SAASA,QAAT,GAAoB;EAEhB,IAAIC,iBAAJ;;EAEA,SAASC,uBAAT,CAAiCC;EAAI;EAArC,EAAgE;IAC5D,OAAOA,GAAP;EAGJ;;EAAA,SAASC,aAAT;EAAuB;EAAiB;IACpC,OAAO,MAAP;EAGJ;;EAAA,SAASC,eAAT;EAAyB;EAAkB;IACvC,OAAO,MAAP;EAGJ;;EAAA,SAASC,iBAAT,CAA2BC;EAAc;EAAzC,EAA0E;IACtE,IAAI,CAACA,eAAeC,cAAfD,CAA8B,MAA9BA,CAAL,EAA4C;MACxC,OAAO,IAAP;IAEJ;;IAAA,IAAIE,WAAW,EAAf;;IACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,eAAeI,IAAfJ,CAAoBK,MAAxC,EAAgDF,GAAhD,EAAqD;MACjD,IAAIG,UAAUN,eAAeI,IAAfJ,CAAoBG,CAApBH,CAAd;MACA,IAAIO,QAAQD,QAAQE,GAARF,CAAYG,OAAZH,CAAoB,IAApBA,EAA0B,EAA1BA,CAAZ;MACA,IAAII,MAAMJ,QAAQK,CAARL,CAAUG,OAAVH,CAAkB,IAAlBA,EAAwB,EAAxBA,CAAV;MAEAJ,SAASU,IAATV,CAAc,IAAIW,iBAAJ,CAAYN,KAAZ,EAAmBG,GAAnB,CAAdR;IAEJ;;IAAA,OAAO,IAAIY,wBAAJ,CAAmBZ,QAAnB,CAAP;EAGJ;;EAAA,SAASa,gBAAT,CAA0Bf;EAAc;EAAxC,EAAyE;IACrE,OAAOgB,OAAOC,YAAPD,CAAoBE,KAApBF,CAA0B,IAA1BA,EAAgC,IAAIG,UAAJ,CAAenB,cAAf,CAAhCgB,CAAP;EAGJtB;;EAAAA,WAAW;IACPC,yBAAyBA,uBADlB;IAEPE,eAAeA,aAFR;IAGPC,iBAAiBA,eAHV;IAIPC,mBAAmBA,iBAJZ;IAKPgB,kBAAkBA;EALX,CAAXrB;EAQA,OAAOA,QAAP;AAGJD;;AAAAA,SAAS2B,qBAAT3B,GAAiC,UAAjCA;kBACe4B,OAAOC,YAAPD,CAAoBE,mBAApBF,CAAwC5B,QAAxC4B,C;AAAmD","names":["ClearKey","instance","getServerURLFromMessage","url","getHTTPMethod","getResponseType","getLicenseMessage","serverResponse","hasOwnProperty","keyPairs","i","keys","length","keypair","keyid","kid","replace","key","k","push","KeyPair","ClearKeyKeySet","getErrorResponse","String","fromCharCode","apply","Uint8Array","__dashjs_factory_name","dashjs","FactoryMaker","getSingletonFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/protection/servers/ClearKey.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * CableLabs ClearKey license server implementation\n *\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\n *\n * @implements LicenseServer\n * @class\n */\nimport KeyPair from '../vo/KeyPair';\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\n\nfunction ClearKey() {\n\n    let instance;\n\n    function getServerURLFromMessage(url /* message, messageType*/) {\n        return url;\n    }\n\n    function getHTTPMethod(/*messageType*/) {\n        return 'POST';\n    }\n\n    function getResponseType(/*keySystemStr*/) {\n        return 'json';\n    }\n\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\n        if (!serverResponse.hasOwnProperty('keys')) {\n            return null;\n        }\n        let keyPairs = [];\n        for (let i = 0; i < serverResponse.keys.length; i++) {\n            let keypair = serverResponse.keys[i];\n            let keyid = keypair.kid.replace(/=/g, '');\n            let key = keypair.k.replace(/=/g, '');\n\n            keyPairs.push(new KeyPair(keyid, key));\n        }\n        return new ClearKeyKeySet(keyPairs);\n    }\n\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\n    }\n\n    instance = {\n        getServerURLFromMessage: getServerURLFromMessage,\n        getHTTPMethod: getHTTPMethod,\n        getResponseType: getResponseType,\n        getLicenseMessage: getLicenseMessage,\n        getErrorResponse: getErrorResponse\n    };\n\n    return instance;\n}\n\nClearKey.__dashjs_factory_name = 'ClearKey';\nexport default dashjs.FactoryMaker.getSingletonFactory(ClearKey); /* jshint ignore:line */\n"]},"metadata":{},"sourceType":"script"}