{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _Debug = require('../../../core/Debug');\n\nvar _Debug2 = _interopRequireDefault(_Debug);\n\nvar _SwitchRequest = require('../SwitchRequest');\n\nvar _SwitchRequest2 = _interopRequireDefault(_SwitchRequest);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction SwitchHistoryRule() {\n  var context = this.context;\n  var instance = void 0,\n      logger = void 0; //MAX_SWITCH is the number of drops made. It doesn't consider the size of the drop.\n\n  var MAX_SWITCH = 0.075; //Before this number of switch requests(no switch or actual), don't apply the rule.\n  //must be < SwitchRequestHistory SWITCH_REQUEST_HISTORY_DEPTH to enable rule\n\n  var SAMPLE_SIZE = 6;\n\n  function setup() {\n    logger = (0, _Debug2.default)(context).getInstance().getLogger(instance);\n  }\n\n  function getMaxIndex(rulesContext) {\n    var switchRequestHistory = rulesContext ? rulesContext.getSwitchHistory() : null;\n    var switchRequests = switchRequestHistory ? switchRequestHistory.getSwitchRequests() : [];\n    var drops = 0;\n    var noDrops = 0;\n    var dropSize = 0;\n    var switchRequest = (0, _SwitchRequest2.default)(context).create();\n\n    for (var i = 0; i < switchRequests.length; i++) {\n      if (switchRequests[i] !== undefined) {\n        drops += switchRequests[i].drops;\n        noDrops += switchRequests[i].noDrops;\n        dropSize += switchRequests[i].dropSize;\n\n        if (drops + noDrops >= SAMPLE_SIZE && drops / noDrops > MAX_SWITCH) {\n          switchRequest.quality = i > 0 && switchRequests[i].drops > 0 ? i - 1 : i;\n          switchRequest.reason = {\n            index: switchRequest.quality,\n            drops: drops,\n            noDrops: noDrops,\n            dropSize: dropSize\n          };\n          logger.debug('Switch history rule index: ' + switchRequest.quality + ' samples: ' + (drops + noDrops) + ' drops: ' + drops);\n          break;\n        }\n      }\n    }\n\n    return switchRequest;\n  }\n\n  instance = {\n    getMaxIndex: getMaxIndex\n  };\n  setup();\n  return instance;\n}\n\nSwitchHistoryRule.__dashjs_factory_name = 'SwitchHistoryRule';\nexports.default = _FactoryMaker2.default.getClassFactory(SwitchHistoryRule);","map":{"version":3,"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA;;AAAA,SAASA,iBAAT,GAA6B;EAEzB,IAAMC,UAAU,KAAKA,OAArB;EAEA,IAAIC,iBAAJ;EAAA,IACIC,eADJ,CAJyB,CAOzB;;EACA,IAAMC,aAAa,KAAnB,CARyB,CAUzB;EACA;;EACA,IAAMC,cAAc,CAApB;;EAEA,SAASC,KAAT,GAAiB;IACbH,SAAS,qBAAMF,OAAN,EAAeM,WAAf,GAA6BC,SAA7B,CAAuCN,QAAvC,CAATC;EAGJ;;EAAA,SAASM,WAAT,CAAqBC,YAArB,EAAmC;IAC/B,IAAMC,uBAAuBD,eAAeA,aAAaE,gBAAbF,EAAfA,GAAiD,IAA9E;IACA,IAAMG,iBAAiBF,uBAAuBA,qBAAqBG,iBAArBH,EAAvBA,GAAkE,EAAzF;IACA,IAAII,QAAQ,CAAZ;IACA,IAAIC,UAAU,CAAd;IACA,IAAIC,WAAW,CAAf;IACA,IAAMC,gBAAgB,6BAAcjB,OAAd,EAAuBkB,MAAvB,EAAtB;;IAEA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIP,eAAeQ,MAAnC,EAA2CD,GAA3C,EAAgD;MAC5C,IAAIP,eAAeO,CAAfP,MAAsBS,SAA1B,EAAqC;QACjCP,SAASF,eAAeO,CAAfP,EAAkBE,KAA3BA;QACAC,WAAWH,eAAeO,CAAfP,EAAkBG,OAA7BA;QACAC,YAAYJ,eAAeO,CAAfP,EAAkBI,QAA9BA;;QAEA,IAAIF,QAAQC,OAARD,IAAmBV,WAAnBU,IAAmCA,QAAQC,OAARD,GAAkBX,UAAzD,EAAsE;UAClEc,cAAcK,OAAdL,GAAyBE,IAAI,CAAJA,IAASP,eAAeO,CAAfP,EAAkBE,KAAlBF,GAA0B,CAAnCO,GAAwCA,IAAI,CAA5CA,GAAgDA,CAAzEF;UACAA,cAAcM,MAAdN,GAAuB;YAACO,OAAOP,cAAcK,OAAtB;YAA+BR,OAAOA,KAAtC;YAA6CC,SAASA,OAAtD;YAA+DC,UAAUA;UAAzE,CAAvBC;UACAf,OAAOuB,KAAPvB,CAAa,gCAAgCe,cAAcK,OAA9C,GAAwD,YAAxD,IAAwER,QAAQC,OAAhF,IAA2F,UAA3F,GAAwGD,KAArHZ;UACA;QAEP;MACJ;IAED;;IAAA,OAAOe,aAAP;EAGJhB;;EAAAA,WAAW;IACPO,aAAaA;EADN,CAAXP;EAIAI;EAEA,OAAOJ,QAAP;AAIJF;;AAAAA,kBAAkB2B,qBAAlB3B,GAA0C,mBAA1CA;kBACe4B,uBAAaC,eAAbD,CAA6B5B,iBAA7B4B,C","names":["SwitchHistoryRule","context","instance","logger","MAX_SWITCH","SAMPLE_SIZE","setup","getInstance","getLogger","getMaxIndex","rulesContext","switchRequestHistory","getSwitchHistory","switchRequests","getSwitchRequests","drops","noDrops","dropSize","switchRequest","create","i","length","undefined","quality","reason","index","debug","__dashjs_factory_name","FactoryMaker","getClassFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/rules/abr/SwitchHistoryRule.js"],"sourcesContent":["\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport Debug from '../../../core/Debug';\nimport SwitchRequest from '../SwitchRequest';\n\nfunction SwitchHistoryRule() {\n\n    const context = this.context;\n\n    let instance,\n        logger;\n\n    //MAX_SWITCH is the number of drops made. It doesn't consider the size of the drop.\n    const MAX_SWITCH = 0.075;\n\n    //Before this number of switch requests(no switch or actual), don't apply the rule.\n    //must be < SwitchRequestHistory SWITCH_REQUEST_HISTORY_DEPTH to enable rule\n    const SAMPLE_SIZE = 6;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getMaxIndex(rulesContext) {\n        const switchRequestHistory = rulesContext ? rulesContext.getSwitchHistory() : null;\n        const switchRequests = switchRequestHistory ? switchRequestHistory.getSwitchRequests() : [];\n        let drops = 0;\n        let noDrops = 0;\n        let dropSize = 0;\n        const switchRequest = SwitchRequest(context).create();\n\n        for (let i = 0; i < switchRequests.length; i++) {\n            if (switchRequests[i] !== undefined) {\n                drops += switchRequests[i].drops;\n                noDrops += switchRequests[i].noDrops;\n                dropSize += switchRequests[i].dropSize;\n\n                if (drops + noDrops >= SAMPLE_SIZE && (drops / noDrops > MAX_SWITCH)) {\n                    switchRequest.quality = (i > 0 && switchRequests[i].drops > 0) ? i - 1 : i;\n                    switchRequest.reason = {index: switchRequest.quality, drops: drops, noDrops: noDrops, dropSize: dropSize};\n                    logger.debug('Switch history rule index: ' + switchRequest.quality + ' samples: ' + (drops + noDrops) + ' drops: ' + drops);\n                    break;\n                }\n            }\n        }\n\n        return switchRequest;\n    }\n\n    instance = {\n        getMaxIndex: getMaxIndex\n    };\n\n    setup();\n\n    return instance;\n}\n\n\nSwitchHistoryRule.__dashjs_factory_name = 'SwitchHistoryRule';\nexport default FactoryMaker.getClassFactory(SwitchHistoryRule);\n"]},"metadata":{},"sourceType":"script"}