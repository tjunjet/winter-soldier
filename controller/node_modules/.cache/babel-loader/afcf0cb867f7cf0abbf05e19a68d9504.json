{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* @class\n* @ignore\n*/\n\n\nvar Segment = function Segment() {\n  _classCallCheck(this, Segment);\n\n  this.indexRange = null;\n  this.index = null;\n  this.mediaRange = null;\n  this.media = null;\n  this.duration = NaN; // this is the time that should be inserted into the media url\n\n  this.replacementTime = null; // this is the number that should be inserted into the media url\n\n  this.replacementNumber = NaN; // This is supposed to match the time encoded in the media Segment\n\n  this.mediaStartTime = NaN; // When the source buffer timeOffset is set to MSETimeOffset this is the\n  // time that will match the seekTarget and video.currentTime\n\n  this.presentationStartTime = NaN; // Do not schedule this segment until\n\n  this.availabilityStartTime = NaN; // Ignore and  discard this segment after\n\n  this.availabilityEndTime = NaN; // The index of the segment inside the availability window\n\n  this.availabilityIdx = NaN; // For dynamic mpd's, this is the wall clock time that the video\n  // element currentTime should be presentationStartTime\n\n  this.wallStartTime = NaN;\n  this.representation = null;\n};\n\nexports.default = Segment;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;;IAIMA,O,GACF,mBAAc;EAAAC;;EACV,KAAKC,UAAL,GAAkB,IAAlB;EACA,KAAKC,KAAL,GAAa,IAAb;EACA,KAAKC,UAAL,GAAkB,IAAlB;EACA,KAAKC,KAAL,GAAa,IAAb;EACA,KAAKC,QAAL,GAAgBC,GAAhB,CALU,CAMV;;EACA,KAAKC,eAAL,GAAuB,IAAvB,CAPU,CAQV;;EACA,KAAKC,iBAAL,GAAyBF,GAAzB,CATU,CAUV;;EACA,KAAKG,cAAL,GAAsBH,GAAtB,CAXU,CAYV;EACA;;EACA,KAAKI,qBAAL,GAA6BJ,GAA7B,CAdU,CAeV;;EACA,KAAKK,qBAAL,GAA6BL,GAA7B,CAhBU,CAiBV;;EACA,KAAKM,mBAAL,GAA2BN,GAA3B,CAlBU,CAmBV;;EACA,KAAKO,eAAL,GAAuBP,GAAvB,CApBU,CAqBV;EACA;;EACA,KAAKQ,aAAL,GAAqBR,GAArB;EACA,KAAKS,cAAL,GAAsB,IAAtB;;;kBAIOhB,O","names":["Segment","_classCallCheck","indexRange","index","mediaRange","media","duration","NaN","replacementTime","replacementNumber","mediaStartTime","presentationStartTime","availabilityStartTime","availabilityEndTime","availabilityIdx","wallStartTime","representation"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/dash/vo/Segment.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Segment {\n    constructor() {\n        this.indexRange = null;\n        this.index = null;\n        this.mediaRange = null;\n        this.media = null;\n        this.duration = NaN;\n        // this is the time that should be inserted into the media url\n        this.replacementTime = null;\n        // this is the number that should be inserted into the media url\n        this.replacementNumber = NaN;\n        // This is supposed to match the time encoded in the media Segment\n        this.mediaStartTime = NaN;\n        // When the source buffer timeOffset is set to MSETimeOffset this is the\n        // time that will match the seekTarget and video.currentTime\n        this.presentationStartTime = NaN;\n        // Do not schedule this segment until\n        this.availabilityStartTime = NaN;\n        // Ignore and  discard this segment after\n        this.availabilityEndTime = NaN;\n        // The index of the segment inside the availability window\n        this.availabilityIdx = NaN;\n        // For dynamic mpd's, this is the wall clock time that the video\n        // element currentTime should be presentationStartTime\n        this.wallStartTime = NaN;\n        this.representation = null;\n    }\n}\n\nexport default Segment;"]},"metadata":{},"sourceType":"script"}