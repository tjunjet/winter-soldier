{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _CommonEncryption = require('../CommonEncryption');\n\nvar _CommonEncryption2 = _interopRequireDefault(_CommonEncryption);\n\nvar _ProtectionConstants = require('../../constants/ProtectionConstants');\n\nvar _ProtectionConstants2 = _interopRequireDefault(_ProtectionConstants);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* Google Widevine DRM\n*\n* @class\n* @implements MediaPlayer.dependencies.protection.KeySystem\n*/\n\n\nvar uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\nvar systemString = _ProtectionConstants2.default.WIDEVINE_KEYSTEM_STRING;\nvar schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemWidevine(config) {\n  config = config || {};\n  var instance = void 0;\n  var protData = null;\n  var BASE64 = config.BASE64;\n\n  function init(protectionData) {\n    if (protectionData) {\n      protData = protectionData;\n    }\n  }\n\n  function getInitData(cp) {\n    return _CommonEncryption2.default.parseInitDataFromContentProtection(cp, BASE64);\n  }\n\n  function getRequestHeadersFromMessage()\n  /*message*/\n  {\n    return null;\n  }\n\n  function getLicenseRequestFromMessage(message) {\n    return new Uint8Array(message);\n  }\n\n  function getLicenseServerURLFromInitData()\n  /*initData*/\n  {\n    return null;\n  }\n\n  function getCDMData() {\n    return null;\n  }\n\n  function getSessionId(cp) {\n    // Get sessionId from protectionData or from manifest\n    if (protData && protData.sessionId) {\n      return protData.sessionId;\n    } else if (cp && cp.sessionId) {\n      return cp.sessionId;\n    }\n\n    return null;\n  }\n\n  instance = {\n    uuid: uuid,\n    schemeIdURI: schemeIdURI,\n    systemString: systemString,\n    init: init,\n    getInitData: getInitData,\n    getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n    getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n    getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n    getCDMData: getCDMData,\n    getSessionId: getSessionId\n  };\n  return instance;\n}\n\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\nexports.default = dashjs.FactoryMaker.getSingletonFactory(KeySystemWidevine);\n/* jshint ignore:line */","map":{"version":3,"mappings":";;;;;;AAsCA;;;;AACA;;;;;;;;AAvCA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;;;;AAUA,IAAMA,OAAO,sCAAb;AACA,IAAMC,eAAeC,8BAAoBC,uBAAzC;AACA,IAAMC,cAAc,cAAcJ,IAAlC;;AAEA,SAASK,iBAAT,CAA2BC,MAA3B,EAAmC;EAE/BA,SAASA,UAAU,EAAnBA;EACA,IAAIC,iBAAJ;EACA,IAAIC,WAAW,IAAf;EACA,IAAMC,SAASH,OAAOG,MAAtB;;EAEA,SAASC,IAAT,CAAcC,cAAd,EAA8B;IAC1B,IAAIA,cAAJ,EAAoB;MAChBH,WAAWG,cAAXH;IAEP;EAED;;EAAA,SAASI,WAAT,CAAqBC,EAArB,EAAyB;IACrB,OAAOC,2BAAiBC,kCAAjBD,CAAoDD,EAApDC,EAAwDL,MAAxDK,CAAP;EAGJ;;EAAA,SAASE,4BAAT;EAAuC;EAAc;IACjD,OAAO,IAAP;EAGJ;;EAAA,SAASC,4BAAT,CAAsCC,OAAtC,EAA+C;IAC3C,OAAO,IAAIC,UAAJ,CAAeD,OAAf,CAAP;EAGJ;;EAAA,SAASE,+BAAT;EAA0C;EAAe;IACrD,OAAO,IAAP;EAGJ;;EAAA,SAASC,UAAT,GAAsB;IAClB,OAAO,IAAP;EAGJ;;EAAA,SAASC,YAAT,CAAsBT,EAAtB,EAA0B;IACtB;IACA,IAAIL,YAAYA,SAASe,SAAzB,EAAoC;MAChC,OAAOf,SAASe,SAAhB;IADJ,OAEO,IAAIV,MAAMA,GAAGU,SAAb,EAAwB;MAC3B,OAAOV,GAAGU,SAAV;IAEJ;;IAAA,OAAO,IAAP;EAGJhB;;EAAAA,WAAW;IACPP,MAAMA,IADC;IAEPI,aAAaA,WAFN;IAGPH,cAAcA,YAHP;IAIPS,MAAMA,IAJC;IAKPE,aAAaA,WALN;IAMPI,8BAA8BA,4BANvB;IAOPC,8BAA8BA,4BAPvB;IAQPG,iCAAiCA,+BAR1B;IASPC,YAAYA,UATL;IAUPC,cAAcA;EAVP,CAAXf;EAaA,OAAOA,QAAP;AAGJF;;AAAAA,kBAAkBmB,qBAAlBnB,GAA0C,mBAA1CA;kBACeoB,OAAOC,YAAPD,CAAoBE,mBAApBF,CAAwCpB,iBAAxCoB,C;AAA4D","names":["uuid","systemString","ProtectionConstants","WIDEVINE_KEYSTEM_STRING","schemeIdURI","KeySystemWidevine","config","instance","protData","BASE64","init","protectionData","getInitData","cp","CommonEncryption","parseInitDataFromContentProtection","getRequestHeadersFromMessage","getLicenseRequestFromMessage","message","Uint8Array","getLicenseServerURLFromInitData","getCDMData","getSessionId","sessionId","__dashjs_factory_name","dashjs","FactoryMaker","getSingletonFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/protection/drm/KeySystemWidevine.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Google Widevine DRM\n *\n * @class\n * @implements MediaPlayer.dependencies.protection.KeySystem\n */\n\nimport CommonEncryption from '../CommonEncryption';\nimport ProtectionConstants from '../../constants/ProtectionConstants';\n\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\nconst systemString = ProtectionConstants.WIDEVINE_KEYSTEM_STRING;\nconst schemeIdURI = 'urn:uuid:' + uuid;\n\nfunction KeySystemWidevine(config) {\n\n    config = config || {};\n    let instance;\n    let protData = null;\n    const BASE64 = config.BASE64;\n\n    function init(protectionData) {\n        if (protectionData) {\n            protData = protectionData;\n        }\n    }\n\n    function getInitData(cp) {\n        return CommonEncryption.parseInitDataFromContentProtection(cp, BASE64);\n    }\n\n    function getRequestHeadersFromMessage( /*message*/ ) {\n        return null;\n    }\n\n    function getLicenseRequestFromMessage(message) {\n        return new Uint8Array(message);\n    }\n\n    function getLicenseServerURLFromInitData( /*initData*/ ) {\n        return null;\n    }\n\n    function getCDMData() {\n        return null;\n    }\n\n    function getSessionId(cp) {\n        // Get sessionId from protectionData or from manifest\n        if (protData && protData.sessionId) {\n            return protData.sessionId;\n        } else if (cp && cp.sessionId) {\n            return cp.sessionId;\n        }\n        return null;\n    }\n\n    instance = {\n        uuid: uuid,\n        schemeIdURI: schemeIdURI,\n        systemString: systemString,\n        init: init,\n        getInitData: getInitData,\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\n        getCDMData: getCDMData,\n        getSessionId: getSessionId\n    };\n\n    return instance;\n}\n\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\nexport default dashjs.FactoryMaker.getSingletonFactory(KeySystemWidevine); /* jshint ignore:line */\n"]},"metadata":{},"sourceType":"script"}