{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _EventBus = require('../../core/EventBus');\n\nvar _EventBus2 = _interopRequireDefault(_EventBus);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nfunction BlackListController(config) {\n  config = config || {};\n  var instance = void 0;\n  var blacklist = [];\n  var eventBus = (0, _EventBus2.default)(this.context).getInstance();\n  var updateEventName = config.updateEventName;\n  var addBlacklistEventName = config.addBlacklistEventName;\n\n  function contains(query) {\n    if (!blacklist.length || !query || !query.length) {\n      return false;\n    }\n\n    return blacklist.indexOf(query) !== -1;\n  }\n\n  function add(entry) {\n    if (blacklist.indexOf(entry) !== -1) {\n      return;\n    }\n\n    blacklist.push(entry);\n    eventBus.trigger(updateEventName, {\n      entry: entry\n    });\n  }\n\n  function onAddBlackList(e) {\n    add(e.entry);\n  }\n\n  function setup() {\n    if (addBlacklistEventName) {\n      eventBus.on(addBlacklistEventName, onAddBlackList, instance);\n    }\n  }\n\n  function reset() {\n    blacklist = [];\n  }\n\n  instance = {\n    add: add,\n    contains: contains,\n    reset: reset\n  };\n  setup();\n  return instance;\n}\n\nBlackListController.__dashjs_factory_name = 'BlackListController';\nexports.default = _FactoryMaker2.default.getClassFactory(BlackListController);","map":{"version":3,"mappings":";;;;;;AA+BA;;;;AACA;;;;;;;;AAhCA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAASA,mBAAT,CAA6BC,MAA7B,EAAqC;EAEjCA,SAASA,UAAU,EAAnBA;EACA,IAAIC,iBAAJ;EACA,IAAIC,YAAY,EAAhB;EAEA,IAAMC,WAAW,wBAAS,KAAKC,OAAd,EAAuBC,WAAvB,EAAjB;EACA,IAAMC,kBAAkBN,OAAOM,eAA/B;EACA,IAAMC,wBAAwBP,OAAOO,qBAArC;;EAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;IACrB,IAAI,CAACP,UAAUQ,MAAX,IAAqB,CAACD,KAAtB,IAA+B,CAACA,MAAMC,MAA1C,EAAkD;MAC9C,OAAO,KAAP;IAGJ;;IAAA,OAAQR,UAAUS,OAAVT,CAAkBO,KAAlBP,MAA6B,CAAC,CAAtC;EAGJ;;EAAA,SAASU,GAAT,CAAaC,KAAb,EAAoB;IAChB,IAAIX,UAAUS,OAAVT,CAAkBW,KAAlBX,MAA6B,CAAC,CAAlC,EAAqC;MACjC;IAGJA;;IAAAA,UAAUY,IAAVZ,CAAeW,KAAfX;IAEAC,SAASY,OAATZ,CAAiBG,eAAjBH,EAAkC;MAAEU,OAAOA;IAAT,CAAlCV;EAGJ;;EAAA,SAASa,cAAT,CAAwBC,CAAxB,EAA2B;IACvBL,IAAIK,EAAEJ,KAAND;EAGJ;;EAAA,SAASM,KAAT,GAAiB;IACb,IAAIX,qBAAJ,EAA2B;MACvBJ,SAASgB,EAAThB,CAAYI,qBAAZJ,EAAmCa,cAAnCb,EAAmDF,QAAnDE;IAEP;EAED;;EAAA,SAASiB,KAAT,GAAiB;IACblB,YAAY,EAAZA;EAGJD;;EAAAA,WAAW;IACPW,KAAKA,GADE;IAEPJ,UAAUA,QAFH;IAGPY,OAAOA;EAHA,CAAXnB;EAMAiB;EACA,OAAOjB,QAAP;AAGJF;;AAAAA,oBAAoBsB,qBAApBtB,GAA4C,qBAA5CA;kBACeuB,uBAAaC,eAAbD,CAA6BvB,mBAA7BuB,C","names":["BlackListController","config","instance","blacklist","eventBus","context","getInstance","updateEventName","addBlacklistEventName","contains","query","length","indexOf","add","entry","push","trigger","onAddBlackList","e","setup","on","reset","__dashjs_factory_name","FactoryMaker","getClassFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/controllers/BlacklistController.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\n\nfunction BlackListController(config) {\n\n    config = config || {};\n    let instance;\n    let blacklist = [];\n\n    const eventBus = EventBus(this.context).getInstance();\n    const updateEventName = config.updateEventName;\n    const addBlacklistEventName = config.addBlacklistEventName;\n\n    function contains(query) {\n        if (!blacklist.length || !query || !query.length) {\n            return false;\n        }\n\n        return (blacklist.indexOf(query) !== -1);\n    }\n\n    function add(entry) {\n        if (blacklist.indexOf(entry) !== -1) {\n            return;\n        }\n\n        blacklist.push(entry);\n\n        eventBus.trigger(updateEventName, { entry: entry });\n    }\n\n    function onAddBlackList(e) {\n        add(e.entry);\n    }\n\n    function setup() {\n        if (addBlacklistEventName) {\n            eventBus.on(addBlacklistEventName, onAddBlackList, instance);\n        }\n    }\n\n    function reset() {\n        blacklist = [];\n    }\n\n    instance = {\n        add: add,\n        contains: contains,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nBlackListController.__dashjs_factory_name = 'BlackListController';\nexport default FactoryMaker.getClassFactory(BlackListController);\n"]},"metadata":{},"sourceType":"script"}