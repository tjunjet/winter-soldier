{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* @ignore\n*/\n\nfunction HandlerHelpers() {\n  return {\n    reconstructFullMetricName: function reconstructFullMetricName(key, n, type) {\n      var mn = key;\n\n      if (n) {\n        mn += '(' + n;\n\n        if (type && type.length) {\n          mn += ',' + type;\n        }\n\n        mn += ')';\n      }\n\n      return mn;\n    },\n    validateN: function validateN(n_ms) {\n      if (!n_ms) {\n        throw new Error('missing n');\n      }\n\n      if (isNaN(n_ms)) {\n        throw new Error('n is NaN');\n      } // n is a positive integer is defined to refer to the metric\n      // in which the buffer level is recorded every n ms.\n\n\n      if (n_ms < 0) {\n        throw new Error('n must be positive');\n      }\n\n      return n_ms;\n    }\n  };\n}\n\nHandlerHelpers.__dashjs_factory_name = 'HandlerHelpers';\nexports.default = dashjs.FactoryMaker.getSingletonFactory(HandlerHelpers);\n/* jshint ignore:line */","map":{"version":3,"mappings":";;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BC;;;;AAGD,SAASA,cAAT,GAA0B;EACtB,OAAO;IACHC,2BAA2B,mCAAUC,GAAV,EAAeC,CAAf,EAAkBC,IAAlB,EAAwB;MAC/C,IAAIC,KAAKH,GAAT;;MAEA,IAAIC,CAAJ,EAAO;QACHE,MAAM,MAAMF,CAAZE;;QAEA,IAAID,QAAQA,KAAKE,MAAjB,EAAyB;UACrBD,MAAM,MAAMD,IAAZC;QAGJA;;QAAAA,MAAM,GAANA;MAGJ;;MAAA,OAAOA,EAAP;IAdD;IAiBHE,WAAW,mBAAUC,IAAV,EAAgB;MACvB,IAAI,CAACA,IAAL,EAAW;QACP,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAN;MAGJ;;MAAA,IAAIC,MAAMF,IAANE,CAAJ,EAAiB;QACb,MAAM,IAAID,KAAJ,CAAU,UAAV,CAAN;MAGJ,CATuB,CASvB;MACA;;;MACA,IAAID,OAAO,CAAX,EAAc;QACV,MAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;MAGJ;;MAAA,OAAOD,IAAP;IAhCD;EAAA,CAAP;AAqCJR;;AAAAA,eAAeW,qBAAfX,GAAuC,gBAAvCA;kBACeY,OAAOC,YAAPD,CAAoBE,mBAApBF,CAAwCZ,cAAxCY,C;AAAyD","names":["HandlerHelpers","reconstructFullMetricName","key","n","type","mn","length","validateN","n_ms","Error","isNaN","__dashjs_factory_name","dashjs","FactoryMaker","getSingletonFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/metrics/utils/HandlerHelpers.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n /**\n  * @ignore\n  */\nfunction HandlerHelpers() {\n    return {\n        reconstructFullMetricName: function (key, n, type) {\n            let mn = key;\n\n            if (n) {\n                mn += '(' + n;\n\n                if (type && type.length) {\n                    mn += ',' + type;\n                }\n\n                mn += ')';\n            }\n\n            return mn;\n        },\n\n        validateN: function (n_ms) {\n            if (!n_ms) {\n                throw new Error('missing n');\n            }\n\n            if (isNaN(n_ms)) {\n                throw new Error('n is NaN');\n            }\n\n            // n is a positive integer is defined to refer to the metric\n            // in which the buffer level is recorded every n ms.\n            if (n_ms < 0) {\n                throw new Error('n must be positive');\n            }\n\n            return n_ms;\n        }\n    };\n}\n\nHandlerHelpers.__dashjs_factory_name = 'HandlerHelpers';\nexport default dashjs.FactoryMaker.getSingletonFactory(HandlerHelpers); /* jshint ignore:line */\n"]},"metadata":{},"sourceType":"script"}