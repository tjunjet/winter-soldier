{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _CustomTimeRanges = require('../../utils/CustomTimeRanges');\n\nvar _CustomTimeRanges2 = _interopRequireDefault(_CustomTimeRanges);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction RangeController(config) {\n  config = config || {};\n  var useWallClockTime = false;\n  var context = this.context;\n  var instance = void 0,\n      ranges = void 0;\n  var mediaElement = config.mediaElement;\n\n  function initialize(rs) {\n    if (rs && rs.length) {\n      rs.forEach(function (r) {\n        var start = r.starttime;\n        var end = start + r.duration;\n        ranges.add(start, end);\n      });\n      useWallClockTime = !!rs[0]._useWallClockTime;\n    }\n  }\n\n  function reset() {\n    ranges.clear();\n  }\n\n  function setup() {\n    ranges = (0, _CustomTimeRanges2.default)(context).create();\n  }\n\n  function isEnabled() {\n    var numRanges = ranges.length;\n    var time = void 0;\n\n    if (!numRanges) {\n      return true;\n    } // When not present, DASH Metrics reporting is requested\n    // for the whole duration of the content.\n\n\n    time = useWallClockTime ? new Date().getTime() / 1000 : mediaElement.currentTime;\n\n    for (var i = 0; i < numRanges; i += 1) {\n      var start = ranges.start(i);\n      var end = ranges.end(i);\n\n      if (start <= time && time < end) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  instance = {\n    initialize: initialize,\n    reset: reset,\n    isEnabled: isEnabled\n  };\n  setup();\n  return instance;\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nRangeController.__dashjs_factory_name = 'RangeController';\nexports.default = dashjs.FactoryMaker.getClassFactory(RangeController);\n/* jshint ignore:line */","map":{"version":3,"mappings":";;;;;;AA+BA;;;;;;;;AAEA;;AAAA,SAASA,eAAT,CAAyBC,MAAzB,EAAiC;EAE7BA,SAASA,UAAU,EAAnBA;EACA,IAAIC,mBAAmB,KAAvB;EACA,IAAIC,UAAU,KAAKA,OAAnB;EACA,IAAIC,iBAAJ;EAAA,IACIC,eADJ;EAGA,IAAIC,eAAeL,OAAOK,YAA1B;;EAEA,SAASC,UAAT,CAAoBC,EAApB,EAAwB;IACpB,IAAIA,MAAMA,GAAGC,MAAb,EAAqB;MACjBD,GAAGE,OAAHF,CAAW,aAAK;QACZ,IAAIG,QAAQC,EAAEC,SAAd;QACA,IAAIC,MAAMH,QAAQC,EAAEG,QAApB;QAEAV,OAAOW,GAAPX,CAAWM,KAAXN,EAAkBS,GAAlBT;MAJJ;MAOAH,mBAAmB,CAAC,CAACM,GAAG,CAAHA,EAAMS,iBAA3Bf;IAEP;EAED;;EAAA,SAASgB,KAAT,GAAiB;IACbb,OAAOc,KAAPd;EAGJ;;EAAA,SAASe,KAAT,GAAiB;IACbf,SAAS,gCAAiBF,OAAjB,EAA0BkB,MAA1B,EAAThB;EAGJ;;EAAA,SAASiB,SAAT,GAAqB;IACjB,IAAIC,YAAYlB,OAAOI,MAAvB;IACA,IAAIe,aAAJ;;IAEA,IAAI,CAACD,SAAL,EAAgB;MACZ,OAAO,IAAP;IAGJ,CARiB,CAQjB;IACA;;;IACAC,OAAOtB,mBACE,IAAIuB,IAAJ,GAAWC,OAAX,KAAuB,IADzBxB,GAECI,aAAaqB,WAFrBH;;IAIA,KAAK,IAAII,IAAI,CAAb,EAAgBA,IAAIL,SAApB,EAA+BK,KAAK,CAApC,EAAuC;MACnC,IAAIjB,QAAQN,OAAOM,KAAPN,CAAauB,CAAbvB,CAAZ;MACA,IAAIS,MAAMT,OAAOS,GAAPT,CAAWuB,CAAXvB,CAAV;;MAEA,IAAKM,SAASa,IAATb,IAAmBa,OAAOV,GAA/B,EAAqC;QACjC,OAAO,IAAP;MAEP;IAED;;IAAA,OAAO,KAAP;EAGJV;;EAAAA,WAAW;IACPG,YAAYA,UADL;IAEPW,OAAYA,KAFL;IAGPI,WAAYA;EAHL,CAAXlB;EAMAgB;EAEA,OAAOhB,QAAP;AAlGJ;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGAJ,gBAAgB6B,qBAAhB7B,GAAwC,iBAAxCA;kBACe8B,OAAOC,YAAPD,CAAoBE,eAApBF,CAAoC9B,eAApC8B,C;AAAsD","names":["RangeController","config","useWallClockTime","context","instance","ranges","mediaElement","initialize","rs","length","forEach","start","r","starttime","end","duration","add","_useWallClockTime","reset","clear","setup","create","isEnabled","numRanges","time","Date","getTime","currentTime","i","__dashjs_factory_name","dashjs","FactoryMaker","getClassFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/metrics/controllers/RangeController.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport CustomTimeRanges from '../../utils/CustomTimeRanges';\n\nfunction RangeController(config) {\n\n    config = config || {};\n    let useWallClockTime = false;\n    let context = this.context;\n    let instance,\n        ranges;\n\n    let mediaElement = config.mediaElement;\n\n    function initialize(rs) {\n        if (rs && rs.length) {\n            rs.forEach(r => {\n                let start = r.starttime;\n                let end = start + r.duration;\n\n                ranges.add(start, end);\n            });\n\n            useWallClockTime = !!rs[0]._useWallClockTime;\n        }\n    }\n\n    function reset() {\n        ranges.clear();\n    }\n\n    function setup() {\n        ranges = CustomTimeRanges(context).create();\n    }\n\n    function isEnabled() {\n        let numRanges = ranges.length;\n        let time;\n\n        if (!numRanges) {\n            return true;\n        }\n\n        // When not present, DASH Metrics reporting is requested\n        // for the whole duration of the content.\n        time = useWallClockTime ?\n                (new Date().getTime() / 1000) :\n                mediaElement.currentTime;\n\n        for (let i = 0; i < numRanges; i += 1) {\n            let start = ranges.start(i);\n            let end = ranges.end(i);\n\n            if ((start <= time) && (time < end)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    instance = {\n        initialize: initialize,\n        reset:      reset,\n        isEnabled:  isEnabled\n    };\n\n    setup();\n\n    return instance;\n}\n\nRangeController.__dashjs_factory_name = 'RangeController';\nexport default dashjs.FactoryMaker.getClassFactory(RangeController); /* jshint ignore:line */\n"]},"metadata":{},"sourceType":"script"}