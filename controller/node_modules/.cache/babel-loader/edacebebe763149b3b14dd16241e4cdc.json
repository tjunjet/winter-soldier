{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ProtectionController = require('./controllers/ProtectionController');\n\nvar _ProtectionController2 = _interopRequireDefault(_ProtectionController);\n\nvar _ProtectionKeyController = require('./controllers/ProtectionKeyController');\n\nvar _ProtectionKeyController2 = _interopRequireDefault(_ProtectionKeyController);\n\nvar _ProtectionEvents = require('./ProtectionEvents');\n\nvar _ProtectionEvents2 = _interopRequireDefault(_ProtectionEvents);\n\nvar _ProtectionErrors = require('./errors/ProtectionErrors');\n\nvar _ProtectionErrors2 = _interopRequireDefault(_ProtectionErrors);\n\nvar _ProtectionModel_21Jan = require('./models/ProtectionModel_21Jan2015');\n\nvar _ProtectionModel_21Jan2 = _interopRequireDefault(_ProtectionModel_21Jan);\n\nvar _ProtectionModel_3Feb = require('./models/ProtectionModel_3Feb2014');\n\nvar _ProtectionModel_3Feb2 = _interopRequireDefault(_ProtectionModel_3Feb);\n\nvar _ProtectionModel_01b = require('./models/ProtectionModel_01b');\n\nvar _ProtectionModel_01b2 = _interopRequireDefault(_ProtectionModel_01b);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar APIS_ProtectionModel_01b = [// Un-prefixed as per spec\n{\n  // Video Element\n  generateKeyRequest: 'generateKeyRequest',\n  addKey: 'addKey',\n  cancelKeyRequest: 'cancelKeyRequest',\n  // Events\n  needkey: 'needkey',\n  keyerror: 'keyerror',\n  keyadded: 'keyadded',\n  keymessage: 'keymessage'\n}, // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\n{\n  // Video Element\n  generateKeyRequest: 'webkitGenerateKeyRequest',\n  addKey: 'webkitAddKey',\n  cancelKeyRequest: 'webkitCancelKeyRequest',\n  // Events\n  needkey: 'webkitneedkey',\n  keyerror: 'webkitkeyerror',\n  keyadded: 'webkitkeyadded',\n  keymessage: 'webkitkeymessage'\n}];\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\nvar APIS_ProtectionModel_3Feb2014 = [// Un-prefixed as per spec\n// Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\n{\n  // Video Element\n  setMediaKeys: 'setMediaKeys',\n  // MediaKeys\n  MediaKeys: 'MediaKeys',\n  // MediaKeySession\n  release: 'close',\n  // Events\n  needkey: 'needkey',\n  error: 'keyerror',\n  message: 'keymessage',\n  ready: 'keyadded',\n  close: 'keyclose'\n}, // MS-prefixed (IE11, Windows 8.1)\n{\n  // Video Element\n  setMediaKeys: 'msSetMediaKeys',\n  // MediaKeys\n  MediaKeys: 'MSMediaKeys',\n  // MediaKeySession\n  release: 'close',\n  // Events\n  needkey: 'msneedkey',\n  error: 'mskeyerror',\n  message: 'mskeymessage',\n  ready: 'mskeyadded',\n  close: 'mskeyclose'\n}];\n\nfunction Protection() {\n  var instance = void 0;\n  var context = this.context;\n  /**\n  * Create a ProtectionController and associated ProtectionModel for use with\n  * a single piece of content.\n  *\n  * @param {Object} config\n  * @return {ProtectionController} protection controller\n  *\n  */\n\n  function createProtectionSystem(config) {\n    var controller = null;\n    var protectionKeyController = (0, _ProtectionKeyController2.default)(context).getInstance();\n    protectionKeyController.setConfig({\n      debug: config.debug,\n      BASE64: config.BASE64\n    });\n    protectionKeyController.initialize();\n    var protectionModel = getProtectionModel(config);\n\n    if (!controller && protectionModel) {\n      //TODO add ability to set external controller if still needed at all?\n      controller = (0, _ProtectionController2.default)(context).create({\n        protectionModel: protectionModel,\n        protectionKeyController: protectionKeyController,\n        eventBus: config.eventBus,\n        debug: config.debug,\n        events: config.events,\n        BASE64: config.BASE64,\n        constants: config.constants,\n        cmcdModel: config.cmcdModel,\n        settings: config.settings\n      });\n      config.capabilities.setEncryptedMediaSupported(true);\n    }\n\n    return controller;\n  }\n\n  function getProtectionModel(config) {\n    var debug = config.debug;\n    var logger = debug.getLogger(instance);\n    var eventBus = config.eventBus;\n    var errHandler = config.errHandler;\n    var videoElement = config.videoModel ? config.videoModel.getElement() : null;\n\n    if ((!videoElement || videoElement.onencrypted !== undefined) && (!videoElement || videoElement.mediaKeys !== undefined)) {\n      logger.info('EME detected on this user agent! (ProtectionModel_21Jan2015)');\n      return (0, _ProtectionModel_21Jan2.default)(context).create({\n        debug: debug,\n        eventBus: eventBus,\n        events: config.events\n      });\n    } else if (getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\n      logger.info('EME detected on this user agent! (ProtectionModel_3Feb2014)');\n      return (0, _ProtectionModel_3Feb2.default)(context).create({\n        debug: debug,\n        eventBus: eventBus,\n        events: config.events,\n        api: getAPI(videoElement, APIS_ProtectionModel_3Feb2014)\n      });\n    } else if (getAPI(videoElement, APIS_ProtectionModel_01b)) {\n      logger.info('EME detected on this user agent! (ProtectionModel_01b)');\n      return (0, _ProtectionModel_01b2.default)(context).create({\n        debug: debug,\n        eventBus: eventBus,\n        errHandler: errHandler,\n        events: config.events,\n        api: getAPI(videoElement, APIS_ProtectionModel_01b)\n      });\n    } else {\n      logger.warn('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\n      return null;\n    }\n  }\n\n  function getAPI(videoElement, apis) {\n    for (var i = 0; i < apis.length; i++) {\n      var api = apis[i]; // detect if api is supported by browser\n      // check only first function in api -> should be fine\n\n      if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\n        continue;\n      }\n\n      return api;\n    }\n\n    return null;\n  }\n\n  instance = {\n    createProtectionSystem: createProtectionSystem\n  };\n  return instance;\n}\n\nProtection.__dashjs_factory_name = 'Protection';\nvar factory = dashjs.FactoryMaker.getClassFactory(Protection);\n/* jshint ignore:line */\n\nfactory.events = _ProtectionEvents2.default;\nfactory.errors = _ProtectionErrors2.default;\ndashjs.FactoryMaker.updateClassFactory(Protection.__dashjs_factory_name, factory);\n/* jshint ignore:line */\n\nexports.default = factory;","map":{"version":3,"mappings":"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","names":["APIS_ProtectionModel_01b","generateKeyRequest","addKey","cancelKeyRequest","needkey","keyerror","keyadded","keymessage","APIS_ProtectionModel_3Feb2014","setMediaKeys","MediaKeys","release","error","message","ready","close","Protection","instance","context","createProtectionSystem","config","controller","protectionKeyController","getInstance","setConfig","debug","BASE64","initialize","protectionModel","getProtectionModel","create","eventBus","events","constants","cmcdModel","settings","capabilities","setEncryptedMediaSupported","logger","getLogger","errHandler","videoElement","videoModel","getElement","onencrypted","undefined","mediaKeys","info","getAPI","api","warn","apis","i","length","Object","keys","__dashjs_factory_name","factory","dashjs","FactoryMaker","getClassFactory","ProtectionEvents","errors","ProtectionErrors","updateClassFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/protection/Protection.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ProtectionController from './controllers/ProtectionController';\nimport ProtectionKeyController from './controllers/ProtectionKeyController';\nimport ProtectionEvents from './ProtectionEvents';\nimport ProtectionErrors from './errors/ProtectionErrors';\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015';\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014';\nimport ProtectionModel_01b from './models/ProtectionModel_01b';\n\nconst APIS_ProtectionModel_01b = [\n    // Un-prefixed as per spec\n    {\n        // Video Element\n        generateKeyRequest: 'generateKeyRequest',\n        addKey: 'addKey',\n        cancelKeyRequest: 'cancelKeyRequest',\n\n        // Events\n        needkey: 'needkey',\n        keyerror: 'keyerror',\n        keyadded: 'keyadded',\n        keymessage: 'keymessage'\n    },\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\n    {\n        // Video Element\n        generateKeyRequest: 'webkitGenerateKeyRequest',\n        addKey: 'webkitAddKey',\n        cancelKeyRequest: 'webkitCancelKeyRequest',\n\n        // Events\n        needkey: 'webkitneedkey',\n        keyerror: 'webkitkeyerror',\n        keyadded: 'webkitkeyadded',\n        keymessage: 'webkitkeymessage'\n    }\n];\n\nconst APIS_ProtectionModel_3Feb2014 = [\n    // Un-prefixed as per spec\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\n    {\n        // Video Element\n        setMediaKeys: 'setMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MediaKeys',\n        // MediaKeySession\n        release: 'close',\n\n        // Events\n        needkey: 'needkey',\n        error: 'keyerror',\n        message: 'keymessage',\n        ready: 'keyadded',\n        close: 'keyclose'\n    },\n    // MS-prefixed (IE11, Windows 8.1)\n    {\n        // Video Element\n        setMediaKeys: 'msSetMediaKeys',\n        // MediaKeys\n        MediaKeys: 'MSMediaKeys',\n        // MediaKeySession\n        release: 'close',\n        // Events\n        needkey: 'msneedkey',\n        error: 'mskeyerror',\n        message: 'mskeymessage',\n        ready: 'mskeyadded',\n        close: 'mskeyclose'\n    }\n];\n\nfunction Protection() {\n    let instance;\n    const context = this.context;\n\n    /**\n     * Create a ProtectionController and associated ProtectionModel for use with\n     * a single piece of content.\n     *\n     * @param {Object} config\n     * @return {ProtectionController} protection controller\n     *\n     */\n    function createProtectionSystem(config) {\n        let controller = null;\n\n        const protectionKeyController = ProtectionKeyController(context).getInstance();\n        protectionKeyController.setConfig({ debug: config.debug, BASE64: config.BASE64 });\n        protectionKeyController.initialize();\n\n        let protectionModel =  getProtectionModel(config);\n\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\n            controller = ProtectionController(context).create({\n                protectionModel: protectionModel,\n                protectionKeyController: protectionKeyController,\n                eventBus: config.eventBus,\n                debug: config.debug,\n                events: config.events,\n                BASE64: config.BASE64,\n                constants: config.constants,\n                cmcdModel: config.cmcdModel,\n                settings: config.settings\n            });\n            config.capabilities.setEncryptedMediaSupported(true);\n        }\n        return controller;\n    }\n\n    function getProtectionModel(config) {\n        const debug = config.debug;\n        const logger = debug.getLogger(instance);\n        const eventBus = config.eventBus;\n        const errHandler = config.errHandler;\n        const videoElement = config.videoModel ? config.videoModel.getElement() : null;\n\n        if ((!videoElement || videoElement.onencrypted !== undefined) &&\n            (!videoElement || videoElement.mediaKeys !== undefined)) {\n            logger.info('EME detected on this user agent! (ProtectionModel_21Jan2015)');\n            return ProtectionModel_21Jan2015(context).create({ debug: debug, eventBus: eventBus, events: config.events });\n        } else if (getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\n            logger.info('EME detected on this user agent! (ProtectionModel_3Feb2014)');\n            return ProtectionModel_3Feb2014(context).create({ debug: debug, eventBus: eventBus, events: config.events, api: getAPI(videoElement, APIS_ProtectionModel_3Feb2014) });\n        } else if (getAPI(videoElement, APIS_ProtectionModel_01b)) {\n            logger.info('EME detected on this user agent! (ProtectionModel_01b)');\n            return ProtectionModel_01b(context).create({ debug: debug, eventBus: eventBus, errHandler: errHandler, events: config.events, api: getAPI(videoElement, APIS_ProtectionModel_01b) });\n        } else {\n            logger.warn('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\n            return null;\n        }\n    }\n\n    function getAPI(videoElement, apis) {\n        for (let i = 0; i < apis.length; i++) {\n            const api = apis[i];\n            // detect if api is supported by browser\n            // check only first function in api -> should be fine\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\n                continue;\n            }\n\n            return api;\n        }\n\n        return null;\n    }\n\n    instance = {\n        createProtectionSystem: createProtectionSystem\n    };\n\n    return instance;\n}\n\nProtection.__dashjs_factory_name = 'Protection';\nconst factory = dashjs.FactoryMaker.getClassFactory(Protection); /* jshint ignore:line */\nfactory.events = ProtectionEvents;\nfactory.errors = ProtectionErrors;\ndashjs.FactoryMaker.updateClassFactory(Protection.__dashjs_factory_name, factory); /* jshint ignore:line */\nexport default factory;\n"]},"metadata":{},"sourceType":"script"}