{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _MapNode2 = require('./MapNode');\n\nvar _MapNode3 = _interopRequireDefault(_MapNode2);\n\nvar _DashConstants = require('../../constants/DashConstants');\n\nvar _DashConstants2 = _interopRequireDefault(_DashConstants);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n* @classdesc a RepresentationBaseValuesMap type for input to objectiron\n*/\n\n\nvar RepresentationBaseValuesMap = function (_MapNode) {\n  _inherits(RepresentationBaseValuesMap, _MapNode);\n\n  function RepresentationBaseValuesMap() {\n    _classCallCheck(this, RepresentationBaseValuesMap);\n\n    var commonProperties = [_DashConstants2.default.PROFILES, _DashConstants2.default.WIDTH, _DashConstants2.default.HEIGHT, _DashConstants2.default.SAR, _DashConstants2.default.FRAMERATE, _DashConstants2.default.AUDIO_SAMPLING_RATE, _DashConstants2.default.MIME_TYPE, _DashConstants2.default.SEGMENT_PROFILES, _DashConstants2.default.CODECS, _DashConstants2.default.MAXIMUM_SAP_PERIOD, _DashConstants2.default.START_WITH_SAP, _DashConstants2.default.MAX_PLAYOUT_RATE, _DashConstants2.default.CODING_DEPENDENCY, _DashConstants2.default.SCAN_TYPE, _DashConstants2.default.FRAME_PACKING, _DashConstants2.default.AUDIO_CHANNEL_CONFIGURATION, _DashConstants2.default.CONTENT_PROTECTION, _DashConstants2.default.ESSENTIAL_PROPERTY, _DashConstants2.default.SUPPLEMENTAL_PROPERTY, _DashConstants2.default.INBAND_EVENT_STREAM];\n    return _possibleConstructorReturn(this, (RepresentationBaseValuesMap.__proto__ || Object.getPrototypeOf(RepresentationBaseValuesMap)).call(this, _DashConstants2.default.ADAPTATION_SET, commonProperties, [new _MapNode3.default(_DashConstants2.default.REPRESENTATION, commonProperties, [new _MapNode3.default(_DashConstants2.default.SUB_REPRESENTATION, commonProperties)])]));\n  }\n\n  return RepresentationBaseValuesMap;\n}(_MapNode3.default);\n\nexports.default = RepresentationBaseValuesMap;","map":{"version":3,"mappings":";;;;;;AAiCA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlCA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;IAMMA,2B;;;EACF,uCAAc;IAAAC;;IACV,IAAMC,mBAAmB,CACrBC,wBAAcC,QADO,EACGD,wBAAcE,KADjB,EACwBF,wBAAcG,MADtC,EAC8CH,wBAAcI,GAD5D,EACiEJ,wBAAcK,SAD/E,EAC0FL,wBAAcM,mBADxG,EAC6HN,wBAAcO,SAD3I,EACsJP,wBAAcQ,gBADpK,EACsLR,wBAAcS,MADpM,EAC4MT,wBAAcU,kBAD1N,EAC8OV,wBAAcW,cAD5P,EAC4QX,wBAAcY,gBAD1R,EAC4SZ,wBAAca,iBAD1T,EAC6Ub,wBAAcc,SAD3V,EACsWd,wBAAce,aADpX,EACmYf,wBAAcgB,2BADjZ,EAC8ahB,wBAAciB,kBAD5b,EACgdjB,wBAAckB,kBAD9d,EACkflB,wBAAcmB,qBADhgB,EACuhBnB,wBAAcoB,mBADriB,CAAzB;IADU,iJAKJpB,wBAAcqB,cALV,EAK0BtB,gBAL1B,EAK4C,CAClD,IAAIuB,iBAAJ,CAAYtB,wBAAcuB,cAA1B,EAA0CxB,gBAA1C,EAA4D,CACxD,IAAIuB,iBAAJ,CAAYtB,wBAAcwB,kBAA1B,EAA8CzB,gBAA9C,CADwD,CAA5D,CADkD,CAL5C;;;;EADwBuB,iB;;kBAc3BzB,2B","names":["RepresentationBaseValuesMap","_classCallCheck","commonProperties","DashConstants","PROFILES","WIDTH","HEIGHT","SAR","FRAMERATE","AUDIO_SAMPLING_RATE","MIME_TYPE","SEGMENT_PROFILES","CODECS","MAXIMUM_SAP_PERIOD","START_WITH_SAP","MAX_PLAYOUT_RATE","CODING_DEPENDENCY","SCAN_TYPE","FRAME_PACKING","AUDIO_CHANNEL_CONFIGURATION","CONTENT_PROTECTION","ESSENTIAL_PROPERTY","SUPPLEMENTAL_PROPERTY","INBAND_EVENT_STREAM","ADAPTATION_SET","MapNode","REPRESENTATION","SUB_REPRESENTATION"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/dash/parser/maps/RepresentationBaseValuesMap.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a RepresentationBaseValuesMap type for input to objectiron\n */\nimport MapNode from './MapNode';\nimport DashConstants from '../../constants/DashConstants';\n\nclass RepresentationBaseValuesMap extends MapNode {\n    constructor() {\n        const commonProperties = [\n            DashConstants.PROFILES, DashConstants.WIDTH, DashConstants.HEIGHT, DashConstants.SAR, DashConstants.FRAMERATE, DashConstants.AUDIO_SAMPLING_RATE, DashConstants.MIME_TYPE, DashConstants.SEGMENT_PROFILES, DashConstants.CODECS, DashConstants.MAXIMUM_SAP_PERIOD, DashConstants.START_WITH_SAP, DashConstants.MAX_PLAYOUT_RATE, DashConstants.CODING_DEPENDENCY, DashConstants.SCAN_TYPE, DashConstants.FRAME_PACKING, DashConstants.AUDIO_CHANNEL_CONFIGURATION, DashConstants.CONTENT_PROTECTION, DashConstants.ESSENTIAL_PROPERTY, DashConstants.SUPPLEMENTAL_PROPERTY, DashConstants.INBAND_EVENT_STREAM\n        ];\n\n        super(DashConstants.ADAPTATION_SET, commonProperties, [\n            new MapNode(DashConstants.REPRESENTATION, commonProperties, [\n                new MapNode(DashConstants.SUB_REPRESENTATION, commonProperties)\n            ])\n        ]);\n    }\n}\n\nexport default RepresentationBaseValuesMap;\n"]},"metadata":{},"sourceType":"script"}