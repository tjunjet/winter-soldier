{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Constants = require('../../constants/Constants');\n\nvar _Constants2 = _interopRequireDefault(_Constants);\n\nvar _FactoryMaker = require('../../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _MetricsConstants = require('../../constants/MetricsConstants');\n\nvar _MetricsConstants2 = _interopRequireDefault(_MetricsConstants);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction BufferLevelRule(config) {\n  config = config || {};\n  var dashMetrics = config.dashMetrics;\n  var mediaPlayerModel = config.mediaPlayerModel;\n  var textController = config.textController;\n  var abrController = config.abrController;\n  var settings = config.settings;\n\n  function setup() {}\n\n  function execute(type, representationInfo, hasVideoTrack) {\n    if (!type || !representationInfo) {\n      return true;\n    }\n\n    var bufferLevel = dashMetrics.getCurrentBufferLevel(type);\n    return bufferLevel < getBufferTarget(type, representationInfo, hasVideoTrack);\n  }\n\n  function getBufferTarget(type, representationInfo, hasVideoTrack) {\n    var bufferTarget = NaN;\n\n    if (!type || !representationInfo) {\n      return bufferTarget;\n    }\n\n    if (type === _Constants2.default.FRAGMENTED_TEXT) {\n      if (textController.isTextEnabled()) {\n        if (isNaN(representationInfo.fragmentDuration)) {\n          //fragmentDuration of representationInfo is not defined,\n          // call metrics function to have data in the latest scheduling info...\n          // if no metric, returns 0. In this case, rule will return false.\n          var schedulingInfo = dashMetrics.getCurrentSchedulingInfo(_MetricsConstants2.default.SCHEDULING_INFO);\n          bufferTarget = schedulingInfo ? schedulingInfo.duration : 0;\n        } else {\n          bufferTarget = representationInfo.fragmentDuration;\n        }\n      } else {\n        // text is disabled, rule will return false\n        bufferTarget = 0;\n      }\n    } else if (type === _Constants2.default.AUDIO && hasVideoTrack) {\n      var videoBufferLevel = dashMetrics.getCurrentBufferLevel(_Constants2.default.VIDEO);\n\n      if (isNaN(representationInfo.fragmentDuration)) {\n        bufferTarget = videoBufferLevel;\n      } else {\n        bufferTarget = Math.max(videoBufferLevel, representationInfo.fragmentDuration);\n      }\n    } else {\n      var streamInfo = representationInfo.mediaInfo.streamInfo;\n\n      if (abrController.isPlayingAtTopQuality(streamInfo)) {\n        var isLongFormContent = streamInfo.manifestInfo.duration >= settings.get().streaming.longFormContentDurationThreshold;\n        bufferTarget = isLongFormContent ? settings.get().streaming.bufferTimeAtTopQualityLongForm : settings.get().streaming.bufferTimeAtTopQuality;\n      } else {\n        bufferTarget = mediaPlayerModel.getStableBufferTime();\n      }\n    }\n\n    return bufferTarget;\n  }\n\n  var instance = {\n    execute: execute,\n    getBufferTarget: getBufferTarget\n  };\n  setup();\n  return instance;\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nBufferLevelRule.__dashjs_factory_name = 'BufferLevelRule';\nexports.default = _FactoryMaker2.default.getClassFactory(BufferLevelRule);","map":{"version":3,"mappings":";;;;;;AA8BA;;;;AACA;;;;AACA;;;;;;;;AAEA;;AAAA,SAASA,eAAT,CAAyBC,MAAzB,EAAiC;EAE7BA,SAASA,UAAU,EAAnBA;EACA,IAAMC,cAAcD,OAAOC,WAA3B;EACA,IAAMC,mBAAmBF,OAAOE,gBAAhC;EACA,IAAMC,iBAAiBH,OAAOG,cAA9B;EACA,IAAMC,gBAAgBJ,OAAOI,aAA7B;EACA,IAAMC,WAAWL,OAAOK,QAAxB;;EAEA,SAASC,KAAT,GAAiB,CAGjB;;EAAA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,kBAAvB,EAA2CC,aAA3C,EAA0D;IACtD,IAAI,CAACF,IAAD,IAAS,CAACC,kBAAd,EAAkC;MAC9B,OAAO,IAAP;IAEJ;;IAAA,IAAME,cAAcV,YAAYW,qBAAZX,CAAkCO,IAAlCP,CAApB;IACA,OAAOU,cAAcE,gBAAgBL,IAAhBK,EAAsBJ,kBAAtBI,EAA0CH,aAA1CG,CAArB;EAGJ;;EAAA,SAASA,eAAT,CAAyBL,IAAzB,EAA+BC,kBAA/B,EAAmDC,aAAnD,EAAkE;IAC9D,IAAII,eAAeC,GAAnB;;IAEA,IAAI,CAACP,IAAD,IAAS,CAACC,kBAAd,EAAkC;MAC9B,OAAOK,YAAP;IAGJ;;IAAA,IAAIN,SAASQ,oBAAUC,eAAvB,EAAwC;MACpC,IAAId,eAAee,aAAff,EAAJ,EAAoC;QAChC,IAAIgB,MAAMV,mBAAmBW,gBAAzBD,CAAJ,EAAgD;UAAE;UAC9C;UACA;UACA,IAAME,iBAAiBpB,YAAYqB,wBAAZrB,CAAqCsB,2BAAiBC,eAAtDvB,CAAvB;UACAa,eAAeO,iBAAiBA,eAAeI,QAAhCJ,GAA2C,CAA1DP;QAJJ,OAKO;UACHA,eAAeL,mBAAmBW,gBAAlCN;QAEP;MATD,OASO;QAAE;QACLA,eAAe,CAAfA;MAEP;IAbD,OAaQ,IAAIN,SAASQ,oBAAUU,KAAnBlB,IAA4BE,aAAhC,EAA+C;MACnD,IAAMiB,mBAAmB1B,YAAYW,qBAAZX,CAAkCe,oBAAUY,KAA5C3B,CAAzB;;MACA,IAAIkB,MAAMV,mBAAmBW,gBAAzBD,CAAJ,EAAgD;QAC5CL,eAAea,gBAAfb;MADJ,OAEO;QACHA,eAAee,KAAKC,GAALD,CAASF,gBAATE,EAA2BpB,mBAAmBW,gBAA9CS,CAAff;MAEP;IAPO,OAOD;MACH,IAAMiB,aAAatB,mBAAmBuB,SAAnBvB,CAA6BsB,UAAhD;;MACA,IAAI3B,cAAc6B,qBAAd7B,CAAoC2B,UAApC3B,CAAJ,EAAqD;QACjD,IAAM8B,oBAAoBH,WAAWI,YAAXJ,CAAwBN,QAAxBM,IAAoC1B,SAAS+B,GAAT/B,GAAegC,SAAfhC,CAAyBiC,gCAAvF;QACAxB,eAAeoB,oBAAoB7B,SAAS+B,GAAT/B,GAAegC,SAAfhC,CAAyBkC,8BAA7CL,GAA8E7B,SAAS+B,GAAT/B,GAAegC,SAAfhC,CAAyBmC,sBAAtH1B;MAFJ,OAGO;QACHA,eAAeZ,iBAAiBuC,mBAAjBvC,EAAfY;MAEP;IACD;;IAAA,OAAOA,YAAP;EAGJ;;EAAA,IAAM4B,WAAW;IACbnC,SAASA,OADI;IAEbM,iBAAiBA;EAFJ,CAAjB;EAKAP;EACA,OAAOoC,QAAP;AAnGJ;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA3C,gBAAgB4C,qBAAhB5C,GAAwC,iBAAxCA;kBACe6C,uBAAaC,eAAbD,CAA6B7C,eAA7B6C,C","names":["BufferLevelRule","config","dashMetrics","mediaPlayerModel","textController","abrController","settings","setup","execute","type","representationInfo","hasVideoTrack","bufferLevel","getCurrentBufferLevel","getBufferTarget","bufferTarget","NaN","Constants","FRAGMENTED_TEXT","isTextEnabled","isNaN","fragmentDuration","schedulingInfo","getCurrentSchedulingInfo","MetricsConstants","SCHEDULING_INFO","duration","AUDIO","videoBufferLevel","VIDEO","Math","max","streamInfo","mediaInfo","isPlayingAtTopQuality","isLongFormContent","manifestInfo","get","streaming","longFormContentDurationThreshold","bufferTimeAtTopQualityLongForm","bufferTimeAtTopQuality","getStableBufferTime","instance","__dashjs_factory_name","FactoryMaker","getClassFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/rules/scheduling/BufferLevelRule.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../constants/Constants';\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport MetricsConstants from '../../constants/MetricsConstants';\n\nfunction BufferLevelRule(config) {\n\n    config = config || {};\n    const dashMetrics = config.dashMetrics;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const textController = config.textController;\n    const abrController = config.abrController;\n    const settings = config.settings;\n\n    function setup() {\n    }\n\n    function execute(type, representationInfo, hasVideoTrack) {\n        if (!type || !representationInfo) {\n            return true;\n        }\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(type);\n        return bufferLevel < getBufferTarget(type, representationInfo, hasVideoTrack);\n    }\n\n    function getBufferTarget(type, representationInfo, hasVideoTrack) {\n        let bufferTarget = NaN;\n\n        if (!type || !representationInfo) {\n            return bufferTarget;\n        }\n\n        if (type === Constants.FRAGMENTED_TEXT) {\n            if (textController.isTextEnabled()) {\n                if (isNaN(representationInfo.fragmentDuration)) { //fragmentDuration of representationInfo is not defined,\n                    // call metrics function to have data in the latest scheduling info...\n                    // if no metric, returns 0. In this case, rule will return false.\n                    const schedulingInfo = dashMetrics.getCurrentSchedulingInfo(MetricsConstants.SCHEDULING_INFO);\n                    bufferTarget = schedulingInfo ? schedulingInfo.duration : 0;\n                } else {\n                    bufferTarget = representationInfo.fragmentDuration;\n                }\n            } else { // text is disabled, rule will return false\n                bufferTarget = 0;\n            }\n        }  else if (type === Constants.AUDIO && hasVideoTrack) {\n            const videoBufferLevel = dashMetrics.getCurrentBufferLevel(Constants.VIDEO);\n            if (isNaN(representationInfo.fragmentDuration)) {\n                bufferTarget = videoBufferLevel;\n            } else {\n                bufferTarget = Math.max(videoBufferLevel, representationInfo.fragmentDuration);\n            }\n        } else {\n            const streamInfo = representationInfo.mediaInfo.streamInfo;\n            if (abrController.isPlayingAtTopQuality(streamInfo)) {\n                const isLongFormContent = streamInfo.manifestInfo.duration >= settings.get().streaming.longFormContentDurationThreshold;\n                bufferTarget = isLongFormContent ? settings.get().streaming.bufferTimeAtTopQualityLongForm : settings.get().streaming.bufferTimeAtTopQuality;\n            } else {\n                bufferTarget = mediaPlayerModel.getStableBufferTime();\n            }\n        }\n        return bufferTarget;\n    }\n\n    const instance = {\n        execute: execute,\n        getBufferTarget: getBufferTarget\n    };\n\n    setup();\n    return instance;\n}\n\nBufferLevelRule.__dashjs_factory_name = 'BufferLevelRule';\nexport default FactoryMaker.getClassFactory(BufferLevelRule);\n"]},"metadata":{},"sourceType":"script"}