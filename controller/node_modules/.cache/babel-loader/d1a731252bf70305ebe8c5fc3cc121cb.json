{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _BaseURLTreeModel = require('../models/BaseURLTreeModel');\n\nvar _BaseURLTreeModel2 = _interopRequireDefault(_BaseURLTreeModel);\n\nvar _BaseURLSelector = require('../utils/BaseURLSelector');\n\nvar _BaseURLSelector2 = _interopRequireDefault(_BaseURLSelector);\n\nvar _URLUtils = require('../utils/URLUtils');\n\nvar _URLUtils2 = _interopRequireDefault(_URLUtils);\n\nvar _BaseURL = require('../../dash/vo/BaseURL');\n\nvar _BaseURL2 = _interopRequireDefault(_BaseURL);\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _EventBus = require('../../core/EventBus');\n\nvar _EventBus2 = _interopRequireDefault(_EventBus);\n\nvar _Events = require('../../core/events/Events');\n\nvar _Events2 = _interopRequireDefault(_Events);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction BaseURLController() {\n  var instance = void 0,\n      adapter = void 0;\n  var context = this.context;\n  var eventBus = (0, _EventBus2.default)(context).getInstance();\n  var urlUtils = (0, _URLUtils2.default)(context).getInstance();\n  var baseURLTreeModel = void 0,\n      baseURLSelector = void 0;\n\n  function onBlackListChanged(e) {\n    baseURLTreeModel.invalidateSelectedIndexes(e.entry);\n  }\n\n  function setup() {\n    baseURLTreeModel = (0, _BaseURLTreeModel2.default)(context).create();\n    baseURLSelector = (0, _BaseURLSelector2.default)(context).create();\n    eventBus.on(_Events2.default.SERVICE_LOCATION_BLACKLIST_CHANGED, onBlackListChanged, instance);\n  }\n\n  function setConfig(config) {\n    if (config.baseURLTreeModel) {\n      baseURLTreeModel = config.baseURLTreeModel;\n    }\n\n    if (config.baseURLSelector) {\n      baseURLSelector = config.baseURLSelector;\n    }\n\n    if (config.adapter) {\n      adapter = config.adapter;\n    }\n  }\n\n  function update(manifest) {\n    baseURLTreeModel.update(manifest);\n    baseURLSelector.chooseSelector(adapter.getIsDVB(manifest));\n  }\n\n  function resolve(path) {\n    var baseUrls = baseURLTreeModel.getForPath(path);\n    var baseUrl = baseUrls.reduce(function (p, c) {\n      var b = baseURLSelector.select(c);\n\n      if (b) {\n        if (!urlUtils.isRelative(b.url)) {\n          p.url = b.url;\n          p.serviceLocation = b.serviceLocation;\n        } else {\n          p.url = urlUtils.resolve(b.url, p.url);\n        }\n\n        p.availabilityTimeOffset = b.availabilityTimeOffset;\n        p.availabilityTimeComplete = b.availabilityTimeComplete;\n      } else {\n        return new _BaseURL2.default();\n      }\n\n      return p;\n    }, new _BaseURL2.default());\n\n    if (!urlUtils.isRelative(baseUrl.url)) {\n      return baseUrl;\n    }\n  }\n\n  function reset() {\n    baseURLTreeModel.reset();\n    baseURLSelector.reset();\n  }\n\n  function initialize(data) {\n    // report config to baseURLTreeModel and baseURLSelector\n    baseURLTreeModel.setConfig({\n      adapter: adapter\n    });\n    update(data);\n  }\n\n  instance = {\n    reset: reset,\n    initialize: initialize,\n    resolve: resolve,\n    setConfig: setConfig\n  };\n  setup();\n  return instance;\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nBaseURLController.__dashjs_factory_name = 'BaseURLController';\nexports.default = _FactoryMaker2.default.getClassFactory(BaseURLController);","map":{"version":3,"mappings":"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","names":["BaseURLController","instance","adapter","context","eventBus","getInstance","urlUtils","baseURLTreeModel","baseURLSelector","onBlackListChanged","e","invalidateSelectedIndexes","entry","setup","create","on","Events","SERVICE_LOCATION_BLACKLIST_CHANGED","setConfig","config","update","manifest","chooseSelector","getIsDVB","resolve","path","baseUrls","getForPath","baseUrl","reduce","p","c","b","select","isRelative","url","serviceLocation","availabilityTimeOffset","availabilityTimeComplete","BaseURL","reset","initialize","data","__dashjs_factory_name","FactoryMaker","getClassFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/controllers/BaseURLController.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseURLTreeModel from '../models/BaseURLTreeModel';\nimport BaseURLSelector from '../utils/BaseURLSelector';\nimport URLUtils from '../utils/URLUtils';\nimport BaseURL from '../../dash/vo/BaseURL';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\n\nfunction BaseURLController() {\n\n    let instance,\n        adapter;\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let baseURLTreeModel,\n        baseURLSelector;\n\n    function onBlackListChanged(e) {\n        baseURLTreeModel.invalidateSelectedIndexes(e.entry);\n    }\n\n    function setup() {\n        baseURLTreeModel = BaseURLTreeModel(context).create();\n        baseURLSelector = BaseURLSelector(context).create();\n\n        eventBus.on(Events.SERVICE_LOCATION_BLACKLIST_CHANGED, onBlackListChanged, instance);\n    }\n\n    function setConfig(config) {\n        if (config.baseURLTreeModel) {\n            baseURLTreeModel = config.baseURLTreeModel;\n        }\n\n        if (config.baseURLSelector) {\n            baseURLSelector = config.baseURLSelector;\n        }\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n    }\n\n    function update(manifest) {\n        baseURLTreeModel.update(manifest);\n        baseURLSelector.chooseSelector(adapter.getIsDVB(manifest));\n    }\n\n    function resolve(path) {\n        const baseUrls = baseURLTreeModel.getForPath(path);\n\n        const baseUrl = baseUrls.reduce((p, c) => {\n            const b = baseURLSelector.select(c);\n\n            if (b) {\n                if (!urlUtils.isRelative(b.url)) {\n                    p.url = b.url;\n                    p.serviceLocation = b.serviceLocation;\n                } else {\n                    p.url = urlUtils.resolve(b.url, p.url);\n                }\n                p.availabilityTimeOffset = b.availabilityTimeOffset;\n                p.availabilityTimeComplete = b.availabilityTimeComplete;\n            } else {\n                return new BaseURL();\n            }\n\n            return p;\n        }, new BaseURL());\n\n        if (!urlUtils.isRelative(baseUrl.url)) {\n            return baseUrl;\n        }\n    }\n\n    function reset() {\n        baseURLTreeModel.reset();\n        baseURLSelector.reset();\n    }\n\n    function initialize(data) {\n\n        // report config to baseURLTreeModel and baseURLSelector\n        baseURLTreeModel.setConfig({\n            adapter: adapter\n        });\n\n        update(data);\n    }\n\n    instance = {\n        reset: reset,\n        initialize: initialize,\n        resolve: resolve,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLController.__dashjs_factory_name = 'BaseURLController';\nexport default FactoryMaker.getClassFactory(BaseURLController);\n"]},"metadata":{},"sourceType":"script"}