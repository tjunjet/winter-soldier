{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction EmbeddedTextHtmlRender() {\n  var captionId = 0;\n  var instance = void 0;\n  /* HTML Rendering functions */\n\n  function checkIndent(chars) {\n    var line = '';\n\n    for (var c = 0; c < chars.length; ++c) {\n      var uc = chars[c];\n      line += uc.uchar;\n    }\n\n    var l = line.length;\n    var ll = line.replace(/^\\s+/, '').length;\n    return l - ll;\n  }\n\n  function getRegionProperties(region) {\n    return 'left: ' + region.x * 3.125 + '%; top: ' + region.y1 * 6.66 + '%; width: ' + (100 - region.x * 3.125) + '%; height: ' + Math.max(region.y2 - 1 - region.y1, 1) * 6.66 + '%; align-items: flex-start; overflow: visible; -webkit-writing-mode: horizontal-tb;';\n  }\n\n  function createRGB(color) {\n    if (color === 'red') {\n      return 'rgb(255, 0, 0)';\n    } else if (color === 'green') {\n      return 'rgb(0, 255, 0)';\n    } else if (color === 'blue') {\n      return 'rgb(0, 0, 255)';\n    } else if (color === 'cyan') {\n      return 'rgb(0, 255, 255)';\n    } else if (color === 'magenta') {\n      return 'rgb(255, 0, 255)';\n    } else if (color === 'yellow') {\n      return 'rgb(255, 255, 0)';\n    } else if (color === 'white') {\n      return 'rgb(255, 255, 255)';\n    } else if (color === 'black') {\n      return 'rgb(0, 0, 0)';\n    }\n\n    return color;\n  }\n\n  function getStyle(videoElement, style) {\n    var fontSize = videoElement.videoHeight / 15.0;\n\n    if (style) {\n      return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; color: ' + (style.foreground ? createRGB(style.foreground) : 'rgb(255, 255, 255)') + '; font-style: ' + (style.italics ? 'italic' : 'normal') + '; text-decoration: ' + (style.underline ? 'underline' : 'none') + '; white-space: pre; background-color: ' + (style.background ? createRGB(style.background) : 'transparent') + ';';\n    } else {\n      return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; justify-content: flex-start; text-align: left; color: rgb(255, 255, 255); font-style: normal; white-space: pre; line-height: normal; font-weight: normal; text-decoration: none; width: 100%; display: flex;';\n    }\n  }\n\n  function ltrim(s) {\n    return s.replace(/^\\s+/g, '');\n  }\n\n  function rtrim(s) {\n    return s.replace(/\\s+$/g, '');\n  }\n\n  function createHTMLCaptionsFromScreen(videoElement, startTime, endTime, captionScreen) {\n    var currRegion = null;\n    var existingRegion = null;\n    var lastRowHasText = false;\n    var lastRowIndentL = -1;\n    var currP = {\n      start: startTime,\n      end: endTime,\n      spans: []\n    };\n    var currentStyle = 'style_cea608_white_black';\n    var seenRegions = {};\n    var styleStates = {};\n    var regions = [];\n    var r = void 0,\n        s = void 0;\n\n    for (r = 0; r < 15; ++r) {\n      var row = captionScreen.rows[r];\n      var line = '';\n      var prevPenState = null;\n\n      if (false === row.isEmpty()) {\n        /* Row is not empty */\n\n        /* Get indentation of this row */\n        var rowIndent = checkIndent(row.chars);\n        /* Create a new region is there is none */\n\n        if (currRegion === null) {\n          currRegion = {\n            x: rowIndent,\n            y1: r,\n            y2: r + 1,\n            p: []\n          };\n        }\n        /* Check if indentation has changed and we had text of last row */\n\n\n        if (rowIndent !== lastRowIndentL && lastRowHasText) {\n          currRegion.p.push(currP);\n          currP = {\n            start: startTime,\n            end: endTime,\n            spans: []\n          };\n          currRegion.y2 = r;\n          currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n\n          if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n            regions.push(currRegion);\n            seenRegions[currRegion.name] = currRegion;\n          } else {\n            existingRegion = seenRegions[currRegion.name];\n            existingRegion.p.contat(currRegion.p);\n          }\n\n          currRegion = {\n            x: rowIndent,\n            y1: r,\n            y2: r + 1,\n            p: []\n          };\n        }\n\n        for (var c = 0; c < row.chars.length; ++c) {\n          var uc = row.chars[c];\n          var currPenState = uc.penState;\n\n          if (prevPenState === null || !currPenState.equals(prevPenState)) {\n            if (line.trim().length > 0) {\n              currP.spans.push({\n                name: currentStyle,\n                line: line,\n                row: r\n              });\n              line = '';\n            }\n\n            var currPenStateString = 'style_cea608_' + currPenState.foreground + '_' + currPenState.background;\n\n            if (currPenState.underline) {\n              currPenStateString += '_underline';\n            }\n\n            if (currPenState.italics) {\n              currPenStateString += '_italics';\n            }\n\n            if (!styleStates.hasOwnProperty(currPenStateString)) {\n              styleStates[currPenStateString] = JSON.parse(JSON.stringify(currPenState));\n            }\n\n            prevPenState = currPenState;\n            currentStyle = currPenStateString;\n          }\n\n          line += uc.uchar;\n        }\n\n        if (line.trim().length > 0) {\n          currP.spans.push({\n            name: currentStyle,\n            line: line,\n            row: r\n          });\n        }\n\n        lastRowHasText = true;\n        lastRowIndentL = rowIndent;\n      } else {\n        /* Row is empty */\n        lastRowHasText = false;\n        lastRowIndentL = -1;\n\n        if (currRegion) {\n          currRegion.p.push(currP);\n          currP = {\n            start: startTime,\n            end: endTime,\n            spans: []\n          };\n          currRegion.y2 = r;\n          currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n\n          if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n            regions.push(currRegion);\n            seenRegions[currRegion.name] = currRegion;\n          } else {\n            existingRegion = seenRegions[currRegion.name];\n            existingRegion.p.contat(currRegion.p);\n          }\n\n          currRegion = null;\n        }\n      }\n    }\n\n    if (currRegion) {\n      currRegion.p.push(currP);\n      currRegion.y2 = r + 1;\n      currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n\n      if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n        regions.push(currRegion);\n        seenRegions[currRegion.name] = currRegion;\n      } else {\n        existingRegion = seenRegions[currRegion.name];\n        existingRegion.p.contat(currRegion.p);\n      }\n\n      currRegion = null;\n    }\n\n    var captionsArray = [];\n    /* Loop thru regions */\n\n    for (r = 0; r < regions.length; ++r) {\n      var region = regions[r];\n      var cueID = 'sub_cea608_' + captionId++;\n      var finalDiv = document.createElement('div');\n      finalDiv.id = cueID;\n      var cueRegionProperties = getRegionProperties(region);\n      finalDiv.style.cssText = 'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' + cueRegionProperties;\n      var bodyDiv = document.createElement('div');\n      bodyDiv.className = 'paragraph bodyStyle';\n      bodyDiv.style.cssText = getStyle(videoElement);\n      var cueUniWrapper = document.createElement('div');\n      cueUniWrapper.className = 'cueUniWrapper';\n      cueUniWrapper.style.cssText = 'unicode-bidi: normal; direction: ltr;';\n\n      for (var p = 0; p < region.p.length; ++p) {\n        var ptag = region.p[p];\n        var lastSpanRow = 0;\n\n        for (s = 0; s < ptag.spans.length; ++s) {\n          var span = ptag.spans[s];\n\n          if (span.line.length > 0) {\n            if (s !== 0 && lastSpanRow != span.row) {\n              var brElement = document.createElement('br');\n              brElement.className = 'lineBreak';\n              cueUniWrapper.appendChild(brElement);\n            }\n\n            var sameRow = false;\n\n            if (lastSpanRow === span.row) {\n              sameRow = true;\n            }\n\n            lastSpanRow = span.row;\n            var spanStyle = styleStates[span.name];\n            var spanElement = document.createElement('span');\n            spanElement.className = 'spanPadding ' + span.name + ' customSpanColor';\n            spanElement.style.cssText = getStyle(videoElement, spanStyle);\n            /* If this is not the first span, and it's on the same\n            * row as the last one */\n\n            if (s !== 0 && sameRow) {\n              /* and it's the last span on this row */\n              if (s === ptag.spans.length - 1) {\n                /* trim only the right side */\n                spanElement.textContent = rtrim(span.line);\n              } else {\n                /* don't trim at all */\n                spanElement.textContent = span.line;\n              }\n            } else {\n              /* if there is more than 1 span and this isn't the last span */\n              if (ptag.spans.length > 1 && s < ptag.spans.length - 1) {\n                /* Check if next text is on same row */\n                if (span.row === ptag.spans[s + 1].row) {\n                  /* Next element on same row, trim start */\n                  spanElement.textContent = ltrim(span.line);\n                } else {\n                  /* Different rows, trim both */\n                  spanElement.textContent = span.line.trim();\n                }\n              } else {\n                spanElement.textContent = span.line.trim();\n              }\n            }\n\n            cueUniWrapper.appendChild(spanElement);\n          }\n        }\n      }\n\n      bodyDiv.appendChild(cueUniWrapper);\n      finalDiv.appendChild(bodyDiv);\n      var fontSize = {\n        'bodyStyle': ['%', 90]\n      };\n\n      for (var _s in styleStates) {\n        if (styleStates.hasOwnProperty(_s)) {\n          fontSize[_s] = ['%', 90];\n        }\n      }\n\n      captionsArray.push({\n        type: 'html',\n        start: startTime,\n        end: endTime,\n        cueHTMLElement: finalDiv,\n        cueID: cueID,\n        cellResolution: [32, 15],\n        isFromCEA608: true,\n        fontSize: fontSize,\n        lineHeight: {},\n        linePadding: {}\n      });\n    }\n\n    return captionsArray;\n  }\n\n  instance = {\n    createHTMLCaptionsFromScreen: createHTMLCaptionsFromScreen\n  };\n  return instance;\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nEmbeddedTextHtmlRender.__dashjs_factory_name = 'EmbeddedTextHtmlRender';\nexports.default = _FactoryMaker2.default.getSingletonFactory(EmbeddedTextHtmlRender);","map":{"version":3,"mappings":"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","names":["EmbeddedTextHtmlRender","captionId","instance","checkIndent","chars","line","c","length","uc","uchar","l","ll","replace","getRegionProperties","region","x","y1","Math","max","y2","createRGB","color","getStyle","videoElement","style","fontSize","videoHeight","foreground","italics","underline","background","ltrim","s","rtrim","createHTMLCaptionsFromScreen","startTime","endTime","captionScreen","currRegion","existingRegion","lastRowHasText","lastRowIndentL","currP","start","end","spans","currentStyle","seenRegions","styleStates","regions","r","row","rows","prevPenState","isEmpty","rowIndent","p","push","name","hasOwnProperty","contat","currPenState","penState","equals","trim","currPenStateString","JSON","parse","stringify","captionsArray","cueID","finalDiv","document","createElement","id","cueRegionProperties","cssText","bodyDiv","className","cueUniWrapper","ptag","lastSpanRow","span","brElement","appendChild","sameRow","spanStyle","spanElement","textContent","type","cueHTMLElement","cellResolution","isFromCEA608","lineHeight","linePadding","__dashjs_factory_name","FactoryMaker","getSingletonFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/text/EmbeddedTextHtmlRender.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\n\nfunction EmbeddedTextHtmlRender() {\n\n    let captionId = 0;\n    let instance;\n\n    /* HTML Rendering functions */\n    function checkIndent(chars) {\n        let line = '';\n\n        for (let c = 0; c < chars.length; ++c) {\n            const uc = chars[c];\n            line += uc.uchar;\n        }\n\n        const l = line.length;\n        const ll = line.replace(/^\\s+/,'').length;\n        return l - ll;\n    }\n\n    function getRegionProperties(region) {\n        return 'left: ' + (region.x * 3.125) + '%; top: ' + (region.y1 * 6.66) + '%; width: ' + (100 - (region.x * 3.125)) + '%; height: ' + (Math.max((region.y2 - 1) - region.y1, 1) * 6.66) + '%; align-items: flex-start; overflow: visible; -webkit-writing-mode: horizontal-tb;';\n    }\n\n    function createRGB(color) {\n        if (color === 'red') {\n            return 'rgb(255, 0, 0)';\n        } else if (color === 'green') {\n            return 'rgb(0, 255, 0)';\n        } else if (color === 'blue') {\n            return 'rgb(0, 0, 255)';\n        } else if (color === 'cyan') {\n            return 'rgb(0, 255, 255)';\n        } else if (color === 'magenta') {\n            return 'rgb(255, 0, 255)';\n        } else if (color === 'yellow') {\n            return 'rgb(255, 255, 0)';\n        } else if (color === 'white') {\n            return 'rgb(255, 255, 255)';\n        } else if (color === 'black') {\n            return 'rgb(0, 0, 0)';\n        }\n        return color;\n    }\n\n    function getStyle(videoElement, style) {\n        const fontSize = videoElement.videoHeight / 15.0;\n        if (style) {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; color: ' + ((style.foreground) ? createRGB(style.foreground) : 'rgb(255, 255, 255)') + '; font-style: ' + (style.italics ? 'italic' : 'normal') + '; text-decoration: ' + (style.underline ? 'underline' : 'none') + '; white-space: pre; background-color: ' + ((style.background) ? createRGB(style.background) : 'transparent') + ';';\n        } else {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; justify-content: flex-start; text-align: left; color: rgb(255, 255, 255); font-style: normal; white-space: pre; line-height: normal; font-weight: normal; text-decoration: none; width: 100%; display: flex;';\n        }\n    }\n\n    function ltrim(s) {\n        return s.replace(/^\\s+/g, '');\n    }\n\n    function rtrim(s) {\n        return s.replace(/\\s+$/g, '');\n    }\n\n    function createHTMLCaptionsFromScreen(videoElement, startTime, endTime, captionScreen) {\n        let currRegion = null;\n        let existingRegion = null;\n        let lastRowHasText = false;\n        let lastRowIndentL = -1;\n        let currP = {start: startTime, end: endTime, spans: []};\n        let currentStyle = 'style_cea608_white_black';\n        const seenRegions = {};\n        const styleStates = {};\n        const regions = [];\n        let r, s;\n\n        for (r = 0; r < 15; ++r) {\n            const row = captionScreen.rows[r];\n            let line = '';\n            let prevPenState = null;\n\n            if (false === row.isEmpty()) {\n                /* Row is not empty */\n\n                /* Get indentation of this row */\n                const rowIndent = checkIndent(row.chars);\n\n                /* Create a new region is there is none */\n                if (currRegion === null) {\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                /* Check if indentation has changed and we had text of last row */\n                if ((rowIndent !== lastRowIndentL) && lastRowHasText) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                for (let c = 0; c < row.chars.length; ++c) {\n                    const uc = row.chars[c];\n                    const currPenState = uc.penState;\n                    if ((prevPenState === null) || (!currPenState.equals(prevPenState))) {\n                        if (line.trim().length > 0) {\n                            currP.spans.push({ name: currentStyle, line: line, row: r });\n                            line = '';\n                        }\n\n                        let currPenStateString = 'style_cea608_' + currPenState.foreground + '_' + currPenState.background;\n                        if (currPenState.underline) {\n                            currPenStateString += '_underline';\n                        }\n                        if (currPenState.italics) {\n                            currPenStateString += '_italics';\n                        }\n\n                        if (!styleStates.hasOwnProperty(currPenStateString)) {\n                            styleStates[currPenStateString] = JSON.parse(JSON.stringify(currPenState));\n                        }\n\n                        prevPenState = currPenState;\n\n                        currentStyle = currPenStateString;\n                    }\n\n                    line += uc.uchar;\n                }\n\n                if (line.trim().length > 0) {\n                    currP.spans.push({ name: currentStyle, line: line, row: r });\n                }\n\n                lastRowHasText = true;\n                lastRowIndentL = rowIndent;\n            } else {\n                /* Row is empty */\n                lastRowHasText = false;\n                lastRowIndentL = -1;\n\n                if (currRegion) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = null;\n                }\n\n            }\n        }\n\n        if (currRegion) {\n            currRegion.p.push(currP);\n            currRegion.y2 = r + 1;\n            currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n            if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                regions.push(currRegion);\n                seenRegions[currRegion.name] = currRegion;\n            } else {\n                existingRegion = seenRegions[currRegion.name];\n                existingRegion.p.contat(currRegion.p);\n            }\n\n            currRegion = null;\n        }\n\n        const captionsArray = [];\n\n        /* Loop thru regions */\n        for (r = 0; r < regions.length; ++r) {\n            const region = regions[r];\n\n            const cueID = 'sub_cea608_' + (captionId++);\n            const finalDiv = document.createElement('div');\n            finalDiv.id = cueID;\n            const cueRegionProperties = getRegionProperties(region);\n            finalDiv.style.cssText = 'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' + cueRegionProperties;\n\n            const bodyDiv = document.createElement('div');\n            bodyDiv.className = 'paragraph bodyStyle';\n            bodyDiv.style.cssText = getStyle(videoElement);\n\n            const cueUniWrapper = document.createElement('div');\n            cueUniWrapper.className = 'cueUniWrapper';\n            cueUniWrapper.style.cssText = 'unicode-bidi: normal; direction: ltr;';\n\n            for (let p = 0; p < region.p.length; ++p) {\n                const ptag = region.p[p];\n                let lastSpanRow = 0;\n                for (s = 0; s < ptag.spans.length; ++s) {\n                    let span = ptag.spans[s];\n                    if (span.line.length > 0) {\n                        if ((s !== 0) && lastSpanRow != span.row) {\n                            const brElement = document.createElement('br');\n                            brElement.className = 'lineBreak';\n                            cueUniWrapper.appendChild(brElement);\n                        }\n                        let sameRow = false;\n                        if (lastSpanRow === span.row) {\n                            sameRow = true;\n                        }\n                        lastSpanRow = span.row;\n                        const spanStyle = styleStates[span.name];\n                        const spanElement = document.createElement('span');\n                        spanElement.className = 'spanPadding ' + span.name + ' customSpanColor';\n                        spanElement.style.cssText = getStyle(videoElement, spanStyle);\n                        /* If this is not the first span, and it's on the same\n                         * row as the last one */\n                        if ((s !== 0) && sameRow) {\n                            /* and it's the last span on this row */\n                            if (s === ptag.spans.length - 1) {\n                                /* trim only the right side */\n                                spanElement.textContent = rtrim(span.line);\n                            } else {\n                                /* don't trim at all */\n                                spanElement.textContent = span.line;\n                            }\n                        } else {\n                            /* if there is more than 1 span and this isn't the last span */\n                            if (ptag.spans.length > 1 && s < (ptag.spans.length - 1)) {\n                                /* Check if next text is on same row */\n                                if (span.row === ptag.spans[s + 1].row) {\n                                    /* Next element on same row, trim start */\n                                    spanElement.textContent = ltrim(span.line);\n                                } else {\n                                    /* Different rows, trim both */\n                                    spanElement.textContent = span.line.trim();\n                                }\n                            } else {\n                                spanElement.textContent = span.line.trim();\n                            }\n                        }\n                        cueUniWrapper.appendChild(spanElement);\n                    }\n                }\n            }\n\n            bodyDiv.appendChild(cueUniWrapper);\n            finalDiv.appendChild(bodyDiv);\n\n            const fontSize = { 'bodyStyle': ['%', 90] };\n            for (const s in styleStates) {\n                if (styleStates.hasOwnProperty(s)) {\n                    fontSize[s] = ['%', 90];\n                }\n            }\n\n            captionsArray.push({ type: 'html',\n                                start: startTime,\n                                end: endTime,\n                                cueHTMLElement: finalDiv,\n                                cueID: cueID,\n                                cellResolution: [32, 15],\n                                isFromCEA608: true,\n                                fontSize: fontSize,\n                                lineHeight: {},\n                                linePadding: {}\n                               });\n        }\n        return captionsArray;\n    }\n\n    instance = {\n        createHTMLCaptionsFromScreen: createHTMLCaptionsFromScreen\n    };\n    return instance;\n}\n\nEmbeddedTextHtmlRender.__dashjs_factory_name = 'EmbeddedTextHtmlRender';\nexport default FactoryMaker.getSingletonFactory(EmbeddedTextHtmlRender);\n"]},"metadata":{},"sourceType":"script"}