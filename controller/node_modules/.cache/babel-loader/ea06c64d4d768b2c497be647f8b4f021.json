{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\nCopyright 2011-2013 Abdulla Abdurakhmanov\nOriginal sources are available at https://code.google.com/p/x2js/\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/*\nFurther modified for dashjs to:\n- keep track of children nodes in order in attribute __children.\n- add type conversion matchers\n- re-add ignoreRoot\n- allow zero-length attributePrefix\n- don't add white-space text nodes\n- remove explicit RequireJS support\n*/\n\nfunction X2JS(config) {\n  'use strict';\n\n  var VERSION = \"1.2.0\";\n  config = config || {};\n  initConfigDefaults();\n  initRequiredPolyfills();\n\n  function initConfigDefaults() {\n    if (config.escapeMode === undefined) {\n      config.escapeMode = true;\n    }\n\n    if (config.attributePrefix === undefined) {\n      config.attributePrefix = \"_\";\n    }\n\n    config.arrayAccessForm = config.arrayAccessForm || \"none\";\n    config.emptyNodeForm = config.emptyNodeForm || \"text\";\n\n    if (config.enableToStringFunc === undefined) {\n      config.enableToStringFunc = true;\n    }\n\n    config.arrayAccessFormPaths = config.arrayAccessFormPaths || [];\n\n    if (config.skipEmptyTextNodesForObj === undefined) {\n      config.skipEmptyTextNodesForObj = true;\n    }\n\n    if (config.stripWhitespaces === undefined) {\n      config.stripWhitespaces = true;\n    }\n\n    config.datetimeAccessFormPaths = config.datetimeAccessFormPaths || [];\n\n    if (config.useDoubleQuotes === undefined) {\n      config.useDoubleQuotes = false;\n    }\n\n    config.xmlElementsFilter = config.xmlElementsFilter || [];\n    config.jsonPropertiesFilter = config.jsonPropertiesFilter || [];\n\n    if (config.keepCData === undefined) {\n      config.keepCData = false;\n    }\n\n    if (config.ignoreRoot === undefined) {\n      config.ignoreRoot = false;\n    }\n  }\n\n  var DOMNodeTypes = {\n    ELEMENT_NODE: 1,\n    TEXT_NODE: 3,\n    CDATA_SECTION_NODE: 4,\n    COMMENT_NODE: 8,\n    DOCUMENT_NODE: 9\n  };\n\n  function initRequiredPolyfills() {}\n\n  function getNodeLocalName(node) {\n    var nodeLocalName = node.localName;\n    if (nodeLocalName == null) // Yeah, this is IE!!\n      nodeLocalName = node.baseName;\n    if (nodeLocalName == null || nodeLocalName == \"\") // ==\"\" is IE too\n      nodeLocalName = node.nodeName;\n    return nodeLocalName;\n  }\n\n  function getNodePrefix(node) {\n    return node.prefix;\n  }\n\n  function escapeXmlChars(str) {\n    if (typeof str == \"string\") return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;');else return str;\n  }\n\n  function unescapeXmlChars(str) {\n    return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&apos;/g, \"'\").replace(/&amp;/g, '&');\n  }\n\n  function checkInStdFiltersArrayForm(stdFiltersArrayForm, obj, name, path) {\n    var idx = 0;\n\n    for (; idx < stdFiltersArrayForm.length; idx++) {\n      var filterPath = stdFiltersArrayForm[idx];\n\n      if (typeof filterPath === \"string\") {\n        if (filterPath == path) break;\n      } else if (filterPath instanceof RegExp) {\n        if (filterPath.test(path)) break;\n      } else if (typeof filterPath === \"function\") {\n        if (filterPath(obj, name, path)) break;\n      }\n    }\n\n    return idx != stdFiltersArrayForm.length;\n  }\n\n  function toArrayAccessForm(obj, childName, path) {\n    switch (config.arrayAccessForm) {\n      case \"property\":\n        if (!(obj[childName] instanceof Array)) obj[childName + \"_asArray\"] = [obj[childName]];else obj[childName + \"_asArray\"] = obj[childName];\n        break;\n\n      /*case \"none\":\n      break;*/\n    }\n\n    if (!(obj[childName] instanceof Array) && config.arrayAccessFormPaths.length > 0) {\n      if (checkInStdFiltersArrayForm(config.arrayAccessFormPaths, obj, childName, path)) {\n        obj[childName] = [obj[childName]];\n      }\n    }\n  }\n\n  function fromXmlDateTime(prop) {\n    // Implementation based up on http://stackoverflow.com/questions/8178598/xml-datetime-to-javascript-date-object\n    // Improved to support full spec and optional parts\n    var bits = prop.split(/[-T:+Z]/g);\n    var d = new Date(bits[0], bits[1] - 1, bits[2]);\n    var secondBits = bits[5].split(\"\\.\");\n    d.setHours(bits[3], bits[4], secondBits[0]);\n    if (secondBits.length > 1) d.setMilliseconds(secondBits[1]); // Get supplied time zone offset in minutes\n\n    if (bits[6] && bits[7]) {\n      var offsetMinutes = bits[6] * 60 + Number(bits[7]);\n      var sign = /\\d\\d-\\d\\d:\\d\\d$/.test(prop) ? '-' : '+'; // Apply the sign\n\n      offsetMinutes = 0 + (sign == '-' ? -1 * offsetMinutes : offsetMinutes); // Apply offset and local timezone\n\n      d.setMinutes(d.getMinutes() - offsetMinutes - d.getTimezoneOffset());\n    } else if (prop.indexOf(\"Z\", prop.length - 1) !== -1) {\n      d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds()));\n    } // d is now a local time equivalent to the supplied time\n\n\n    return d;\n  }\n\n  function checkFromXmlDateTimePaths(value, childName, fullPath) {\n    if (config.datetimeAccessFormPaths.length > 0) {\n      var path = fullPath.split(\"\\.#\")[0];\n\n      if (checkInStdFiltersArrayForm(config.datetimeAccessFormPaths, value, childName, path)) {\n        return fromXmlDateTime(value);\n      } else return value;\n    } else return value;\n  }\n\n  function checkXmlElementsFilter(obj, childType, childName, childPath) {\n    if (childType == DOMNodeTypes.ELEMENT_NODE && config.xmlElementsFilter.length > 0) {\n      return checkInStdFiltersArrayForm(config.xmlElementsFilter, obj, childName, childPath);\n    } else return true;\n  }\n\n  function parseDOMChildren(node, path) {\n    if (node.nodeType == DOMNodeTypes.DOCUMENT_NODE) {\n      var result = new Object();\n      var nodeChildren = node.childNodes; // Alternative for firstElementChild which is not supported in some environments\n\n      for (var cidx = 0; cidx < nodeChildren.length; cidx++) {\n        var child = nodeChildren[cidx];\n\n        if (child.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n          if (config.ignoreRoot) {\n            result = parseDOMChildren(child);\n          } else {\n            result = {};\n            var childName = getNodeLocalName(child);\n            result[childName] = parseDOMChildren(child);\n          }\n        }\n      }\n\n      return result;\n    } else if (node.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n      var result = new Object();\n      result.__cnt = 0;\n      var children = [];\n      var nodeChildren = node.childNodes; // Children nodes\n\n      for (var cidx = 0; cidx < nodeChildren.length; cidx++) {\n        var child = nodeChildren[cidx];\n        var childName = getNodeLocalName(child);\n\n        if (child.nodeType != DOMNodeTypes.COMMENT_NODE) {\n          var childPath = path + \".\" + childName;\n\n          if (checkXmlElementsFilter(result, child.nodeType, childName, childPath)) {\n            result.__cnt++;\n\n            if (result[childName] == null) {\n              var c = parseDOMChildren(child, childPath);\n\n              if (childName != \"#text\" || /[^\\s]/.test(c)) {\n                var o = {};\n                o[childName] = c;\n                children.push(o);\n              }\n\n              result[childName] = c;\n              toArrayAccessForm(result, childName, childPath);\n            } else {\n              if (result[childName] != null) {\n                if (!(result[childName] instanceof Array)) {\n                  result[childName] = [result[childName]];\n                  toArrayAccessForm(result, childName, childPath);\n                }\n              }\n\n              var c = parseDOMChildren(child, childPath);\n\n              if (childName != \"#text\" || /[^\\s]/.test(c)) {\n                // Don't add white-space text nodes\n                var o = {};\n                o[childName] = c;\n                children.push(o);\n              }\n\n              result[childName][result[childName].length] = c;\n            }\n          }\n        }\n      }\n\n      result.__children = children; // Attributes\n\n      var nodeLocalName = getNodeLocalName(node);\n\n      for (var aidx = 0; aidx < node.attributes.length; aidx++) {\n        var attr = node.attributes[aidx];\n        result.__cnt++;\n        var value2 = attr.value;\n\n        for (var m = 0, ml = config.matchers.length; m < ml; m++) {\n          var matchobj = config.matchers[m];\n          if (matchobj.test(attr, nodeLocalName)) value2 = matchobj.converter(attr.value);\n        }\n\n        result[config.attributePrefix + attr.name] = value2;\n      } // Node namespace prefix\n\n\n      var nodePrefix = getNodePrefix(node);\n\n      if (nodePrefix != null && nodePrefix != \"\") {\n        result.__cnt++;\n        result.__prefix = nodePrefix;\n      }\n\n      if (result[\"#text\"] != null) {\n        result.__text = result[\"#text\"];\n\n        if (result.__text instanceof Array) {\n          result.__text = result.__text.join(\"\\n\");\n        } //if(config.escapeMode)\n        //\tresult.__text = unescapeXmlChars(result.__text);\n\n\n        if (config.stripWhitespaces) result.__text = result.__text.trim();\n        delete result[\"#text\"];\n        if (config.arrayAccessForm == \"property\") delete result[\"#text_asArray\"];\n        result.__text = checkFromXmlDateTimePaths(result.__text, childName, path + \".\" + childName);\n      }\n\n      if (result[\"#cdata-section\"] != null) {\n        result.__cdata = result[\"#cdata-section\"];\n        delete result[\"#cdata-section\"];\n        if (config.arrayAccessForm == \"property\") delete result[\"#cdata-section_asArray\"];\n      }\n\n      if (result.__cnt == 0 && config.emptyNodeForm == \"text\") {\n        result = '';\n      } else if (result.__cnt == 1 && result.__text != null) {\n        result = result.__text;\n      } else if (result.__cnt == 1 && result.__cdata != null && !config.keepCData) {\n        result = result.__cdata;\n      } else if (result.__cnt > 1 && result.__text != null && config.skipEmptyTextNodesForObj) {\n        if (config.stripWhitespaces && result.__text == \"\" || result.__text.trim() == \"\") {\n          delete result.__text;\n        }\n      }\n\n      delete result.__cnt;\n\n      if (config.enableToStringFunc && (result.__text != null || result.__cdata != null)) {\n        result.toString = function () {\n          return (this.__text != null ? this.__text : '') + (this.__cdata != null ? this.__cdata : '');\n        };\n      }\n\n      return result;\n    } else if (node.nodeType == DOMNodeTypes.TEXT_NODE || node.nodeType == DOMNodeTypes.CDATA_SECTION_NODE) {\n      return node.nodeValue;\n    }\n  }\n\n  function startTag(jsonObj, element, attrList, closed) {\n    var resultStr = \"<\" + (jsonObj != null && jsonObj.__prefix != null ? jsonObj.__prefix + \":\" : \"\") + element;\n\n    if (attrList != null) {\n      for (var aidx = 0; aidx < attrList.length; aidx++) {\n        var attrName = attrList[aidx];\n        var attrVal = jsonObj[attrName];\n        if (config.escapeMode) attrVal = escapeXmlChars(attrVal);\n        resultStr += \" \" + attrName.substr(config.attributePrefix.length) + \"=\";\n        if (config.useDoubleQuotes) resultStr += '\"' + attrVal + '\"';else resultStr += \"'\" + attrVal + \"'\";\n      }\n    }\n\n    if (!closed) resultStr += \">\";else resultStr += \"/>\";\n    return resultStr;\n  }\n\n  function endTag(jsonObj, elementName) {\n    return \"</\" + (jsonObj.__prefix != null ? jsonObj.__prefix + \":\" : \"\") + elementName + \">\";\n  }\n\n  function endsWith(str, suffix) {\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\n  }\n\n  function jsonXmlSpecialElem(jsonObj, jsonObjField) {\n    if (config.arrayAccessForm == \"property\" && endsWith(jsonObjField.toString(), \"_asArray\") || jsonObjField.toString().indexOf(config.attributePrefix) == 0 || jsonObjField.toString().indexOf(\"__\") == 0 || jsonObj[jsonObjField] instanceof Function) return true;else return false;\n  }\n\n  function jsonXmlElemCount(jsonObj) {\n    var elementsCnt = 0;\n\n    if (jsonObj instanceof Object) {\n      for (var it in jsonObj) {\n        if (jsonXmlSpecialElem(jsonObj, it)) continue;\n        elementsCnt++;\n      }\n    }\n\n    return elementsCnt;\n  }\n\n  function checkJsonObjPropertiesFilter(jsonObj, propertyName, jsonObjPath) {\n    return config.jsonPropertiesFilter.length == 0 || jsonObjPath == \"\" || checkInStdFiltersArrayForm(config.jsonPropertiesFilter, jsonObj, propertyName, jsonObjPath);\n  }\n\n  function parseJSONAttributes(jsonObj) {\n    var attrList = [];\n\n    if (jsonObj instanceof Object) {\n      for (var ait in jsonObj) {\n        if (ait.toString().indexOf(\"__\") == -1 && ait.toString().indexOf(config.attributePrefix) == 0) {\n          attrList.push(ait);\n        }\n      }\n    }\n\n    return attrList;\n  }\n\n  function parseJSONTextAttrs(jsonTxtObj) {\n    var result = \"\";\n\n    if (jsonTxtObj.__cdata != null) {\n      result += \"<![CDATA[\" + jsonTxtObj.__cdata + \"]]>\";\n    }\n\n    if (jsonTxtObj.__text != null) {\n      if (config.escapeMode) result += escapeXmlChars(jsonTxtObj.__text);else result += jsonTxtObj.__text;\n    }\n\n    return result;\n  }\n\n  function parseJSONTextObject(jsonTxtObj) {\n    var result = \"\";\n\n    if (jsonTxtObj instanceof Object) {\n      result += parseJSONTextAttrs(jsonTxtObj);\n    } else if (jsonTxtObj != null) {\n      if (config.escapeMode) result += escapeXmlChars(jsonTxtObj);else result += jsonTxtObj;\n    }\n\n    return result;\n  }\n\n  function getJsonPropertyPath(jsonObjPath, jsonPropName) {\n    if (jsonObjPath === \"\") {\n      return jsonPropName;\n    } else return jsonObjPath + \".\" + jsonPropName;\n  }\n\n  function parseJSONArray(jsonArrRoot, jsonArrObj, attrList, jsonObjPath) {\n    var result = \"\";\n\n    if (jsonArrRoot.length == 0) {\n      result += startTag(jsonArrRoot, jsonArrObj, attrList, true);\n    } else {\n      for (var arIdx = 0; arIdx < jsonArrRoot.length; arIdx++) {\n        result += startTag(jsonArrRoot[arIdx], jsonArrObj, parseJSONAttributes(jsonArrRoot[arIdx]), false);\n        result += parseJSONObject(jsonArrRoot[arIdx], getJsonPropertyPath(jsonObjPath, jsonArrObj));\n        result += endTag(jsonArrRoot[arIdx], jsonArrObj);\n      }\n    }\n\n    return result;\n  }\n\n  function parseJSONObject(jsonObj, jsonObjPath) {\n    var result = \"\";\n    var elementsCnt = jsonXmlElemCount(jsonObj);\n\n    if (elementsCnt > 0) {\n      for (var it in jsonObj) {\n        if (jsonXmlSpecialElem(jsonObj, it) || jsonObjPath != \"\" && !checkJsonObjPropertiesFilter(jsonObj, it, getJsonPropertyPath(jsonObjPath, it))) continue;\n        var subObj = jsonObj[it];\n        var attrList = parseJSONAttributes(subObj);\n\n        if (subObj == null || subObj == undefined) {\n          result += startTag(subObj, it, attrList, true);\n        } else if (subObj instanceof Object) {\n          if (subObj instanceof Array) {\n            result += parseJSONArray(subObj, it, attrList, jsonObjPath);\n          } else if (subObj instanceof Date) {\n            result += startTag(subObj, it, attrList, false);\n            result += subObj.toISOString();\n            result += endTag(subObj, it);\n          } else {\n            var subObjElementsCnt = jsonXmlElemCount(subObj);\n\n            if (subObjElementsCnt > 0 || subObj.__text != null || subObj.__cdata != null) {\n              result += startTag(subObj, it, attrList, false);\n              result += parseJSONObject(subObj, getJsonPropertyPath(jsonObjPath, it));\n              result += endTag(subObj, it);\n            } else {\n              result += startTag(subObj, it, attrList, true);\n            }\n          }\n        } else {\n          result += startTag(subObj, it, attrList, false);\n          result += parseJSONTextObject(subObj);\n          result += endTag(subObj, it);\n        }\n      }\n    }\n\n    result += parseJSONTextObject(jsonObj);\n    return result;\n  }\n\n  this.parseXmlString = function (xmlDocStr) {\n    var isIEParser = window.ActiveXObject || \"ActiveXObject\" in window;\n\n    if (xmlDocStr === undefined) {\n      return null;\n    }\n\n    var xmlDoc;\n\n    if (window.DOMParser) {\n      var parser = new window.DOMParser();\n      var parsererrorNS = null;\n\n      try {\n        xmlDoc = parser.parseFromString(xmlDocStr, \"text/xml\");\n\n        if (xmlDoc.getElementsByTagNameNS(\"*\", \"parsererror\").length > 0) {\n          xmlDoc = null;\n        }\n      } catch (err) {\n        xmlDoc = null;\n      }\n    } else {\n      // IE :(\n      if (xmlDocStr.indexOf(\"<?\") == 0) {\n        xmlDocStr = xmlDocStr.substr(xmlDocStr.indexOf(\"?>\") + 2);\n      }\n\n      xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n      xmlDoc.async = \"false\";\n      xmlDoc.loadXML(xmlDocStr);\n    }\n\n    return xmlDoc;\n  };\n\n  this.asArray = function (prop) {\n    if (prop === undefined || prop == null) return [];else if (prop instanceof Array) return prop;else return [prop];\n  };\n\n  this.toXmlDateTime = function (dt) {\n    if (dt instanceof Date) return dt.toISOString();else if (typeof dt === 'number') return new Date(dt).toISOString();else return null;\n  };\n\n  this.asDateTime = function (prop) {\n    if (typeof prop == \"string\") {\n      return fromXmlDateTime(prop);\n    } else return prop;\n  };\n\n  this.xml2json = function (xmlDoc) {\n    return parseDOMChildren(xmlDoc);\n  };\n\n  this.xml_str2json = function (xmlDocStr) {\n    var xmlDoc = this.parseXmlString(xmlDocStr);\n    if (xmlDoc != null) return this.xml2json(xmlDoc);else return null;\n  };\n\n  this.json2xml_str = function (jsonObj) {\n    return parseJSONObject(jsonObj, \"\");\n  };\n\n  this.json2xml = function (jsonObj) {\n    var xmlDocStr = this.json2xml_str(jsonObj);\n    return this.parseXmlString(xmlDocStr);\n  };\n\n  this.getVersion = function () {\n    return VERSION;\n  };\n}\n\nexports.default = X2JS;","map":{"version":3,"mappings":"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","names":["X2JS","config","VERSION","initConfigDefaults","initRequiredPolyfills","escapeMode","undefined","attributePrefix","arrayAccessForm","emptyNodeForm","enableToStringFunc","arrayAccessFormPaths","skipEmptyTextNodesForObj","stripWhitespaces","datetimeAccessFormPaths","useDoubleQuotes","xmlElementsFilter","jsonPropertiesFilter","keepCData","ignoreRoot","DOMNodeTypes","ELEMENT_NODE","TEXT_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT_NODE","getNodeLocalName","node","nodeLocalName","localName","baseName","nodeName","getNodePrefix","prefix","escapeXmlChars","str","replace","unescapeXmlChars","checkInStdFiltersArrayForm","stdFiltersArrayForm","obj","name","path","idx","length","filterPath","RegExp","test","toArrayAccessForm","childName","Array","fromXmlDateTime","prop","bits","split","d","Date","secondBits","setHours","setMilliseconds","offsetMinutes","Number","sign","setMinutes","getMinutes","getTimezoneOffset","indexOf","UTC","getFullYear","getMonth","getDate","getHours","getSeconds","getMilliseconds","checkFromXmlDateTimePaths","value","fullPath","checkXmlElementsFilter","childType","childPath","parseDOMChildren","nodeType","result","Object","nodeChildren","childNodes","cidx","child","__cnt","children","c","o","push","__children","aidx","attributes","attr","value2","m","ml","matchers","matchobj","converter","nodePrefix","__prefix","__text","join","trim","__cdata","toString","nodeValue","startTag","jsonObj","element","attrList","closed","resultStr","attrName","attrVal","substr","endTag","elementName","endsWith","suffix","jsonXmlSpecialElem","jsonObjField","Function","jsonXmlElemCount","elementsCnt","it","checkJsonObjPropertiesFilter","propertyName","jsonObjPath","parseJSONAttributes","ait","parseJSONTextAttrs","jsonTxtObj","parseJSONTextObject","getJsonPropertyPath","jsonPropName","parseJSONArray","jsonArrRoot","jsonArrObj","arIdx","parseJSONObject","subObj","toISOString","subObjElementsCnt","parseXmlString","xmlDocStr","isIEParser","window","ActiveXObject","xmlDoc","DOMParser","parser","parsererrorNS","parseFromString","getElementsByTagNameNS","err","async","loadXML","asArray","toXmlDateTime","dt","asDateTime","xml2json","xml_str2json","json2xml_str","json2xml","getVersion"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/externals/xml2json.js"],"sourcesContent":["/*\n Copyright 2011-2013 Abdulla Abdurakhmanov\n Original sources are available at https://code.google.com/p/x2js/\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\n/*\n  Further modified for dashjs to:\n  - keep track of children nodes in order in attribute __children.\n  - add type conversion matchers\n  - re-add ignoreRoot\n  - allow zero-length attributePrefix\n  - don't add white-space text nodes\n  - remove explicit RequireJS support\n*/\n\nfunction X2JS(config) {\n    'use strict';\n\n    var VERSION = \"1.2.0\";\n\n    config = config || {};\n    initConfigDefaults();\n    initRequiredPolyfills();\n\n    function initConfigDefaults() {\n        if(config.escapeMode === undefined) {\n            config.escapeMode = true;\n        }\n\n        if (config.attributePrefix === undefined) {\n            config.attributePrefix = \"_\";\n        }\n\n        config.arrayAccessForm = config.arrayAccessForm || \"none\";\n        config.emptyNodeForm = config.emptyNodeForm || \"text\";\n\n        if(config.enableToStringFunc === undefined) {\n            config.enableToStringFunc = true;\n        }\n        config.arrayAccessFormPaths = config.arrayAccessFormPaths || [];\n        if(config.skipEmptyTextNodesForObj === undefined) {\n            config.skipEmptyTextNodesForObj = true;\n        }\n        if(config.stripWhitespaces === undefined) {\n            config.stripWhitespaces = true;\n        }\n        config.datetimeAccessFormPaths = config.datetimeAccessFormPaths || [];\n\n        if(config.useDoubleQuotes === undefined) {\n            config.useDoubleQuotes = false;\n        }\n\n        config.xmlElementsFilter = config.xmlElementsFilter || [];\n        config.jsonPropertiesFilter = config.jsonPropertiesFilter || [];\n\n        if(config.keepCData === undefined) {\n            config.keepCData = false;\n        }\n\n        if (config.ignoreRoot === undefined) {\n            config.ignoreRoot = false;\n        }\n    }\n\n    var DOMNodeTypes = {\n        ELEMENT_NODE \t   : 1,\n        TEXT_NODE    \t   : 3,\n        CDATA_SECTION_NODE : 4,\n        COMMENT_NODE\t   : 8,\n        DOCUMENT_NODE \t   : 9\n    };\n\n    function initRequiredPolyfills() {\n    }\n\n    function getNodeLocalName( node ) {\n        var nodeLocalName = node.localName;\n        if(nodeLocalName == null) // Yeah, this is IE!!\n            nodeLocalName = node.baseName;\n        if(nodeLocalName == null || nodeLocalName==\"\") // ==\"\" is IE too\n            nodeLocalName = node.nodeName;\n        return nodeLocalName;\n    }\n\n    function getNodePrefix(node) {\n        return node.prefix;\n    }\n\n    function escapeXmlChars(str) {\n        if(typeof(str) == \"string\")\n            return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;');\n        else\n            return str;\n    }\n\n    function unescapeXmlChars(str) {\n        return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&apos;/g, \"'\").replace(/&amp;/g, '&');\n    }\n\n    function checkInStdFiltersArrayForm(stdFiltersArrayForm, obj, name, path) {\n        var idx = 0;\n        for(; idx < stdFiltersArrayForm.length; idx++) {\n            var filterPath = stdFiltersArrayForm[idx];\n            if( typeof filterPath === \"string\" ) {\n                if(filterPath == path)\n                    break;\n            }\n            else\n            if( filterPath instanceof RegExp) {\n                if(filterPath.test(path))\n                    break;\n            }\n            else\n            if( typeof filterPath === \"function\") {\n                if(filterPath(obj, name, path))\n                    break;\n            }\n        }\n        return idx!=stdFiltersArrayForm.length;\n    }\n\n    function toArrayAccessForm(obj, childName, path) {\n        switch(config.arrayAccessForm) {\n            case \"property\":\n                if(!(obj[childName] instanceof Array))\n                    obj[childName+\"_asArray\"] = [obj[childName]];\n                else\n                    obj[childName+\"_asArray\"] = obj[childName];\n                break;\n            /*case \"none\":\n                break;*/\n        }\n\n        if(!(obj[childName] instanceof Array) && config.arrayAccessFormPaths.length > 0) {\n            if(checkInStdFiltersArrayForm(config.arrayAccessFormPaths, obj, childName, path)) {\n                obj[childName] = [obj[childName]];\n            }\n        }\n    }\n\n    function fromXmlDateTime(prop) {\n        // Implementation based up on http://stackoverflow.com/questions/8178598/xml-datetime-to-javascript-date-object\n        // Improved to support full spec and optional parts\n        var bits = prop.split(/[-T:+Z]/g);\n\n        var d = new Date(bits[0], bits[1]-1, bits[2]);\n        var secondBits = bits[5].split(\"\\.\");\n        d.setHours(bits[3], bits[4], secondBits[0]);\n        if(secondBits.length>1)\n            d.setMilliseconds(secondBits[1]);\n\n        // Get supplied time zone offset in minutes\n        if(bits[6] && bits[7]) {\n            var offsetMinutes = bits[6] * 60 + Number(bits[7]);\n            var sign = /\\d\\d-\\d\\d:\\d\\d$/.test(prop)? '-' : '+';\n\n            // Apply the sign\n            offsetMinutes = 0 + (sign == '-'? -1 * offsetMinutes : offsetMinutes);\n\n            // Apply offset and local timezone\n            d.setMinutes(d.getMinutes() - offsetMinutes - d.getTimezoneOffset())\n        }\n        else\n            if(prop.indexOf(\"Z\", prop.length - 1) !== -1) {\n                d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds()));\n            }\n\n        // d is now a local time equivalent to the supplied time\n        return d;\n    }\n\n    function checkFromXmlDateTimePaths(value, childName, fullPath) {\n        if(config.datetimeAccessFormPaths.length > 0) {\n            var path = fullPath.split(\"\\.#\")[0];\n            if(checkInStdFiltersArrayForm(config.datetimeAccessFormPaths, value, childName, path)) {\n                return fromXmlDateTime(value);\n            }\n            else\n                return value;\n        }\n        else\n            return value;\n    }\n\n    function checkXmlElementsFilter(obj, childType, childName, childPath) {\n        if( childType == DOMNodeTypes.ELEMENT_NODE && config.xmlElementsFilter.length > 0) {\n            return checkInStdFiltersArrayForm(config.xmlElementsFilter, obj, childName, childPath);\n        }\n        else\n            return true;\n    }\n\n    function parseDOMChildren( node, path ) {\n        if(node.nodeType == DOMNodeTypes.DOCUMENT_NODE) {\n            var result = new Object;\n            var nodeChildren = node.childNodes;\n            // Alternative for firstElementChild which is not supported in some environments\n            for(var cidx=0; cidx <nodeChildren.length; cidx++) {\n                var child = nodeChildren[cidx];\n                if(child.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n                    if (config.ignoreRoot) {\n                        result = parseDOMChildren(child);\n                    } else {\n                        result = {};\n                        var childName = getNodeLocalName(child);\n                        result[childName] = parseDOMChildren(child);\n                    }\n                }\n            }\n            return result;\n        }\n        else\n        if(node.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n            var result = new Object;\n            result.__cnt=0;\n\n            var children = [];\n            var nodeChildren = node.childNodes;\n\n            // Children nodes\n            for(var cidx=0; cidx <nodeChildren.length; cidx++) {\n                var child = nodeChildren[cidx];\n                var childName = getNodeLocalName(child);\n\n                if(child.nodeType!= DOMNodeTypes.COMMENT_NODE) {\n                    var childPath = path+\".\"+childName;\n                    if (checkXmlElementsFilter(result,child.nodeType,childName,childPath)) {\n                        result.__cnt++;\n                        if(result[childName] == null) {\n                            var c = parseDOMChildren(child, childPath);\n                            if (childName != \"#text\" || /[^\\s]/.test(c)) {\n                                var o = {};\n                                o[childName] = c;\n                                children.push(o);\n                            }\n                            result[childName] = c;\n                            toArrayAccessForm(result, childName, childPath);\n                        }\n                        else {\n                            if(result[childName] != null) {\n                                if( !(result[childName] instanceof Array)) {\n                                    result[childName] = [result[childName]];\n                                    toArrayAccessForm(result, childName, childPath);\n                                }\n                            }\n\n                            var c = parseDOMChildren(child, childPath);\n                            if (childName != \"#text\" || /[^\\s]/.test(c)) { // Don't add white-space text nodes\n                                var o = {};\n                                o[childName] = c;\n                                children.push( o );\n                            }\n                            (result[childName])[result[childName].length] = c;\n                        }\n                    }\n                }\n            }\n\n            result.__children = children;\n\n            // Attributes\n            var nodeLocalName = getNodeLocalName(node)\n            for(var aidx=0; aidx <node.attributes.length; aidx++) {\n                var attr = node.attributes[aidx];\n                result.__cnt++;\n\n                var value2 = attr.value;\n                for(var m=0, ml=config.matchers.length; m < ml; m++) {\n                    var matchobj = config.matchers[m];\n                    if (matchobj.test(attr, nodeLocalName))\n                        value2 = matchobj.converter(attr.value);\n                }\n\n                result[config.attributePrefix+attr.name]=value2;\n            }\n\n            // Node namespace prefix\n            var nodePrefix = getNodePrefix(node);\n            if(nodePrefix!=null && nodePrefix!=\"\") {\n                result.__cnt++;\n                result.__prefix=nodePrefix;\n            }\n\n            if(result[\"#text\"]!=null) {\n                result.__text = result[\"#text\"];\n                if(result.__text instanceof Array) {\n                    result.__text = result.__text.join(\"\\n\");\n                }\n                //if(config.escapeMode)\n                //\tresult.__text = unescapeXmlChars(result.__text);\n                if(config.stripWhitespaces)\n                    result.__text = result.__text.trim();\n                delete result[\"#text\"];\n                if(config.arrayAccessForm==\"property\")\n                    delete result[\"#text_asArray\"];\n                result.__text = checkFromXmlDateTimePaths(result.__text, childName, path+\".\"+childName);\n            }\n            if(result[\"#cdata-section\"]!=null) {\n                result.__cdata = result[\"#cdata-section\"];\n                delete result[\"#cdata-section\"];\n                if(config.arrayAccessForm==\"property\")\n                    delete result[\"#cdata-section_asArray\"];\n            }\n\n            if( result.__cnt == 0 && config.emptyNodeForm==\"text\" ) {\n                result = '';\n            }\n            else\n            if( result.__cnt == 1 && result.__text!=null  ) {\n                result = result.__text;\n            }\n            else\n            if( result.__cnt == 1 && result.__cdata!=null && !config.keepCData  ) {\n                result = result.__cdata;\n            }\n            else\n            if ( result.__cnt > 1 && result.__text!=null && config.skipEmptyTextNodesForObj) {\n                if( (config.stripWhitespaces && result.__text==\"\") || (result.__text.trim()==\"\")) {\n                    delete result.__text;\n                }\n            }\n            delete result.__cnt;\n\n            if( config.enableToStringFunc && (result.__text!=null || result.__cdata!=null )) {\n                result.toString = function() {\n                    return (this.__text!=null? this.__text:'')+( this.__cdata!=null ? this.__cdata:'');\n                };\n            }\n\n            return result;\n        }\n        else\n        if(node.nodeType == DOMNodeTypes.TEXT_NODE || node.nodeType == DOMNodeTypes.CDATA_SECTION_NODE) {\n            return node.nodeValue;\n        }\n    }\n\n    function startTag(jsonObj, element, attrList, closed) {\n        var resultStr = \"<\"+ ( (jsonObj!=null && jsonObj.__prefix!=null)? (jsonObj.__prefix+\":\"):\"\") + element;\n        if(attrList!=null) {\n            for(var aidx = 0; aidx < attrList.length; aidx++) {\n                var attrName = attrList[aidx];\n                var attrVal = jsonObj[attrName];\n                if(config.escapeMode)\n                    attrVal=escapeXmlChars(attrVal);\n                resultStr+=\" \"+attrName.substr(config.attributePrefix.length)+\"=\";\n                if(config.useDoubleQuotes)\n                    resultStr+='\"'+attrVal+'\"';\n                else\n                    resultStr+=\"'\"+attrVal+\"'\";\n            }\n        }\n        if(!closed)\n            resultStr+=\">\";\n        else\n            resultStr+=\"/>\";\n        return resultStr;\n    }\n\n    function endTag(jsonObj,elementName) {\n        return \"</\"+ (jsonObj.__prefix!=null? (jsonObj.__prefix+\":\"):\"\")+elementName+\">\";\n    }\n\n    function endsWith(str, suffix) {\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    }\n\n    function jsonXmlSpecialElem ( jsonObj, jsonObjField ) {\n        if((config.arrayAccessForm==\"property\" && endsWith(jsonObjField.toString(),(\"_asArray\")))\n                || jsonObjField.toString().indexOf(config.attributePrefix)==0\n                || jsonObjField.toString().indexOf(\"__\")==0\n                || (jsonObj[jsonObjField] instanceof Function) )\n            return true;\n        else\n            return false;\n    }\n\n    function jsonXmlElemCount ( jsonObj ) {\n        var elementsCnt = 0;\n        if(jsonObj instanceof Object ) {\n            for( var it in jsonObj  ) {\n                if(jsonXmlSpecialElem ( jsonObj, it) )\n                    continue;\n                elementsCnt++;\n            }\n        }\n        return elementsCnt;\n    }\n\n    function checkJsonObjPropertiesFilter(jsonObj, propertyName, jsonObjPath) {\n        return config.jsonPropertiesFilter.length == 0\n            || jsonObjPath==\"\"\n            || checkInStdFiltersArrayForm(config.jsonPropertiesFilter, jsonObj, propertyName, jsonObjPath);\n    }\n\n    function parseJSONAttributes ( jsonObj ) {\n        var attrList = [];\n        if(jsonObj instanceof Object ) {\n            for( var ait in jsonObj  ) {\n                if(ait.toString().indexOf(\"__\")== -1 && ait.toString().indexOf(config.attributePrefix)==0) {\n                    attrList.push(ait);\n                }\n            }\n        }\n        return attrList;\n    }\n\n    function parseJSONTextAttrs ( jsonTxtObj ) {\n        var result =\"\";\n\n        if(jsonTxtObj.__cdata!=null) {\n            result+=\"<![CDATA[\"+jsonTxtObj.__cdata+\"]]>\";\n        }\n\n        if(jsonTxtObj.__text!=null) {\n            if(config.escapeMode)\n                result+=escapeXmlChars(jsonTxtObj.__text);\n            else\n                result+=jsonTxtObj.__text;\n        }\n        return result;\n    }\n\n    function parseJSONTextObject ( jsonTxtObj ) {\n        var result =\"\";\n\n        if( jsonTxtObj instanceof Object ) {\n            result+=parseJSONTextAttrs ( jsonTxtObj );\n        }\n        else\n            if(jsonTxtObj!=null) {\n                if(config.escapeMode)\n                    result+=escapeXmlChars(jsonTxtObj);\n                else\n                    result+=jsonTxtObj;\n            }\n\n        return result;\n    }\n\n    function getJsonPropertyPath(jsonObjPath, jsonPropName) {\n        if (jsonObjPath===\"\") {\n            return jsonPropName;\n        }\n        else\n            return jsonObjPath+\".\"+jsonPropName;\n    }\n\n    function parseJSONArray ( jsonArrRoot, jsonArrObj, attrList, jsonObjPath ) {\n        var result = \"\";\n        if(jsonArrRoot.length == 0) {\n            result+=startTag(jsonArrRoot, jsonArrObj, attrList, true);\n        }\n        else {\n            for(var arIdx = 0; arIdx < jsonArrRoot.length; arIdx++) {\n                result+=startTag(jsonArrRoot[arIdx], jsonArrObj, parseJSONAttributes(jsonArrRoot[arIdx]), false);\n                result+=parseJSONObject(jsonArrRoot[arIdx], getJsonPropertyPath(jsonObjPath,jsonArrObj));\n                result+=endTag(jsonArrRoot[arIdx],jsonArrObj);\n            }\n        }\n        return result;\n    }\n\n    function parseJSONObject ( jsonObj, jsonObjPath ) {\n        var result = \"\";\n\n        var elementsCnt = jsonXmlElemCount ( jsonObj );\n\n        if(elementsCnt > 0) {\n            for( var it in jsonObj ) {\n\n                if(jsonXmlSpecialElem ( jsonObj, it) || (jsonObjPath!=\"\" && !checkJsonObjPropertiesFilter(jsonObj, it, getJsonPropertyPath(jsonObjPath,it))) )\n                    continue;\n\n                var subObj = jsonObj[it];\n\n                var attrList = parseJSONAttributes( subObj )\n\n                if(subObj == null || subObj == undefined) {\n                    result+=startTag(subObj, it, attrList, true);\n                }\n                else\n                if(subObj instanceof Object) {\n\n                    if(subObj instanceof Array) {\n                        result+=parseJSONArray( subObj, it, attrList, jsonObjPath );\n                    }\n                    else if(subObj instanceof Date) {\n                        result+=startTag(subObj, it, attrList, false);\n                        result+=subObj.toISOString();\n                        result+=endTag(subObj,it);\n                    }\n                    else {\n                        var subObjElementsCnt = jsonXmlElemCount ( subObj );\n                        if(subObjElementsCnt > 0 || subObj.__text!=null || subObj.__cdata!=null) {\n                            result+=startTag(subObj, it, attrList, false);\n                            result+=parseJSONObject(subObj, getJsonPropertyPath(jsonObjPath,it));\n                            result+=endTag(subObj,it);\n                        }\n                        else {\n                            result+=startTag(subObj, it, attrList, true);\n                        }\n                    }\n                }\n                else {\n                    result+=startTag(subObj, it, attrList, false);\n                    result+=parseJSONTextObject(subObj);\n                    result+=endTag(subObj,it);\n                }\n            }\n        }\n        result+=parseJSONTextObject(jsonObj);\n\n        return result;\n    }\n\n    this.parseXmlString = function(xmlDocStr) {\n        var isIEParser = window.ActiveXObject || \"ActiveXObject\" in window;\n        if (xmlDocStr === undefined) {\n            return null;\n        }\n        var xmlDoc;\n        if (window.DOMParser) {\n            var parser=new window.DOMParser();\n            var parsererrorNS = null;\n            try {\n                xmlDoc = parser.parseFromString( xmlDocStr, \"text/xml\" );\n                if(xmlDoc.getElementsByTagNameNS(\"*\", \"parsererror\").length > 0) {\n                    xmlDoc = null;\n                }\n            }\n            catch(err) {\n                xmlDoc = null;\n            }\n        }\n        else {\n            // IE :(\n            if(xmlDocStr.indexOf(\"<?\")==0) {\n                xmlDocStr = xmlDocStr.substr( xmlDocStr.indexOf(\"?>\") + 2 );\n            }\n            xmlDoc=new ActiveXObject(\"Microsoft.XMLDOM\");\n            xmlDoc.async=\"false\";\n            xmlDoc.loadXML(xmlDocStr);\n        }\n        return xmlDoc;\n    };\n\n    this.asArray = function(prop) {\n        if (prop === undefined || prop == null)\n            return [];\n        else\n        if(prop instanceof Array)\n            return prop;\n        else\n            return [prop];\n    };\n\n    this.toXmlDateTime = function(dt) {\n        if(dt instanceof Date)\n            return dt.toISOString();\n        else\n        if(typeof(dt) === 'number' )\n            return new Date(dt).toISOString();\n        else\n            return null;\n    };\n\n    this.asDateTime = function(prop) {\n        if(typeof(prop) == \"string\") {\n            return fromXmlDateTime(prop);\n        }\n        else\n            return prop;\n    };\n\n    this.xml2json = function (xmlDoc) {\n        return parseDOMChildren ( xmlDoc );\n    };\n\n    this.xml_str2json = function (xmlDocStr) {\n        var xmlDoc = this.parseXmlString(xmlDocStr);\n        if(xmlDoc!=null)\n            return this.xml2json(xmlDoc);\n        else\n            return null;\n    };\n\n    this.json2xml_str = function (jsonObj) {\n        return parseJSONObject ( jsonObj, \"\" );\n    };\n\n    this.json2xml = function (jsonObj) {\n        var xmlDocStr = this.json2xml_str (jsonObj);\n        return this.parseXmlString(xmlDocStr);\n    };\n\n    this.getVersion = function () {\n        return VERSION;\n    };\n}\n\nexport default X2JS;\n"]},"metadata":{},"sourceType":"script"}