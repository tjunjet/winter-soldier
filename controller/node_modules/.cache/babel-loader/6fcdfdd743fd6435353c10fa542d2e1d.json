{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ObjectUtils = require('../utils/ObjectUtils');\n\nvar _ObjectUtils2 = _interopRequireDefault(_ObjectUtils);\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nvar DEFAULT_INDEX = NaN;\n\nvar Node = function Node(_baseUrls, _selectedIdx) {\n  _classCallCheck(this, Node);\n\n  this.data = {\n    baseUrls: _baseUrls || null,\n    selectedIdx: _selectedIdx || DEFAULT_INDEX\n  };\n  this.children = [];\n};\n\nfunction BaseURLTreeModel() {\n  var instance = void 0,\n      root = void 0,\n      adapter = void 0;\n  var context = this.context;\n  var objectUtils = (0, _ObjectUtils2.default)(context).getInstance();\n\n  function setup() {\n    reset();\n  }\n\n  function setConfig(config) {\n    if (config.adapter) {\n      adapter = config.adapter;\n    }\n  }\n\n  function checkConfig() {\n    if (!adapter || !adapter.hasOwnProperty('getBaseURLsFromElement') || !adapter.hasOwnProperty('getRepresentationSortFunction')) {\n      throw new Error('setConfig function has to be called previously');\n    }\n  }\n\n  function updateChildData(node, index, element) {\n    var baseUrls = adapter.getBaseURLsFromElement(element);\n\n    if (!node[index]) {\n      node[index] = new Node(baseUrls);\n    } else {\n      if (!objectUtils.areEqual(baseUrls, node[index].data.baseUrls)) {\n        node[index].data.baseUrls = baseUrls;\n        node[index].data.selectedIdx = DEFAULT_INDEX;\n      }\n    }\n  }\n\n  function getBaseURLCollectionsFromManifest(manifest) {\n    checkConfig();\n    var baseUrls = adapter.getBaseURLsFromElement(manifest);\n\n    if (!objectUtils.areEqual(baseUrls, root.data.baseUrls)) {\n      root.data.baseUrls = baseUrls;\n      root.data.selectedIdx = DEFAULT_INDEX;\n    }\n\n    if (manifest && manifest.Period_asArray) {\n      manifest.Period_asArray.forEach(function (p, pi) {\n        updateChildData(root.children, pi, p);\n\n        if (p.AdaptationSet_asArray) {\n          p.AdaptationSet_asArray.forEach(function (a, ai) {\n            updateChildData(root.children[pi].children, ai, a);\n\n            if (a.Representation_asArray) {\n              a.Representation_asArray.sort(adapter.getRepresentationSortFunction()).forEach(function (r, ri) {\n                updateChildData(root.children[pi].children[ai].children, ri, r);\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n\n  function walk(callback, node) {\n    var target = node || root;\n    callback(target.data);\n\n    if (target.children) {\n      target.children.forEach(function (child) {\n        return walk(callback, child);\n      });\n    }\n  }\n\n  function invalidateSelectedIndexes(serviceLocation) {\n    walk(function (data) {\n      if (!isNaN(data.selectedIdx)) {\n        if (serviceLocation === data.baseUrls[data.selectedIdx].serviceLocation) {\n          data.selectedIdx = DEFAULT_INDEX;\n        }\n      }\n    });\n  }\n\n  function update(manifest) {\n    getBaseURLCollectionsFromManifest(manifest);\n  }\n\n  function reset() {\n    root = new Node();\n  }\n\n  function getForPath(path) {\n    var target = root;\n    var nodes = [target.data];\n\n    if (path) {\n      path.forEach(function (p) {\n        target = target.children[p];\n\n        if (target) {\n          nodes.push(target.data);\n        }\n      });\n    }\n\n    return nodes.filter(function (n) {\n      return n.baseUrls.length;\n    });\n  }\n\n  instance = {\n    reset: reset,\n    update: update,\n    getForPath: getForPath,\n    invalidateSelectedIndexes: invalidateSelectedIndexes,\n    setConfig: setConfig\n  };\n  setup();\n  return instance;\n}\n\nBaseURLTreeModel.__dashjs_factory_name = 'BaseURLTreeModel';\nexports.default = _FactoryMaker2.default.getClassFactory(BaseURLTreeModel);","map":{"version":3,"mappings":"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","names":["DEFAULT_INDEX","NaN","Node","_baseUrls","_selectedIdx","_classCallCheck","data","baseUrls","selectedIdx","children","BaseURLTreeModel","instance","root","adapter","context","objectUtils","getInstance","setup","reset","setConfig","config","checkConfig","hasOwnProperty","Error","updateChildData","node","index","element","getBaseURLsFromElement","areEqual","getBaseURLCollectionsFromManifest","manifest","Period_asArray","forEach","p","pi","AdaptationSet_asArray","a","ai","Representation_asArray","sort","getRepresentationSortFunction","r","ri","walk","callback","target","child","invalidateSelectedIndexes","serviceLocation","isNaN","update","getForPath","path","nodes","push","filter","n","length","__dashjs_factory_name","FactoryMaker","getClassFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/models/BaseURLTreeModel.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst DEFAULT_INDEX = NaN;\n\nclass Node {\n    constructor(_baseUrls, _selectedIdx) {\n        this.data = {\n            baseUrls: _baseUrls || null,\n            selectedIdx: _selectedIdx || DEFAULT_INDEX\n        };\n        this.children = [];\n    }\n}\n\nfunction BaseURLTreeModel() {\n    let instance,\n        root,\n        adapter;\n\n    const context = this.context;\n    const objectUtils = ObjectUtils(context).getInstance();\n\n    function setup() {\n        reset();\n    }\n\n    function setConfig(config) {\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n    }\n\n    function checkConfig() {\n        if (!adapter || !adapter.hasOwnProperty('getBaseURLsFromElement') || !adapter.hasOwnProperty('getRepresentationSortFunction')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function updateChildData(node, index, element) {\n        const baseUrls = adapter.getBaseURLsFromElement(element);\n\n        if (!node[index]) {\n            node[index] = new Node(baseUrls);\n        } else {\n            if (!objectUtils.areEqual(baseUrls, node[index].data.baseUrls)) {\n                node[index].data.baseUrls = baseUrls;\n                node[index].data.selectedIdx = DEFAULT_INDEX;\n            }\n        }\n    }\n\n    function getBaseURLCollectionsFromManifest(manifest) {\n        checkConfig();\n        const baseUrls = adapter.getBaseURLsFromElement(manifest);\n\n        if (!objectUtils.areEqual(baseUrls, root.data.baseUrls)) {\n            root.data.baseUrls = baseUrls;\n            root.data.selectedIdx = DEFAULT_INDEX;\n        }\n\n        if (manifest && manifest.Period_asArray) {\n            manifest.Period_asArray.forEach((p, pi) => {\n                updateChildData(root.children, pi, p);\n\n                if (p.AdaptationSet_asArray) {\n                    p.AdaptationSet_asArray.forEach((a, ai) => {\n                        updateChildData(root.children[pi].children, ai, a);\n\n                        if (a.Representation_asArray) {\n                            a.Representation_asArray.sort(\n                                adapter.getRepresentationSortFunction()\n                            ).forEach((r, ri) => {\n                                updateChildData(\n                                    root.children[pi].children[ai].children,\n                                    ri,\n                                    r\n                                );\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    function walk(callback, node) {\n        const target = node || root;\n\n        callback(target.data);\n\n        if (target.children) {\n            target.children.forEach(child => walk(callback, child));\n        }\n    }\n\n    function invalidateSelectedIndexes(serviceLocation) {\n        walk((data) => {\n            if (!isNaN(data.selectedIdx)) {\n                if (serviceLocation === data.baseUrls[data.selectedIdx].serviceLocation) {\n                    data.selectedIdx = DEFAULT_INDEX;\n                }\n            }\n        });\n    }\n\n    function update(manifest) {\n        getBaseURLCollectionsFromManifest(manifest);\n    }\n\n    function reset() {\n        root = new Node();\n    }\n\n    function getForPath(path) {\n        let target = root;\n        const nodes = [target.data];\n\n        if (path) {\n            path.forEach(p => {\n                target = target.children[p];\n\n                if (target) {\n                    nodes.push(target.data);\n                }\n            });\n        }\n\n        return nodes.filter(n => n.baseUrls.length);\n    }\n\n    instance = {\n        reset: reset,\n        update: update,\n        getForPath: getForPath,\n        invalidateSelectedIndexes: invalidateSelectedIndexes,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLTreeModel.__dashjs_factory_name = 'BaseURLTreeModel';\nexport default FactoryMaker.getClassFactory(BaseURLTreeModel);\n"]},"metadata":{},"sourceType":"script"}