{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nvar _HTTPLoader = require('../../streaming/net/HTTPLoader');\n\nvar _HTTPLoader2 = _interopRequireDefault(_HTTPLoader);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* @module\n* @description Choose right url loader for scheme\n* @ignore\n*/\n\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\n\nfunction SchemeLoaderFactory() {\n  var instance = void 0;\n  var schemeLoaderMap = void 0;\n\n  function registerLoader(scheme, loader) {\n    schemeLoaderMap[scheme] = loader;\n  }\n\n  function unregisterLoader(scheme) {\n    if (schemeLoaderMap[scheme]) {\n      delete schemeLoaderMap[scheme];\n    }\n  }\n\n  function unregisterAllLoader() {\n    schemeLoaderMap = {};\n  }\n\n  function getLoader(url) {\n    // iterates through schemeLoaderMap to find a loader for the scheme\n    for (var scheme in schemeLoaderMap) {\n      if (schemeLoaderMap.hasOwnProperty(scheme) && url.startsWith(scheme)) {\n        return schemeLoaderMap[scheme];\n      }\n    }\n\n    return _HTTPLoader2.default;\n  }\n\n  function reset() {\n    unregisterAllLoader();\n  }\n\n  function setup() {\n    reset();\n  }\n\n  setup();\n  instance = {\n    getLoader: getLoader,\n    registerLoader: registerLoader,\n    unregisterLoader: unregisterLoader,\n    unregisterAllLoader: unregisterAllLoader,\n    reset: reset\n  };\n  return instance;\n}\n\nSchemeLoaderFactory.__dashjs_factory_name = 'SchemeLoaderFactory';\n\nvar factory = _FactoryMaker2.default.getSingletonFactory(SchemeLoaderFactory);\n\nexports.default = factory;","map":{"version":3,"mappings":";;;;;;AA8BA;;;;AACA;;;;;;;;AAEA;AAAA;;;;;;AAjCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,SAASA,mBAAT,GAA+B;EAE3B,IAAIC,iBAAJ;EAEA,IAAIC,wBAAJ;;EAEA,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,MAAhC,EAAwC;IACpCH,gBAAgBE,MAAhBF,IAA0BG,MAA1BH;EAGJ;;EAAA,SAASI,gBAAT,CAA0BF,MAA1B,EAAkC;IAC9B,IAAIF,gBAAgBE,MAAhBF,CAAJ,EAA6B;MACzB,OAAOA,gBAAgBE,MAAhBF,CAAP;IAEP;EAED;;EAAA,SAASK,mBAAT,GAA+B;IAC3BL,kBAAkB,EAAlBA;EAGJ;;EAAA,SAASM,SAAT,CAAmBC,GAAnB,EAAwB;IAEpB;IACA,KAAK,IAAIL,MAAT,IAAmBF,eAAnB,EAAoC;MAChC,IAAIA,gBAAgBQ,cAAhBR,CAA+BE,MAA/BF,KAA0CO,IAAIE,UAAJF,CAAeL,MAAfK,CAA9C,EAAsE;QAClE,OAAOP,gBAAgBE,MAAhBF,CAAP;MAEP;IAED;;IAAA,OAAOU,oBAAP;EAGJ;;EAAA,SAASC,KAAT,GAAiB;IACbN;EAGJ;;EAAA,SAASO,KAAT,GAAiB;IACbD;EAGJC;;EAAAA;EAEAb,WAAW;IACPO,WAAWA,SADJ;IAEPL,gBAAgBA,cAFT;IAGPG,kBAAkBA,gBAHX;IAIPC,qBAAqBA,mBAJd;IAKPM,OAAOA;EALA,CAAXZ;EAQA,OAAOA,QAAP;AAGJD;;AAAAA,oBAAoBe,qBAApBf,GAA4C,qBAA5CA;;AACA,IAAMgB,UAAUC,uBAAaC,mBAAbD,CAAiCjB,mBAAjCiB,CAAhB;;kBACeD,O","names":["SchemeLoaderFactory","instance","schemeLoaderMap","registerLoader","scheme","loader","unregisterLoader","unregisterAllLoader","getLoader","url","hasOwnProperty","startsWith","HTTPLoader","reset","setup","__dashjs_factory_name","factory","FactoryMaker","getSingletonFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/net/SchemeLoaderFactory.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker';\nimport HTTPLoader from '../../streaming/net/HTTPLoader';\n\n/**\n * @module\n * @description Choose right url loader for scheme\n * @ignore\n */\nfunction SchemeLoaderFactory() {\n\n    let instance;\n\n    let schemeLoaderMap;\n\n    function registerLoader(scheme, loader) {\n        schemeLoaderMap[scheme] = loader;\n    }\n\n    function unregisterLoader(scheme) {\n        if (schemeLoaderMap[scheme]) {\n            delete schemeLoaderMap[scheme];\n        }\n    }\n\n    function unregisterAllLoader() {\n        schemeLoaderMap = {};\n    }\n\n    function getLoader(url) {\n\n        // iterates through schemeLoaderMap to find a loader for the scheme\n        for (var scheme in schemeLoaderMap) {\n            if (schemeLoaderMap.hasOwnProperty(scheme) && url.startsWith(scheme)) {\n                return schemeLoaderMap[scheme];\n            }\n        }\n\n        return HTTPLoader;\n    }\n\n    function reset() {\n        unregisterAllLoader();\n    }\n\n    function setup() {\n        reset();\n    }\n\n    setup();\n\n    instance = {\n        getLoader: getLoader,\n        registerLoader: registerLoader,\n        unregisterLoader: unregisterLoader,\n        unregisterAllLoader: unregisterAllLoader,\n        reset: reset\n    };\n\n    return instance;\n}\n\nSchemeLoaderFactory.__dashjs_factory_name = 'SchemeLoaderFactory';\nconst factory = FactoryMaker.getSingletonFactory(SchemeLoaderFactory);\nexport default factory;\n"]},"metadata":{},"sourceType":"script"}