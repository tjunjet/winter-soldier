{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _FactoryMaker = require('../../core/FactoryMaker');\n\nvar _FactoryMaker2 = _interopRequireDefault(_FactoryMaker);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar NO_CHANGE = -1;\n/**\n* The copyright in this software is being made available under the BSD License,\n* included below. This software may be subject to other third party and contributor\n* rights, including patent rights, and no such rights are granted under this license.\n*\n* Copyright (c) 2013, Dash Industry Forum.\n* All rights reserved.\n*\n* Redistribution and use in source and binary forms, with or without modification,\n* are permitted provided that the following conditions are met:\n*  * Redistributions of source code must retain the above copyright notice, this\n*  list of conditions and the following disclaimer.\n*  * Redistributions in binary form must reproduce the above copyright notice,\n*  this list of conditions and the following disclaimer in the documentation and/or\n*  other materials provided with the distribution.\n*  * Neither the name of Dash Industry Forum nor the names of its\n*  contributors may be used to endorse or promote products derived from this software\n*  without specific prior written permission.\n*\n*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n*  POSSIBILITY OF SUCH DAMAGE.\n*/\n\nvar PRIORITY = {\n  DEFAULT: 0.5,\n  STRONG: 1,\n  WEAK: 0\n};\n\nfunction SwitchRequest(q, r, p) {\n  //TODO refactor all the calls to this to use config to be like everything else.\n  var instance = void 0,\n      quality = void 0,\n      priority = void 0,\n      reason = void 0; // check priority value\n\n  function getPriority(p) {\n    var ret = PRIORITY.DEFAULT; // check that p is one of declared priority value\n\n    if (p === PRIORITY.DEFAULT || p === PRIORITY.STRONG || p === PRIORITY.WEAK) {\n      ret = p;\n    }\n\n    return ret;\n  } // init attributes\n\n\n  quality = q === undefined ? NO_CHANGE : q;\n  priority = getPriority(p);\n  reason = r === undefined ? null : r;\n  instance = {\n    quality: quality,\n    reason: reason,\n    priority: priority\n  };\n  return instance;\n}\n\nSwitchRequest.__dashjs_factory_name = 'SwitchRequest';\n\nvar factory = _FactoryMaker2.default.getClassFactory(SwitchRequest);\n\nfactory.NO_CHANGE = NO_CHANGE;\nfactory.PRIORITY = PRIORITY;\n\n_FactoryMaker2.default.updateClassFactory(SwitchRequest.__dashjs_factory_name, factory);\n\nexports.default = factory;","map":{"version":3,"mappings":";;;;;;AA+BA;;;;;;;;AAEA;;AAAA,IAAMA,YAAY,CAAC,CAAnB;AAjCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,IAAMC,WAAW;EACbC,SAAS,GADI;EAEbC,QAAQ,CAFK;EAGbC,MAAM;AAHO,CAAjB;;AAMA,SAASC,aAAT,CAAuBC,CAAvB,EAA0BC,CAA1B,EAA6BC,CAA7B,EAAgC;EAC5B;EACA,IAAIC,iBAAJ;EAAA,IACIC,gBADJ;EAAA,IAEIC,iBAFJ;EAAA,IAGIC,eAHJ,CAF4B,CAO5B;;EACA,SAASC,WAAT,CAAqBL,CAArB,EAAwB;IACpB,IAAIM,MAAMb,SAASC,OAAnB,CADoB,CAGpB;;IACA,IAAIM,MAAMP,SAASC,OAAfM,IAA0BA,MAAMP,SAASE,MAAzCK,IAAmDA,MAAMP,SAASG,IAAtE,EAA4E;MACxEU,MAAMN,CAANM;IAEJ;;IAAA,OAAOA,GAAP;EAGJ,CAlB4B,CAkB5B;;;EACAJ,UAAWJ,MAAMS,SAANT,GAAmBN,SAAnBM,GAA+BA,CAA1CI;EACAC,WAAWE,YAAYL,CAAZK,CAAXF;EACAC,SAAUL,MAAMQ,SAANR,GAAmB,IAAnBA,GAA0BA,CAApCK;EAEAH,WAAW;IACPC,SAASA,OADF;IAEPE,QAAQA,MAFD;IAGPD,UAAUA;EAHH,CAAXF;EAMA,OAAOA,QAAP;AAGJJ;;AAAAA,cAAcW,qBAAdX,GAAsC,eAAtCA;;AACA,IAAMY,UAAUC,uBAAaC,eAAbD,CAA6Bb,aAA7Ba,CAAhB;;AACAD,QAAQjB,SAARiB,GAAoBjB,SAApBiB;AACAA,QAAQhB,QAARgB,GAAmBhB,QAAnBgB;;AACAC,uBAAaE,kBAAbF,CAAgCb,cAAcW,qBAA9CE,EAAqED,OAArEC;;kBAEeD,O","names":["NO_CHANGE","PRIORITY","DEFAULT","STRONG","WEAK","SwitchRequest","q","r","p","instance","quality","priority","reason","getPriority","ret","undefined","__dashjs_factory_name","factory","FactoryMaker","getClassFactory","updateClassFactory"],"sources":["/home/landsys/react-node-video-streaming/client/node_modules/dashjs/src/streaming/rules/SwitchRequest.js"],"sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker';\n\nconst NO_CHANGE = -1;\nconst PRIORITY = {\n    DEFAULT: 0.5,\n    STRONG: 1,\n    WEAK: 0\n};\n\nfunction SwitchRequest(q, r, p) {\n    //TODO refactor all the calls to this to use config to be like everything else.\n    let instance,\n        quality,\n        priority,\n        reason;\n\n    // check priority value\n    function getPriority(p) {\n        let ret = PRIORITY.DEFAULT;\n\n        // check that p is one of declared priority value\n        if (p === PRIORITY.DEFAULT || p === PRIORITY.STRONG || p === PRIORITY.WEAK) {\n            ret = p;\n        }\n        return ret;\n    }\n\n    // init attributes\n    quality = (q === undefined) ? NO_CHANGE : q;\n    priority = getPriority(p);\n    reason = (r === undefined) ? null : r;\n\n    instance = {\n        quality: quality,\n        reason: reason,\n        priority: priority\n    };\n\n    return instance;\n}\n\nSwitchRequest.__dashjs_factory_name = 'SwitchRequest';\nconst factory = FactoryMaker.getClassFactory(SwitchRequest);\nfactory.NO_CHANGE = NO_CHANGE;\nfactory.PRIORITY = PRIORITY;\nFactoryMaker.updateClassFactory(SwitchRequest.__dashjs_factory_name, factory);\n\nexport default factory;\n"]},"metadata":{},"sourceType":"script"}